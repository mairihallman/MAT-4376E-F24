<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (polls_oct_29)' inline='true' name='federated.04ffu1j02e8qc41eumik80l1mg96' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='polls_oct_29' name='excel-direct.1xcyfwa0sroe0j1dz31610e8vwcm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/emmafalls/Desktop/mat4376.projects/MAT-4376E-F24-1/1-data-visualization/data-p1/polls_oct_29.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1xcyfwa0sroe0j1dz31610e8vwcm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:I54:no:A1:I54:0' header='yes' outcome='6'>
            <column datatype='date' name='day' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='real' name='rawpoll_clinton' ordinal='2' />
            <column datatype='real' name='rawpoll_trump' ordinal='3' />
            <column datatype='real' name='adjpoll_clinton' ordinal='4' />
            <column datatype='real' name='adjpoll_trump' ordinal='5' />
            <column datatype='real' name='c_minus_t_raw' ordinal='6' />
            <column datatype='real' name='c_minus_t_adj' ordinal='7' />
            <column datatype='integer' name='electoral_college' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1xcyfwa0sroe0j1dz31610e8vwcm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:I54:no:A1:I54:0' header='yes' outcome='6'>
            <column datatype='date' name='day' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='real' name='rawpoll_clinton' ordinal='2' />
            <column datatype='real' name='rawpoll_trump' ordinal='3' />
            <column datatype='real' name='adjpoll_clinton' ordinal='4' />
            <column datatype='real' name='adjpoll_trump' ordinal='5' />
            <column datatype='real' name='c_minus_t_raw' ordinal='6' />
            <column datatype='real' name='c_minus_t_adj' ordinal='7' />
            <column datatype='integer' name='electoral_college' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I54:no:A1:I54:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>7</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_005487D2685844FBB43B58871F91E35E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_005487D2685844FBB43B58871F91E35E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rawpoll_clinton</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rawpoll_clinton]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>rawpoll_clinton</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_005487D2685844FBB43B58871F91E35E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rawpoll_trump</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rawpoll_trump]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>rawpoll_trump</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_005487D2685844FBB43B58871F91E35E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjpoll_clinton</remote-name>
            <remote-type>5</remote-type>
            <local-name>[adjpoll_clinton]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>adjpoll_clinton</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_005487D2685844FBB43B58871F91E35E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjpoll_trump</remote-name>
            <remote-type>5</remote-type>
            <local-name>[adjpoll_trump]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>adjpoll_trump</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_005487D2685844FBB43B58871F91E35E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_minus_t_raw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_minus_t_raw]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>c_minus_t_raw</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_005487D2685844FBB43B58871F91E35E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_minus_t_adj</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_minus_t_adj]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>c_minus_t_adj</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_005487D2685844FBB43B58871F91E35E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>electoral_college</remote-name>
            <remote-type>20</remote-type>
            <local-name>[electoral_college]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>electoral_college</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_005487D2685844FBB43B58871F91E35E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[state]' new-bin='true'>
          <bin default-name='true' value='&quot;Alabama, Alaska, Arizona and 23 more&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Alaska&quot;</value>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Indiana&quot;</value>
            <value>&quot;Iowa&quot;</value>
            <value>&quot;Kansas&quot;</value>
            <value>&quot;Kentucky&quot;</value>
            <value>&quot;Louisiana&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;Missouri&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;Nebraska&quot;</value>
            <value>&quot;North Carolina&quot;</value>
            <value>&quot;North Dakota&quot;</value>
            <value>&quot;Ohio&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;South Dakota&quot;</value>
            <value>&quot;Tennessee&quot;</value>
            <value>&quot;Texas&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;West Virginia&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;California, Colorado, Connecticut and 24 more&quot;'>
            <value>&quot;California&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;District of Columbia&quot;</value>
            <value>&quot;Florida&quot;</value>
            <value>&quot;Hawaii&quot;</value>
            <value>&quot;Illinois&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maine CD-1&quot;</value>
            <value>&quot;Maine CD-2&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;Michigan&quot;</value>
            <value>&quot;Minnesota&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;New Jersey&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;New York&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Pennsylvania&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;Vermont&quot;</value>
            <value>&quot;Virginia&quot;</value>
            <value>&quot;Washington&quot;</value>
            <value>&quot;Wisconsin&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_005487D2685844FBB43B58871F91E35E]' role='measure' type='quantitative' />
      <column caption='Adjpoll Clinton' datatype='real' name='[adjpoll_clinton]' role='measure' type='quantitative' />
      <column caption='Adjpoll Trump' datatype='real' name='[adjpoll_trump]' role='measure' type='quantitative' />
      <column caption='C Minus T Adj' datatype='real' name='[c_minus_t_adj]' role='measure' type='quantitative' />
      <column caption='C Minus T Raw' datatype='real' name='[c_minus_t_raw]' role='measure' type='quantitative' />
      <column caption='Day' datatype='date' name='[day]' role='dimension' type='ordinal' />
      <column caption='Electoral College' datatype='integer' name='[electoral_college]' role='measure' type='quantitative' />
      <column caption='Rawpoll Clinton' datatype='real' name='[rawpoll_clinton]' role='measure' type='quantitative' />
      <column caption='Rawpoll Trump' datatype='real' name='[rawpoll_trump]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[adjpoll_clinton]' derivation='Sum' name='[sum:adjpoll_clinton:qk]' pivot='key' type='quantitative' />
      <column-instance column='[electoral_college]' derivation='Sum' name='[sum:electoral_college:ok]' pivot='key' type='ordinal' />
      <column-instance column='[electoral_college]' derivation='Sum' name='[sum:electoral_college:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.04ffu1j02e8qc41eumik80l1mg96].[sum:adjpoll_clinton:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.04ffu1j02e8qc41eumik80l1mg96].[sum:electoral_college:ok]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04ffu1j02e8qc41eumik80l1mg96].[sum:electoral_college:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' type='shape' />
          <encoding attr='color' field='[State (group)]' palette='blue_10_0' type='palette'>
            <map to='#388bff'>
              <bucket>&quot;California, Colorado, Connecticut and 24 more&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#f15b50'>
              <bucket>&quot;Alabama, Alaska, Arizona and 23 more&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;California&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_005487D2685844FBB43B58871F91E35E'>
            <properties context=''>
              <relation connection='excel-direct.1xcyfwa0sroe0j1dz31610e8vwcm' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:I54:no:A1:I54:0' header='yes' outcome='6'>
                  <column datatype='date' name='day' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='real' name='rawpoll_clinton' ordinal='2' />
                  <column datatype='real' name='rawpoll_trump' ordinal='3' />
                  <column datatype='real' name='adjpoll_clinton' ordinal='4' />
                  <column datatype='real' name='adjpoll_trump' ordinal='5' />
                  <column datatype='real' name='c_minus_t_raw' ordinal='6' />
                  <column datatype='real' name='c_minus_t_adj' ordinal='7' />
                  <column datatype='integer' name='electoral_college' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='all_states_agg_by_day_all_grades (1)' inline='true' name='federated.1m47soe0p0r3p112ydp9v1t63mi7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_states_agg_by_day_all_grades (1)' name='textscan.14s9u6k0ja16k5144j1iv0nh5rte'>
            <connection class='textscan' directory='/Users/emmafalls/Downloads' filename='all_states_agg_by_day_all_grades (1).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.14s9u6k0ja16k5144j1iv0nh5rte' name='all_states_agg_by_day_all_grades (1).csv' table='[all_states_agg_by_day_all_grades (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' name='day' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='string' name='state' ordinal='2' />
            <column datatype='real' name='rawpoll_clinton' ordinal='3' />
            <column datatype='real' name='rawpoll_trump' ordinal='4' />
            <column datatype='real' name='adjpoll_clinton' ordinal='5' />
            <column datatype='real' name='adjpoll_trump' ordinal='6' />
            <column datatype='real' name='c_minus_t_raw' ordinal='7' />
            <column datatype='real' name='c_minus_t_adj' ordinal='8' />
            <column datatype='real' name='electoral_college' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.14s9u6k0ja16k5144j1iv0nh5rte' name='all_states_agg_by_day_all_grades (1).csv' table='[all_states_agg_by_day_all_grades (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' name='day' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='string' name='state' ordinal='2' />
            <column datatype='real' name='rawpoll_clinton' ordinal='3' />
            <column datatype='real' name='rawpoll_trump' ordinal='4' />
            <column datatype='real' name='adjpoll_clinton' ordinal='5' />
            <column datatype='real' name='adjpoll_trump' ordinal='6' />
            <column datatype='real' name='c_minus_t_raw' ordinal='7' />
            <column datatype='real' name='c_minus_t_adj' ordinal='8' />
            <column datatype='real' name='electoral_college' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_states_agg_by_day_all_grades (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>133</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades (1).csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades (1).csv_E6EB1843F8624D4BA249DE6B130C564F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades (1).csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades (1).csv_E6EB1843F8624D4BA249DE6B130C564F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades (1).csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades (1).csv_E6EB1843F8624D4BA249DE6B130C564F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rawpoll_clinton</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rawpoll_clinton]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades (1).csv]</parent-name>
            <remote-alias>rawpoll_clinton</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades (1).csv_E6EB1843F8624D4BA249DE6B130C564F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rawpoll_trump</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rawpoll_trump]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades (1).csv]</parent-name>
            <remote-alias>rawpoll_trump</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades (1).csv_E6EB1843F8624D4BA249DE6B130C564F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjpoll_clinton</remote-name>
            <remote-type>5</remote-type>
            <local-name>[adjpoll_clinton]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades (1).csv]</parent-name>
            <remote-alias>adjpoll_clinton</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades (1).csv_E6EB1843F8624D4BA249DE6B130C564F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjpoll_trump</remote-name>
            <remote-type>5</remote-type>
            <local-name>[adjpoll_trump]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades (1).csv]</parent-name>
            <remote-alias>adjpoll_trump</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades (1).csv_E6EB1843F8624D4BA249DE6B130C564F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_minus_t_raw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_minus_t_raw]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades (1).csv]</parent-name>
            <remote-alias>c_minus_t_raw</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades (1).csv_E6EB1843F8624D4BA249DE6B130C564F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_minus_t_adj</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_minus_t_adj]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades (1).csv]</parent-name>
            <remote-alias>c_minus_t_adj</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades (1).csv_E6EB1843F8624D4BA249DE6B130C564F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>electoral_college</remote-name>
            <remote-type>5</remote-type>
            <local-name>[electoral_college]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades (1).csv]</parent-name>
            <remote-alias>electoral_college</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades (1).csv_E6EB1843F8624D4BA249DE6B130C564F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Day &amp; State (group Nov 4)' datatype='string' name='[Day &amp; State (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Day &amp; State]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;(2016-11-04, Alabama), (2016-11-04, Alaska), (2016-11-04, Arkansas) and 21 more&quot;'>
            <value>(#2016-11-04#,&quot;Alabama&quot;)</value>
            <value>(#2016-11-04#,&quot;Alaska&quot;)</value>
            <value>(#2016-11-04#,&quot;Arkansas&quot;)</value>
            <value>(#2016-11-04#,&quot;Georgia&quot;)</value>
            <value>(#2016-11-04#,&quot;Idaho&quot;)</value>
            <value>(#2016-11-04#,&quot;Indiana&quot;)</value>
            <value>(#2016-11-04#,&quot;Iowa&quot;)</value>
            <value>(#2016-11-04#,&quot;Kansas&quot;)</value>
            <value>(#2016-11-04#,&quot;Kentucky&quot;)</value>
            <value>(#2016-11-04#,&quot;Louisiana&quot;)</value>
            <value>(#2016-11-04#,&quot;Mississippi&quot;)</value>
            <value>(#2016-11-04#,&quot;Missouri&quot;)</value>
            <value>(#2016-11-04#,&quot;Montana&quot;)</value>
            <value>(#2016-11-04#,&quot;Nebraska&quot;)</value>
            <value>(#2016-11-04#,&quot;North Dakota&quot;)</value>
            <value>(#2016-11-04#,&quot;Ohio&quot;)</value>
            <value>(#2016-11-04#,&quot;Oklahoma&quot;)</value>
            <value>(#2016-11-04#,&quot;South Carolina&quot;)</value>
            <value>(#2016-11-04#,&quot;South Dakota&quot;)</value>
            <value>(#2016-11-04#,&quot;Tennessee&quot;)</value>
            <value>(#2016-11-04#,&quot;Texas&quot;)</value>
            <value>(#2016-11-04#,&quot;Utah&quot;)</value>
            <value>(#2016-11-04#,&quot;West Virginia&quot;)</value>
            <value>(#2016-11-04#,&quot;Wyoming&quot;)</value>
          </bin>
          <bin default-name='true' value='&quot;(2016-11-04, Arizona), (2016-11-04, California), (2016-11-04, Colorado) and 25 more&quot;'>
            <value>(#2016-11-04#,&quot;Arizona&quot;)</value>
            <value>(#2016-11-04#,&quot;California&quot;)</value>
            <value>(#2016-11-04#,&quot;Colorado&quot;)</value>
            <value>(#2016-11-04#,&quot;Connecticut&quot;)</value>
            <value>(#2016-11-04#,&quot;Delaware&quot;)</value>
            <value>(#2016-11-04#,&quot;District of Columbia&quot;)</value>
            <value>(#2016-11-04#,&quot;Florida&quot;)</value>
            <value>(#2016-11-04#,&quot;Hawaii&quot;)</value>
            <value>(#2016-11-04#,&quot;Illinois&quot;)</value>
            <value>(#2016-11-04#,&quot;Maine&quot;)</value>
            <value>(#2016-11-04#,&quot;Maryland&quot;)</value>
            <value>(#2016-11-04#,&quot;Massachusetts&quot;)</value>
            <value>(#2016-11-04#,&quot;Michigan&quot;)</value>
            <value>(#2016-11-04#,&quot;Minnesota&quot;)</value>
            <value>(#2016-11-04#,&quot;Nevada&quot;)</value>
            <value>(#2016-11-04#,&quot;New Hampshire&quot;)</value>
            <value>(#2016-11-04#,&quot;New Jersey&quot;)</value>
            <value>(#2016-11-04#,&quot;New Mexico&quot;)</value>
            <value>(#2016-11-04#,&quot;New York&quot;)</value>
            <value>(#2016-11-04#,&quot;North Carolina&quot;)</value>
            <value>(#2016-11-04#,&quot;Oregon&quot;)</value>
            <value>(#2016-11-04#,&quot;Pennsylvania&quot;)</value>
            <value>(#2016-11-04#,&quot;Rhode Island&quot;)</value>
            <value>(#2016-11-04#,&quot;U.S.&quot;)</value>
            <value>(#2016-11-04#,&quot;Vermont&quot;)</value>
            <value>(#2016-11-04#,&quot;Virginia&quot;)</value>
            <value>(#2016-11-04#,&quot;Washington&quot;)</value>
            <value>(#2016-11-04#,&quot;Wisconsin&quot;)</value>
          </bin>
        </calculation>
      </column>
      <column caption='State (group Oct 26)' datatype='string' name='[State (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[state]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Alabama, Alaska, Arizona and 24 more&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Alaska&quot;</value>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;Florida&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Indiana&quot;</value>
            <value>&quot;Iowa&quot;</value>
            <value>&quot;Kansas&quot;</value>
            <value>&quot;Kentucky&quot;</value>
            <value>&quot;Louisiana&quot;</value>
            <value>&quot;Maine CD-2&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;Missouri&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;Nebraska&quot;</value>
            <value>&quot;North Dakota&quot;</value>
            <value>&quot;Ohio&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;South Dakota&quot;</value>
            <value>&quot;Tennessee&quot;</value>
            <value>&quot;Texas&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;West Virginia&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;California, Colorado, Connecticut and 24 more&quot;'>
            <value>&quot;California&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;District of Columbia&quot;</value>
            <value>&quot;Hawaii&quot;</value>
            <value>&quot;Illinois&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maine CD-1&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;Michigan&quot;</value>
            <value>&quot;Minnesota&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;New Jersey&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;New York&quot;</value>
            <value>&quot;North Carolina&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Pennsylvania&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;U.S.&quot;</value>
            <value>&quot;Vermont&quot;</value>
            <value>&quot;Virginia&quot;</value>
            <value>&quot;Washington&quot;</value>
            <value>&quot;Wisconsin&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='State (group Sept 25)' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[state]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Alabama, Alaska, Arizona and 27 more&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Alaska&quot;</value>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;Florida&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Indiana&quot;</value>
            <value>&quot;Kansas&quot;</value>
            <value>&quot;Kentucky&quot;</value>
            <value>&quot;Louisiana&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;Missouri&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;Nebraska&quot;</value>
            <value>&quot;Nebraska CD-1&quot;</value>
            <value>&quot;Nebraska CD-2&quot;</value>
            <value>&quot;Nebraska CD-3&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;North Carolina&quot;</value>
            <value>&quot;North Dakota&quot;</value>
            <value>&quot;Ohio&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;South Dakota&quot;</value>
            <value>&quot;Tennessee&quot;</value>
            <value>&quot;Texas&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;West Virginia&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;California, Colorado, Connecticut and 22 more&quot;'>
            <value>&quot;California&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;District of Columbia&quot;</value>
            <value>&quot;Hawaii&quot;</value>
            <value>&quot;Illinois&quot;</value>
            <value>&quot;Iowa&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;Michigan&quot;</value>
            <value>&quot;Minnesota&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;New Jersey&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;New York&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Pennsylvania&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;U.S.&quot;</value>
            <value>&quot;Vermont&quot;</value>
            <value>&quot;Virginia&quot;</value>
            <value>&quot;Washington&quot;</value>
            <value>&quot;Wisconsin&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='all_states_agg_by_day_all_grades (1).csv' datatype='table' name='[__tableau_internal_object_id__].[all_states_agg_by_day_all_grades (1).csv_E6EB1843F8624D4BA249DE6B130C564F]' role='measure' type='quantitative' />
      <column caption='Adjpoll Clinton' datatype='real' name='[adjpoll_clinton]' role='measure' type='quantitative' />
      <column caption='Adjpoll Trump' datatype='real' name='[adjpoll_trump]' role='measure' type='quantitative' />
      <column caption='C Minus T Adj' datatype='real' name='[c_minus_t_adj]' role='measure' type='quantitative' />
      <column caption='C Minus T Raw' datatype='real' name='[c_minus_t_raw]' role='measure' type='quantitative' />
      <column caption='Day' datatype='date' name='[day]' role='dimension' type='ordinal' />
      <column caption='Electoral College' datatype='real' name='[electoral_college]' role='measure' type='quantitative' />
      <column caption='Rawpoll Clinton' datatype='real' name='[rawpoll_clinton]' role='measure' type='quantitative' />
      <column caption='Rawpoll Trump' datatype='real' name='[rawpoll_trump]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <group auto-hidden='true' hidden='true' name='[Day &amp; State]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[day]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[State (group)]' type='palette'>
            <map to='#388bff'>
              <bucket>&quot;California, Colorado, Connecticut and 22 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f15b50'>
              <bucket>&quot;Alabama, Alaska, Arizona and 27 more&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[State (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;California, Colorado, Connecticut and 19 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona, California, Colorado and 25 more&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[State (group) 3]' type='palette'>
            <map to='#388bff'>
              <bucket>&quot;Arizona, California, Colorado and 25 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f15b50'>
              <bucket>&quot;Alabama, Alaska, Arkansas and 21 more&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[State (group) 1]' type='palette'>
            <map to='#388bff'>
              <bucket>&quot;California, Colorado, Connecticut and 24 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f15b50'>
              <bucket>&quot;Alabama, Alaska, Arizona and 24 more&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Day &amp; State (group)]' type='palette'>
            <map to='#388bff'>
              <bucket>&quot;(2016-11-04, Arizona), (2016-11-04, California), (2016-11-04, Colorado) and 25 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f15b50'>
              <bucket>&quot;(2016-11-04, Alabama), (2016-11-04, Alaska), (2016-11-04, Arkansas) and 21 more&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all_states_agg_by_day_all_grades (1).csv' id='all_states_agg_by_day_all_grades (1).csv_E6EB1843F8624D4BA249DE6B130C564F'>
            <properties context=''>
              <relation connection='textscan.14s9u6k0ja16k5144j1iv0nh5rte' name='all_states_agg_by_day_all_grades (1).csv' table='[all_states_agg_by_day_all_grades (1)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='date' name='day' ordinal='0' />
                  <column datatype='string' name='F2' ordinal='1' />
                  <column datatype='string' name='state' ordinal='2' />
                  <column datatype='real' name='rawpoll_clinton' ordinal='3' />
                  <column datatype='real' name='rawpoll_trump' ordinal='4' />
                  <column datatype='real' name='adjpoll_clinton' ordinal='5' />
                  <column datatype='real' name='adjpoll_trump' ordinal='6' />
                  <column datatype='real' name='c_minus_t_raw' ordinal='7' />
                  <column datatype='real' name='c_minus_t_adj' ordinal='8' />
                  <column datatype='real' name='electoral_college' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Oct 26'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_states_agg_by_day_all_grades (1)' name='federated.1m47soe0p0r3p112ydp9v1t63mi7' />
          </datasources>
          <datasource-dependencies datasource='federated.1m47soe0p0r3p112ydp9v1t63mi7'>
            <column caption='State (group Oct 26)' datatype='string' name='[State (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Alabama, Alaska, Arizona and 24 more&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Maine CD-2&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;California, Colorado, Connecticut and 24 more&quot;'>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maine CD-1&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;U.S.&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Adjpoll Clinton' datatype='real' name='[adjpoll_clinton]' role='measure' type='quantitative' />
            <column caption='Adjpoll Trump' datatype='real' name='[adjpoll_trump]' role='measure' type='quantitative' />
            <column caption='C Minus T Adj' datatype='real' name='[c_minus_t_adj]' role='measure' type='quantitative' />
            <column caption='Day' datatype='date' name='[day]' role='dimension' type='ordinal' />
            <column caption='Electoral College' datatype='real' name='[electoral_college]' role='measure' type='quantitative' />
            <column-instance column='[day]' derivation='None' name='[none:day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[adjpoll_clinton]' derivation='Sum' name='[sum:adjpoll_clinton:qk]' pivot='key' type='quantitative' />
            <column-instance column='[adjpoll_trump]' derivation='Sum' name='[sum:adjpoll_trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[c_minus_t_adj]' derivation='Sum' name='[sum:c_minus_t_adj:qk]' pivot='key' type='quantitative' />
            <column-instance column='[electoral_college]' derivation='Sum' name='[sum:electoral_college:ok]' pivot='key' type='ordinal' />
            <column-instance column='[day]' derivation='Year' name='[yr:day:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:qk]' included-values='in-range'>
            <min>#2016-10-26#</min>
            <max>#2016-10-26#</max>
          </filter>
          <filter class='categorical' column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Maine CD-1&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Maine CD-2&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:qk]</column>
            <column>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_trump:qk]' field-type='quantitative' max='66.065496815006725' min='7.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_clinton:qk]' field-type='quantitative' max='82.006093098776745' min='18.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:electoral_college:ok]' field-type='ordinal' max-size='1' min-size='0.106171' type='catsize' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:electoral_college:ok]' />
              <text column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:state:nk]' />
              <lod column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[yr:day:ok]' />
              <lod column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:c_minus_t_adj:qk]' />
              <color column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[State (group) 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.8837499618530273' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='833' />
                <format attr='maxwidth' value='833' />
                <format attr='minheight' value='535' />
                <format attr='maxheight' value='535' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='833' />
                <format attr='maxwidth' value='833' />
                <format attr='minheight' value='535' />
                <format attr='maxheight' value='535' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_clinton:qk]</rows>
        <cols>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_trump:qk]</cols>
      </table>
      <simple-id uuid='{2767E5C9-5059-4EA2-9858-3CC69D72452E}' />
    </worksheet>
    <worksheet name='Oct 29'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (polls_oct_29)' name='federated.04ffu1j02e8qc41eumik80l1mg96' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04ffu1j02e8qc41eumik80l1mg96'>
            <column datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state]' new-bin='true'>
                <bin default-name='true' value='&quot;Alabama, Alaska, Arizona and 23 more&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;California, Colorado, Connecticut and 24 more&quot;'>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maine CD-1&quot;</value>
                  <value>&quot;Maine CD-2&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Adjpoll Clinton' datatype='real' name='[adjpoll_clinton]' role='measure' type='quantitative' />
            <column caption='Adjpoll Trump' datatype='real' name='[adjpoll_trump]' role='measure' type='quantitative' />
            <column caption='Electoral College' datatype='integer' name='[electoral_college]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[adjpoll_clinton]' derivation='Sum' name='[sum:adjpoll_clinton:qk]' pivot='key' type='quantitative' />
            <column-instance column='[adjpoll_trump]' derivation='Sum' name='[sum:adjpoll_trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[electoral_college]' derivation='Sum' name='[sum:electoral_college:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04ffu1j02e8qc41eumik80l1mg96].[sum:adjpoll_clinton:qk]' field-type='quantitative' max='81.606801887115537' min='18.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.04ffu1j02e8qc41eumik80l1mg96].[sum:adjpoll_trump:qk]' field-type='quantitative' max='64.719079140963501' min='7.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.04ffu1j02e8qc41eumik80l1mg96].[sum:electoral_college:ok]' field-type='ordinal' max-size='1' min-size='0.100461' type='catsize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.04ffu1j02e8qc41eumik80l1mg96].[sum:electoral_college:ok]' />
              <text column='[federated.04ffu1j02e8qc41eumik80l1mg96].[none:state:nk]' />
              <color column='[federated.04ffu1j02e8qc41eumik80l1mg96].[State (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.9908214807510376' />
                <format attr='mark-color' value='#388bff' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04ffu1j02e8qc41eumik80l1mg96].[sum:adjpoll_clinton:qk]</rows>
        <cols>[federated.04ffu1j02e8qc41eumik80l1mg96].[sum:adjpoll_trump:qk]</cols>
      </table>
      <simple-id uuid='{BCAB367F-874D-4BFB-923C-BB1FE812D5D3}' />
    </worksheet>
    <worksheet name='Sept 25'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sept 25 2016</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_states_agg_by_day_all_grades (1)' name='federated.1m47soe0p0r3p112ydp9v1t63mi7' />
          </datasources>
          <datasource-dependencies datasource='federated.1m47soe0p0r3p112ydp9v1t63mi7'>
            <column caption='State (group Sept 25)' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Alabama, Alaska, Arizona and 27 more&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;Nebraska CD-1&quot;</value>
                  <value>&quot;Nebraska CD-2&quot;</value>
                  <value>&quot;Nebraska CD-3&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;California, Colorado, Connecticut and 22 more&quot;'>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;U.S.&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Adjpoll Clinton' datatype='real' name='[adjpoll_clinton]' role='measure' type='quantitative' />
            <column caption='Adjpoll Trump' datatype='real' name='[adjpoll_trump]' role='measure' type='quantitative' />
            <column caption='C Minus T Adj' datatype='real' name='[c_minus_t_adj]' role='measure' type='quantitative' />
            <column caption='Day' datatype='date' name='[day]' role='dimension' type='ordinal' />
            <column caption='Electoral College' datatype='real' name='[electoral_college]' role='measure' type='quantitative' />
            <column-instance column='[day]' derivation='None' name='[none:day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[adjpoll_clinton]' derivation='Sum' name='[sum:adjpoll_clinton:qk]' pivot='key' type='quantitative' />
            <column-instance column='[adjpoll_trump]' derivation='Sum' name='[sum:adjpoll_trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[c_minus_t_adj]' derivation='Sum' name='[sum:c_minus_t_adj:qk]' pivot='key' type='quantitative' />
            <column-instance column='[electoral_college]' derivation='Sum' name='[sum:electoral_college:ok]' pivot='key' type='ordinal' />
            <column-instance column='[day]' derivation='Year' name='[yr:day:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:qk]' included-values='in-range'>
            <min>#2016-09-25#</min>
            <max>#2016-09-25#</max>
          </filter>
          <slices>
            <column>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_trump:qk]' value='57' />
            <format attr='width' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_clinton:qk]' value='84' />
            <encoding attr='space' class='0' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_clinton:qk]' field-type='quantitative' max='78.863370617346348' min='18.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_trump:qk]' field-type='quantitative' max='66.251837576151573' min='7.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:electoral_college:ok]' field-type='ordinal' max-size='1' min-size='0.163104' type='catsize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:electoral_college:ok]' />
              <lod column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[yr:day:ok]' />
              <text column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:state:nk]' />
              <lod column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:c_minus_t_adj:qk]' />
              <color column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[State (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.9372856616973877' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='983' />
                <format attr='maxwidth' value='983' />
                <format attr='minheight' value='488' />
                <format attr='maxheight' value='488' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_clinton:qk]</rows>
        <cols>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_trump:qk]</cols>
      </table>
      <simple-id uuid='{1B2A5585-D7BF-4422-8E5D-DFDFDFFB136C}' />
    </worksheet>
    <worksheet name='Sept 25 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sept 25 2016</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_states_agg_by_day_all_grades (1)' name='federated.1m47soe0p0r3p112ydp9v1t63mi7' />
          </datasources>
          <datasource-dependencies datasource='federated.1m47soe0p0r3p112ydp9v1t63mi7'>
            <column caption='Day &amp; State (group Nov 4)' datatype='string' name='[Day &amp; State (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Day &amp; State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;(2016-11-04, Alabama), (2016-11-04, Alaska), (2016-11-04, Arkansas) and 21 more&quot;'>
                  <value>(#2016-11-04#,&quot;Alabama&quot;)</value>
                  <value>(#2016-11-04#,&quot;Alaska&quot;)</value>
                  <value>(#2016-11-04#,&quot;Arkansas&quot;)</value>
                  <value>(#2016-11-04#,&quot;Georgia&quot;)</value>
                  <value>(#2016-11-04#,&quot;Idaho&quot;)</value>
                  <value>(#2016-11-04#,&quot;Indiana&quot;)</value>
                  <value>(#2016-11-04#,&quot;Iowa&quot;)</value>
                  <value>(#2016-11-04#,&quot;Kansas&quot;)</value>
                  <value>(#2016-11-04#,&quot;Kentucky&quot;)</value>
                  <value>(#2016-11-04#,&quot;Louisiana&quot;)</value>
                  <value>(#2016-11-04#,&quot;Mississippi&quot;)</value>
                  <value>(#2016-11-04#,&quot;Missouri&quot;)</value>
                  <value>(#2016-11-04#,&quot;Montana&quot;)</value>
                  <value>(#2016-11-04#,&quot;Nebraska&quot;)</value>
                  <value>(#2016-11-04#,&quot;North Dakota&quot;)</value>
                  <value>(#2016-11-04#,&quot;Ohio&quot;)</value>
                  <value>(#2016-11-04#,&quot;Oklahoma&quot;)</value>
                  <value>(#2016-11-04#,&quot;South Carolina&quot;)</value>
                  <value>(#2016-11-04#,&quot;South Dakota&quot;)</value>
                  <value>(#2016-11-04#,&quot;Tennessee&quot;)</value>
                  <value>(#2016-11-04#,&quot;Texas&quot;)</value>
                  <value>(#2016-11-04#,&quot;Utah&quot;)</value>
                  <value>(#2016-11-04#,&quot;West Virginia&quot;)</value>
                  <value>(#2016-11-04#,&quot;Wyoming&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(2016-11-04, Arizona), (2016-11-04, California), (2016-11-04, Colorado) and 25 more&quot;'>
                  <value>(#2016-11-04#,&quot;Arizona&quot;)</value>
                  <value>(#2016-11-04#,&quot;California&quot;)</value>
                  <value>(#2016-11-04#,&quot;Colorado&quot;)</value>
                  <value>(#2016-11-04#,&quot;Connecticut&quot;)</value>
                  <value>(#2016-11-04#,&quot;Delaware&quot;)</value>
                  <value>(#2016-11-04#,&quot;District of Columbia&quot;)</value>
                  <value>(#2016-11-04#,&quot;Florida&quot;)</value>
                  <value>(#2016-11-04#,&quot;Hawaii&quot;)</value>
                  <value>(#2016-11-04#,&quot;Illinois&quot;)</value>
                  <value>(#2016-11-04#,&quot;Maine&quot;)</value>
                  <value>(#2016-11-04#,&quot;Maryland&quot;)</value>
                  <value>(#2016-11-04#,&quot;Massachusetts&quot;)</value>
                  <value>(#2016-11-04#,&quot;Michigan&quot;)</value>
                  <value>(#2016-11-04#,&quot;Minnesota&quot;)</value>
                  <value>(#2016-11-04#,&quot;Nevada&quot;)</value>
                  <value>(#2016-11-04#,&quot;New Hampshire&quot;)</value>
                  <value>(#2016-11-04#,&quot;New Jersey&quot;)</value>
                  <value>(#2016-11-04#,&quot;New Mexico&quot;)</value>
                  <value>(#2016-11-04#,&quot;New York&quot;)</value>
                  <value>(#2016-11-04#,&quot;North Carolina&quot;)</value>
                  <value>(#2016-11-04#,&quot;Oregon&quot;)</value>
                  <value>(#2016-11-04#,&quot;Pennsylvania&quot;)</value>
                  <value>(#2016-11-04#,&quot;Rhode Island&quot;)</value>
                  <value>(#2016-11-04#,&quot;U.S.&quot;)</value>
                  <value>(#2016-11-04#,&quot;Vermont&quot;)</value>
                  <value>(#2016-11-04#,&quot;Virginia&quot;)</value>
                  <value>(#2016-11-04#,&quot;Washington&quot;)</value>
                  <value>(#2016-11-04#,&quot;Wisconsin&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[F2]' role='dimension' type='nominal' />
            <column caption='Adjpoll Clinton' datatype='real' name='[adjpoll_clinton]' role='measure' type='quantitative' />
            <column caption='Adjpoll Trump' datatype='real' name='[adjpoll_trump]' role='measure' type='quantitative' />
            <column caption='C Minus T Adj' datatype='real' name='[c_minus_t_adj]' role='measure' type='quantitative' />
            <column caption='Day' datatype='date' name='[day]' role='dimension' type='ordinal' />
            <column caption='Electoral College' datatype='real' name='[electoral_college]' role='measure' type='quantitative' />
            <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
            <column-instance column='[day]' derivation='None' name='[none:day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[day]' derivation='None' name='[none:day:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[adjpoll_clinton]' derivation='Sum' name='[sum:adjpoll_clinton:qk]' pivot='key' type='quantitative' />
            <column-instance column='[adjpoll_trump]' derivation='Sum' name='[sum:adjpoll_trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[c_minus_t_adj]' derivation='Sum' name='[sum:c_minus_t_adj:qk]' pivot='key' type='quantitative' />
            <column-instance column='[electoral_college]' derivation='Sum' name='[sum:electoral_college:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:qk]' included-values='in-range'>
            <min>#2016-11-04#</min>
            <max>#2016-11-04#</max>
          </filter>
          <slices>
            <column>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_trump:qk]' value='57' />
            <format attr='width' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_clinton:qk]' value='84' />
            <encoding attr='space' class='0' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_clinton:qk]' field-type='quantitative' max='78.863370617346348' min='18.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_trump:qk]' field-type='quantitative' max='66.251837576151573' min='7.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:electoral_college:ok]' field-type='ordinal' max-size='1' min-size='0.163104' type='catsize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:electoral_college:ok]' />
              <lod column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:ok]' />
              <text column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:F2:nk]' />
              <lod column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:c_minus_t_adj:qk]' />
              <color column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[Day &amp; State (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.9372856616973877' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='983' />
                <format attr='maxwidth' value='983' />
                <format attr='minheight' value='488' />
                <format attr='maxheight' value='488' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_clinton:qk]</rows>
        <cols>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_trump:qk]</cols>
      </table>
      <simple-id uuid='{6F29E288-EE6A-4F04-8AAF-6CA2723810EA}' />
    </worksheet>
    <worksheet name='Sept 25 (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sept 25 2016</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_states_agg_by_day_all_grades (1)' name='federated.1m47soe0p0r3p112ydp9v1t63mi7' />
          </datasources>
          <datasource-dependencies datasource='federated.1m47soe0p0r3p112ydp9v1t63mi7'>
            <column caption='Day &amp; State (group Nov 4)' datatype='string' name='[Day &amp; State (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Day &amp; State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;(2016-11-04, Alabama), (2016-11-04, Alaska), (2016-11-04, Arkansas) and 21 more&quot;'>
                  <value>(#2016-11-04#,&quot;Alabama&quot;)</value>
                  <value>(#2016-11-04#,&quot;Alaska&quot;)</value>
                  <value>(#2016-11-04#,&quot;Arkansas&quot;)</value>
                  <value>(#2016-11-04#,&quot;Georgia&quot;)</value>
                  <value>(#2016-11-04#,&quot;Idaho&quot;)</value>
                  <value>(#2016-11-04#,&quot;Indiana&quot;)</value>
                  <value>(#2016-11-04#,&quot;Iowa&quot;)</value>
                  <value>(#2016-11-04#,&quot;Kansas&quot;)</value>
                  <value>(#2016-11-04#,&quot;Kentucky&quot;)</value>
                  <value>(#2016-11-04#,&quot;Louisiana&quot;)</value>
                  <value>(#2016-11-04#,&quot;Mississippi&quot;)</value>
                  <value>(#2016-11-04#,&quot;Missouri&quot;)</value>
                  <value>(#2016-11-04#,&quot;Montana&quot;)</value>
                  <value>(#2016-11-04#,&quot;Nebraska&quot;)</value>
                  <value>(#2016-11-04#,&quot;North Dakota&quot;)</value>
                  <value>(#2016-11-04#,&quot;Ohio&quot;)</value>
                  <value>(#2016-11-04#,&quot;Oklahoma&quot;)</value>
                  <value>(#2016-11-04#,&quot;South Carolina&quot;)</value>
                  <value>(#2016-11-04#,&quot;South Dakota&quot;)</value>
                  <value>(#2016-11-04#,&quot;Tennessee&quot;)</value>
                  <value>(#2016-11-04#,&quot;Texas&quot;)</value>
                  <value>(#2016-11-04#,&quot;Utah&quot;)</value>
                  <value>(#2016-11-04#,&quot;West Virginia&quot;)</value>
                  <value>(#2016-11-04#,&quot;Wyoming&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(2016-11-04, Arizona), (2016-11-04, California), (2016-11-04, Colorado) and 25 more&quot;'>
                  <value>(#2016-11-04#,&quot;Arizona&quot;)</value>
                  <value>(#2016-11-04#,&quot;California&quot;)</value>
                  <value>(#2016-11-04#,&quot;Colorado&quot;)</value>
                  <value>(#2016-11-04#,&quot;Connecticut&quot;)</value>
                  <value>(#2016-11-04#,&quot;Delaware&quot;)</value>
                  <value>(#2016-11-04#,&quot;District of Columbia&quot;)</value>
                  <value>(#2016-11-04#,&quot;Florida&quot;)</value>
                  <value>(#2016-11-04#,&quot;Hawaii&quot;)</value>
                  <value>(#2016-11-04#,&quot;Illinois&quot;)</value>
                  <value>(#2016-11-04#,&quot;Maine&quot;)</value>
                  <value>(#2016-11-04#,&quot;Maryland&quot;)</value>
                  <value>(#2016-11-04#,&quot;Massachusetts&quot;)</value>
                  <value>(#2016-11-04#,&quot;Michigan&quot;)</value>
                  <value>(#2016-11-04#,&quot;Minnesota&quot;)</value>
                  <value>(#2016-11-04#,&quot;Nevada&quot;)</value>
                  <value>(#2016-11-04#,&quot;New Hampshire&quot;)</value>
                  <value>(#2016-11-04#,&quot;New Jersey&quot;)</value>
                  <value>(#2016-11-04#,&quot;New Mexico&quot;)</value>
                  <value>(#2016-11-04#,&quot;New York&quot;)</value>
                  <value>(#2016-11-04#,&quot;North Carolina&quot;)</value>
                  <value>(#2016-11-04#,&quot;Oregon&quot;)</value>
                  <value>(#2016-11-04#,&quot;Pennsylvania&quot;)</value>
                  <value>(#2016-11-04#,&quot;Rhode Island&quot;)</value>
                  <value>(#2016-11-04#,&quot;U.S.&quot;)</value>
                  <value>(#2016-11-04#,&quot;Vermont&quot;)</value>
                  <value>(#2016-11-04#,&quot;Virginia&quot;)</value>
                  <value>(#2016-11-04#,&quot;Washington&quot;)</value>
                  <value>(#2016-11-04#,&quot;Wisconsin&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[F2]' role='dimension' type='nominal' />
            <column caption='Adjpoll Clinton' datatype='real' name='[adjpoll_clinton]' role='measure' type='quantitative' />
            <column caption='Adjpoll Trump' datatype='real' name='[adjpoll_trump]' role='measure' type='quantitative' />
            <column caption='C Minus T Adj' datatype='real' name='[c_minus_t_adj]' role='measure' type='quantitative' />
            <column caption='Day' datatype='date' name='[day]' role='dimension' type='ordinal' />
            <column caption='Electoral College' datatype='real' name='[electoral_college]' role='measure' type='quantitative' />
            <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
            <column-instance column='[day]' derivation='None' name='[none:day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[day]' derivation='None' name='[none:day:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[adjpoll_clinton]' derivation='Sum' name='[sum:adjpoll_clinton:qk]' pivot='key' type='quantitative' />
            <column-instance column='[adjpoll_trump]' derivation='Sum' name='[sum:adjpoll_trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[c_minus_t_adj]' derivation='Sum' name='[sum:c_minus_t_adj:qk]' pivot='key' type='quantitative' />
            <column-instance column='[electoral_college]' derivation='Sum' name='[sum:electoral_college:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:qk]' included-values='in-range'>
            <min>#2016-11-04#</min>
            <max>#2016-11-04#</max>
          </filter>
          <slices>
            <column>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_trump:qk]' value='57' />
            <format attr='width' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_clinton:qk]' value='84' />
            <encoding attr='space' class='0' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_clinton:qk]' field-type='quantitative' max='78.863370617346348' min='18.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_trump:qk]' field-type='quantitative' max='66.251837576151573' min='7.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:electoral_college:ok]' field-type='ordinal' max-size='1' min-size='0.163104' type='catsize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:electoral_college:ok]' />
              <lod column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:ok]' />
              <text column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:F2:nk]' />
              <lod column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:c_minus_t_adj:qk]' />
              <color column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[Day &amp; State (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.9372856616973877' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='983' />
                <format attr='maxwidth' value='983' />
                <format attr='minheight' value='488' />
                <format attr='maxheight' value='488' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_clinton:qk]</rows>
        <cols>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_trump:qk]</cols>
      </table>
      <simple-id uuid='{15F2FF16-FEDC-4C86-A0B1-E43F115A575E}' />
    </worksheet>
    <worksheet name='Sept 25 (4)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sept 25 2016</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_states_agg_by_day_all_grades (1)' name='federated.1m47soe0p0r3p112ydp9v1t63mi7' />
          </datasources>
          <datasource-dependencies datasource='federated.1m47soe0p0r3p112ydp9v1t63mi7'>
            <column caption='Day &amp; State (group Nov 4)' datatype='string' name='[Day &amp; State (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Day &amp; State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;(2016-11-04, Alabama), (2016-11-04, Alaska), (2016-11-04, Arkansas) and 21 more&quot;'>
                  <value>(#2016-11-04#,&quot;Alabama&quot;)</value>
                  <value>(#2016-11-04#,&quot;Alaska&quot;)</value>
                  <value>(#2016-11-04#,&quot;Arkansas&quot;)</value>
                  <value>(#2016-11-04#,&quot;Georgia&quot;)</value>
                  <value>(#2016-11-04#,&quot;Idaho&quot;)</value>
                  <value>(#2016-11-04#,&quot;Indiana&quot;)</value>
                  <value>(#2016-11-04#,&quot;Iowa&quot;)</value>
                  <value>(#2016-11-04#,&quot;Kansas&quot;)</value>
                  <value>(#2016-11-04#,&quot;Kentucky&quot;)</value>
                  <value>(#2016-11-04#,&quot;Louisiana&quot;)</value>
                  <value>(#2016-11-04#,&quot;Mississippi&quot;)</value>
                  <value>(#2016-11-04#,&quot;Missouri&quot;)</value>
                  <value>(#2016-11-04#,&quot;Montana&quot;)</value>
                  <value>(#2016-11-04#,&quot;Nebraska&quot;)</value>
                  <value>(#2016-11-04#,&quot;North Dakota&quot;)</value>
                  <value>(#2016-11-04#,&quot;Ohio&quot;)</value>
                  <value>(#2016-11-04#,&quot;Oklahoma&quot;)</value>
                  <value>(#2016-11-04#,&quot;South Carolina&quot;)</value>
                  <value>(#2016-11-04#,&quot;South Dakota&quot;)</value>
                  <value>(#2016-11-04#,&quot;Tennessee&quot;)</value>
                  <value>(#2016-11-04#,&quot;Texas&quot;)</value>
                  <value>(#2016-11-04#,&quot;Utah&quot;)</value>
                  <value>(#2016-11-04#,&quot;West Virginia&quot;)</value>
                  <value>(#2016-11-04#,&quot;Wyoming&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(2016-11-04, Arizona), (2016-11-04, California), (2016-11-04, Colorado) and 25 more&quot;'>
                  <value>(#2016-11-04#,&quot;Arizona&quot;)</value>
                  <value>(#2016-11-04#,&quot;California&quot;)</value>
                  <value>(#2016-11-04#,&quot;Colorado&quot;)</value>
                  <value>(#2016-11-04#,&quot;Connecticut&quot;)</value>
                  <value>(#2016-11-04#,&quot;Delaware&quot;)</value>
                  <value>(#2016-11-04#,&quot;District of Columbia&quot;)</value>
                  <value>(#2016-11-04#,&quot;Florida&quot;)</value>
                  <value>(#2016-11-04#,&quot;Hawaii&quot;)</value>
                  <value>(#2016-11-04#,&quot;Illinois&quot;)</value>
                  <value>(#2016-11-04#,&quot;Maine&quot;)</value>
                  <value>(#2016-11-04#,&quot;Maryland&quot;)</value>
                  <value>(#2016-11-04#,&quot;Massachusetts&quot;)</value>
                  <value>(#2016-11-04#,&quot;Michigan&quot;)</value>
                  <value>(#2016-11-04#,&quot;Minnesota&quot;)</value>
                  <value>(#2016-11-04#,&quot;Nevada&quot;)</value>
                  <value>(#2016-11-04#,&quot;New Hampshire&quot;)</value>
                  <value>(#2016-11-04#,&quot;New Jersey&quot;)</value>
                  <value>(#2016-11-04#,&quot;New Mexico&quot;)</value>
                  <value>(#2016-11-04#,&quot;New York&quot;)</value>
                  <value>(#2016-11-04#,&quot;North Carolina&quot;)</value>
                  <value>(#2016-11-04#,&quot;Oregon&quot;)</value>
                  <value>(#2016-11-04#,&quot;Pennsylvania&quot;)</value>
                  <value>(#2016-11-04#,&quot;Rhode Island&quot;)</value>
                  <value>(#2016-11-04#,&quot;U.S.&quot;)</value>
                  <value>(#2016-11-04#,&quot;Vermont&quot;)</value>
                  <value>(#2016-11-04#,&quot;Virginia&quot;)</value>
                  <value>(#2016-11-04#,&quot;Washington&quot;)</value>
                  <value>(#2016-11-04#,&quot;Wisconsin&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[F2]' role='dimension' type='nominal' />
            <column caption='Adjpoll Clinton' datatype='real' name='[adjpoll_clinton]' role='measure' type='quantitative' />
            <column caption='Adjpoll Trump' datatype='real' name='[adjpoll_trump]' role='measure' type='quantitative' />
            <column caption='C Minus T Adj' datatype='real' name='[c_minus_t_adj]' role='measure' type='quantitative' />
            <column caption='Day' datatype='date' name='[day]' role='dimension' type='ordinal' />
            <column caption='Electoral College' datatype='real' name='[electoral_college]' role='measure' type='quantitative' />
            <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
            <column-instance column='[day]' derivation='None' name='[none:day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[day]' derivation='None' name='[none:day:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[adjpoll_clinton]' derivation='Sum' name='[sum:adjpoll_clinton:qk]' pivot='key' type='quantitative' />
            <column-instance column='[adjpoll_trump]' derivation='Sum' name='[sum:adjpoll_trump:qk]' pivot='key' type='quantitative' />
            <column-instance column='[c_minus_t_adj]' derivation='Sum' name='[sum:c_minus_t_adj:qk]' pivot='key' type='quantitative' />
            <column-instance column='[electoral_college]' derivation='Sum' name='[sum:electoral_college:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:qk]' included-values='in-range'>
            <min>#2016-11-04#</min>
            <max>#2016-11-04#</max>
          </filter>
          <slices>
            <column>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_trump:qk]' value='57' />
            <format attr='width' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_clinton:qk]' value='84' />
            <encoding attr='space' class='0' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_clinton:qk]' field-type='quantitative' max='78.863370617346348' min='18.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_trump:qk]' field-type='quantitative' max='66.251837576151573' min='7.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:electoral_college:ok]' field-type='ordinal' max-size='1' min-size='0.163104' type='catsize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:electoral_college:ok]' />
              <lod column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:ok]' />
              <text column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:F2:nk]' />
              <lod column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:c_minus_t_adj:qk]' />
              <color column='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[Day &amp; State (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.9372856616973877' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='983' />
                <format attr='maxwidth' value='983' />
                <format attr='minheight' value='488' />
                <format attr='maxheight' value='488' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_clinton:qk]</rows>
        <cols>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:adjpoll_trump:qk]</cols>
      </table>
      <simple-id uuid='{3BF24714-83C3-48D2-993D-6564600B1F71}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Sept 25'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[State (group)]' type='color' />
            <card pane-specification-id='0' param='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:electoral_college:ok]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[iyr:day:ok]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:qk]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:state:nk]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[yr:day:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12EB4B76-265C-463C-BFFC-DF33C95CFEE2}' />
    </window>
    <window class='worksheet' name='Oct 26'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:electoral_college:ok]' type='size' />
            <card pane-specification-id='2' param='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[State (group) 1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:state:nk]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:c_minus_t_adj:qk]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[yr:day:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B892BCB9-0DE6-4AF2-B2A9-463E35AAC8D6}' />
    </window>
    <window class='worksheet' name='Oct 29'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04ffu1j02e8qc41eumik80l1mg96].[sum:electoral_college:ok]' type='size' />
            <card pane-specification-id='0' param='[federated.04ffu1j02e8qc41eumik80l1mg96].[State (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.04ffu1j02e8qc41eumik80l1mg96].[:Measure Names]</field>
            <field>[federated.04ffu1j02e8qc41eumik80l1mg96].[none:state:nk]</field>
            <field>[federated.04ffu1j02e8qc41eumik80l1mg96].[sum:electoral_college:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95A750BC-295D-4028-86D3-09370E3F11B2}' />
    </window>
    <window class='worksheet' name='Sept 25 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:electoral_college:ok]' type='size' />
            <card pane-specification-id='0' param='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[Day &amp; State (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[iyr:day:ok]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:F2:nk]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:qk]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:state:nk]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[yr:day:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B43C0FE-8F1E-4E8A-97EC-E999E2BCAB92}' />
    </window>
    <window class='worksheet' name='Sept 25 (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:electoral_college:ok]' type='size' />
            <card pane-specification-id='0' param='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[Day &amp; State (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[iyr:day:ok]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:F2:nk]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:qk]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:state:nk]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[yr:day:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D92B8B0E-AD48-4E03-A2DF-A24CBC7FAB5E}' />
    </window>
    <window class='worksheet' maximized='true' name='Sept 25 (4)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[sum:electoral_college:ok]' type='size' />
            <card pane-specification-id='0' param='[federated.1m47soe0p0r3p112ydp9v1t63mi7].[Day &amp; State (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[iyr:day:ok]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:F2:nk]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:day:qk]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[none:state:nk]</field>
            <field>[federated.1m47soe0p0r3p112ydp9v1t63mi7].[yr:day:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63A50B84-7A9A-46F1-BA63-FF649BD31033}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Oct 26' width='384'>
      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
      jPr/XR2buo/dlCYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Oct 29' width='384'>
      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
      kovAQggRpv4/U5rvEVw5zkMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sept 25' width='384'>
      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
      KoQQSer/A/8zUiDCoOSnAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sept 25 (2)' width='384'>
      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
      xIUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sept 25 (3)' width='384'>
      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
      xIUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sept 25 (4)' width='384'>
      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
      xIUAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
