<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Customers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
        <calculation class='tableau' formula='200' />
        <range granularity='50' max='200' min='50' />
      </column>
    </datasource>
    <datasource caption='polls_us_election_2016 (2)' inline='true' name='federated.1ct9zde12gywhr12vj9d810jhayw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='polls_us_election_2016 (2)' name='textscan.1oaiy3y119terg1c513x11pqt365'>
            <connection class='textscan' directory='/Users/samanthasellinger/Downloads' filename='polls_us_election_2016 (2).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1oaiy3y119terg1c513x11pqt365' name='polls_us_election_2016 (2).csv' table='[polls_us_election_2016 (2)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='date' name='startdate' ordinal='1' />
            <column datatype='date' name='enddate' ordinal='2' />
            <column datatype='string' name='pollster' ordinal='3' />
            <column datatype='string' name='grade' ordinal='4' />
            <column datatype='integer' name='samplesize' ordinal='5' />
            <column datatype='string' name='population' ordinal='6' />
            <column datatype='real' name='rawpoll_clinton' ordinal='7' />
            <column datatype='real' name='rawpoll_trump' ordinal='8' />
            <column datatype='string' name='rawpoll_johnson' ordinal='9' />
            <column datatype='string' name='rawpoll_mcmullin' ordinal='10' />
            <column datatype='real' name='adjpoll_clinton' ordinal='11' />
            <column datatype='real' name='adjpoll_trump' ordinal='12' />
            <column datatype='real' name='adjpoll_johnson' ordinal='13' />
            <column datatype='real' name='adjpoll_mcmullin' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1oaiy3y119terg1c513x11pqt365' name='polls_us_election_2016 (2).csv' table='[polls_us_election_2016 (2)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='date' name='startdate' ordinal='1' />
            <column datatype='date' name='enddate' ordinal='2' />
            <column datatype='string' name='pollster' ordinal='3' />
            <column datatype='string' name='grade' ordinal='4' />
            <column datatype='integer' name='samplesize' ordinal='5' />
            <column datatype='string' name='population' ordinal='6' />
            <column datatype='real' name='rawpoll_clinton' ordinal='7' />
            <column datatype='real' name='rawpoll_trump' ordinal='8' />
            <column datatype='string' name='rawpoll_johnson' ordinal='9' />
            <column datatype='string' name='rawpoll_mcmullin' ordinal='10' />
            <column datatype='real' name='adjpoll_clinton' ordinal='11' />
            <column datatype='real' name='adjpoll_trump' ordinal='12' />
            <column datatype='real' name='adjpoll_johnson' ordinal='13' />
            <column datatype='real' name='adjpoll_mcmullin' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>startdate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[startdate]</local-name>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias>startdate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>enddate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[enddate]</local-name>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias>enddate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pollster</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pollster]</local-name>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias>pollster</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[grade]</local-name>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias>grade</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>samplesize</remote-name>
            <remote-type>20</remote-type>
            <local-name>[samplesize]</local-name>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias>samplesize</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>129</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rawpoll_clinton</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rawpoll_clinton]</local-name>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias>rawpoll_clinton</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rawpoll_trump</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rawpoll_trump]</local-name>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias>rawpoll_trump</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rawpoll_johnson</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rawpoll_johnson]</local-name>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias>rawpoll_johnson</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rawpoll_mcmullin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rawpoll_mcmullin]</local-name>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias>rawpoll_mcmullin</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjpoll_clinton</remote-name>
            <remote-type>5</remote-type>
            <local-name>[adjpoll_clinton]</local-name>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias>adjpoll_clinton</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjpoll_trump</remote-name>
            <remote-type>5</remote-type>
            <local-name>[adjpoll_trump]</local-name>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias>adjpoll_trump</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjpoll_johnson</remote-name>
            <remote-type>5</remote-type>
            <local-name>[adjpoll_johnson]</local-name>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias>adjpoll_johnson</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjpoll_mcmullin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[adjpoll_mcmullin]</local-name>
            <parent-name>[polls_us_election_2016 (2).csv]</parent-name>
            <remote-alias>adjpoll_mcmullin</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Duration' datatype='integer' name='[Calculation_1014224776787111937]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[enddate]-[startdate]' />
      </column>
      <column caption='c-minus-t_raw' datatype='real' name='[Calculation_1014224777256529922]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[rawpoll_clinton]-[rawpoll_trump]' />
      </column>
      <column aggregation='None' datatype='integer' name='[Rawpoll Clinton (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[rawpoll_clinton]' peg='0' size='2.18' />
      </column>
      <column aggregation='None' datatype='integer' name='[Samplesize (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[samplesize]' peg='0' size='2216' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='polls_us_election_2016 (2).csv' datatype='table' name='[__tableau_internal_object_id__].[polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4]' role='measure' type='quantitative' />
      <column caption='Adjpoll Clinton' datatype='real' name='[adjpoll_clinton]' role='measure' type='quantitative' />
      <column caption='Adjpoll Johnson' datatype='real' name='[adjpoll_johnson]' role='dimension' type='ordinal' />
      <column caption='Adjpoll Mcmullin' datatype='real' name='[adjpoll_mcmullin]' role='dimension' type='ordinal' />
      <column caption='Adjpoll Trump' datatype='real' name='[adjpoll_trump]' role='measure' type='quantitative' />
      <column caption='Enddate' datatype='date' name='[enddate]' role='dimension' type='ordinal' />
      <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal' />
      <column caption='Pollster' datatype='string' name='[pollster]' role='dimension' type='nominal' />
      <column caption='Population' datatype='string' name='[population]' role='dimension' type='nominal' />
      <column caption='Rawpoll Clinton' datatype='real' name='[rawpoll_clinton]' role='measure' type='quantitative' />
      <column caption='Rawpoll Johnson' datatype='string' name='[rawpoll_johnson]' role='dimension' type='nominal' />
      <column caption='Rawpoll Mcmullin' datatype='string' name='[rawpoll_mcmullin]' role='dimension' type='nominal' />
      <column caption='Rawpoll Trump' datatype='real' name='[rawpoll_trump]' role='measure' type='quantitative' />
      <column caption='Samplesize' datatype='integer' name='[samplesize]' role='measure' type='quantitative' />
      <column caption='Startdate' datatype='date' name='[startdate]' role='dimension' type='ordinal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;Alabama&quot;' value='AL' />
          <alias key='&quot;Alaska&quot;' value='AK' />
          <alias key='&quot;Arizona&quot;' value='AZ' />
          <alias key='&quot;Arkansas&quot;' value='AR' />
          <alias key='&quot;California&quot;' value='CA' />
          <alias key='&quot;Colorado&quot;' value='CO' />
          <alias key='&quot;Connecticut&quot;' value='CT' />
          <alias key='&quot;Delaware&quot;' value='DE' />
          <alias key='&quot;District of Columbia&quot;' value='DC' />
          <alias key='&quot;Florida&quot;' value='FL' />
          <alias key='&quot;Georgia&quot;' value='GA' />
          <alias key='&quot;Hawaii&quot;' value='HI' />
          <alias key='&quot;Idaho&quot;' value='ID' />
          <alias key='&quot;Illinois&quot;' value='IL' />
          <alias key='&quot;Indiana&quot;' value='IN' />
          <alias key='&quot;Iowa&quot;' value='IA' />
          <alias key='&quot;Kansas&quot;' value='KS' />
          <alias key='&quot;Kentucky&quot;' value='KY' />
          <alias key='&quot;Louisiana&quot;' value='LA' />
          <alias key='&quot;Maine&quot;' value='ME' />
          <alias key='&quot;Maine CD-1&quot;' value='ME-1' />
          <alias key='&quot;Maine CD-2&quot;' value='ME-2' />
          <alias key='&quot;Maryland&quot;' value='MD' />
          <alias key='&quot;Massachusetts&quot;' value='MA' />
          <alias key='&quot;Michigan&quot;' value='MI' />
          <alias key='&quot;Minnesota&quot;' value='MN' />
          <alias key='&quot;Mississippi&quot;' value='MS' />
          <alias key='&quot;Missouri&quot;' value='MO' />
          <alias key='&quot;Montana&quot;' value='MT' />
          <alias key='&quot;Nebraska&quot;' value='NE' />
          <alias key='&quot;Nebraska CD-1&quot;' value='NE-1' />
          <alias key='&quot;Nebraska CD-2&quot;' value='NE-2' />
          <alias key='&quot;Nebraska CD-3&quot;' value='NE-3' />
          <alias key='&quot;Nevada&quot;' value='NV' />
          <alias key='&quot;New Hampshire&quot;' value='NH' />
          <alias key='&quot;New Jersey&quot;' value='NJ' />
          <alias key='&quot;New Mexico&quot;' value='NM' />
          <alias key='&quot;New York&quot;' value='NY' />
          <alias key='&quot;North Carolina&quot;' value='NC' />
          <alias key='&quot;North Dakota&quot;' value='ND' />
          <alias key='&quot;Ohio&quot;' value='OH' />
          <alias key='&quot;Oklahoma&quot;' value='OK' />
          <alias key='&quot;Oregon&quot;' value='OR' />
          <alias key='&quot;Pennsylvania&quot;' value='PA' />
          <alias key='&quot;Rhode Island&quot;' value='RI' />
          <alias key='&quot;South Carolina&quot;' value='SC' />
          <alias key='&quot;South Dakota&quot;' value='SD' />
          <alias key='&quot;Tennessee&quot;' value='TN' />
          <alias key='&quot;Texas&quot;' value='TX' />
          <alias key='&quot;Utah&quot;' value='UT' />
          <alias key='&quot;Vermont&quot;' value='VT' />
          <alias key='&quot;Virginia&quot;' value='VA' />
          <alias key='&quot;Washington&quot;' value='WA' />
          <alias key='&quot;West Virginia&quot;' value='WV' />
          <alias key='&quot;Wisconsin&quot;' value='WI' />
          <alias key='&quot;Wyoming&quot;' value='WY' />
        </aliases>
      </column>
      <column-instance column='[pollster]' derivation='None' name='[none:pollster:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:pollster:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ball State University&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Crosswind Media &amp; Public Relations&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Feldman Group&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harper Polling&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loras College&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morning Consult&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Public Policy Institute of California&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Siena College&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Time/Abt SRBI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;We Ask America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ABC News/Washington Post&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Christopher Newport University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elon University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glengariff Group, Inc.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ipsos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meredith College&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orion Strategies&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Roanoke College&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SurveyUSA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University of New Orleans&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anzalone Liszt Grove Research&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cole Hargrave Snodgrass &amp; Associates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Evolving Strategies&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gravis Marketing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Keating Research, Inc.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mitchell Research &amp; Communications&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Political Marketing International, Inc./Red Racing Horses&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saguaro Strategies&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TargetSmart/William &amp; Mary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Utah Valley University&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bellwether Research &amp; Consulting&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dartmouth College&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Florida Southern College&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;High Point University&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Market Research Insight&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NBC News/Wall Street Journal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;R.L. Repass &amp; Partners&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St. Norbert College&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Arkansas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Y2 Analytics&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baruch College&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CVOTER International&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Field Research Corporation (Field Poll)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harvard University&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Magellan Strategies&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Muhlenberg College&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Public Policy Polling&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SoonerPoll.com&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trafalgar Group&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Western Kentucky University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arizona State University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbus Dispatch&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Expedition Strategies&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenberg Quinlan Rosner (Democracy Corps)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lake Research Partners&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monmouth University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Praecones Analytica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Leo University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tarrance Group&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vanderbilt University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Centre College&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Echelon Insights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;George Washington University (Battleground)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Insights West&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;McLaughlin &amp; Associates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Opinion Savvy/InsiderAdvantage&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Riley Research Associates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suffolk University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University of Massachusetts Lowell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;American Research Group&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clarity Campaign Labs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elway Research&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Global Strategy Group&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ivan Moore Research&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Merrill Poll&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Penn Schoen Berland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Robert Morris University&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Susquehanna Polling &amp; Research, Inc.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University of North Florida&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Castleton University&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DFM Research&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garin-Hart-Yang Research Group&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;icitizen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MassINC Polling Group&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ogden &amp; Fry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Remington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Strategies 360&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University of Houston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Associated Industries of Florida&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Craciun Research&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fairbank, Maslin, Maullin, Metz &amp; Associates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenberg Quinlan Rosner/American Viewpoint&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Landmark Communications&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana State University Billings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Princeton Survey Research Associates International&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Schoen Consulting&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Texas Lyceum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Victory Research&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bendixen &amp; Amandi International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Data Orbital&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Hays State University&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HighGround&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marketing Resource Group (MRG)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nielson Brothers Polling&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RABA Research&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Starboard Communications&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University of Colorado&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;YouGov&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BK Strategies&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Data Targeting&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fox News/Anderson Robbins Research/Shaw &amp; Company Research&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hoffman Research Group&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marquette University&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Normington, Petts &amp; Associates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RAND (American Life Panel)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stockton College&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University of Delaware&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zia Poll&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CBS News/New York Times&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dixie Strategies&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GBA Strategies&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Illinois Public Opinion Strategies&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MBQF&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OnMessage Inc.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Research &amp; Polling, Inc.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Strategy Research&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University of Mary Washington&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cherry Communications&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Edison Research&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GfK Group&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Integrated Web Strategy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mercyhurst University&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OpinionWorks&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RKM Research and Communications, Inc.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SurveyMonkey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University of New Hampshire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Basswood Research&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cygnal Political&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;First Tuesday Strategies&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hendrix College&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maine People&apos;s Resource Center&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;National Journal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Public Religion Research Institute&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southern Illinois University&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulchin Research&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western New England University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baldwin Wallace University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Critical Insights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairleigh Dickinson University (PublicMind)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hampton University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Leland Beatty&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moore Information&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Public Opinion Strategies&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Selzer &amp; Company&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;The Times-Picayune/Lucid&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vox Populi Communications&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American Strategies&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clout Research/Wenzel Strategies&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Emerson College&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Google Consumer Surveys&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JMC Enterprises&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan State University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pew Research Center&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rutgers University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Target Insyght&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University of Wyoming&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Braun Research&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Davis, Hibbitts &amp; Midghall, Inc.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Franklin &amp; Marshall College&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IBD/TIPP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mason-Dixon Polling &amp; Research, Inc.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Star Opinion Research/Ayres, McHenry &amp; Associates&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rasmussen Reports/Pulse Opinion Research&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Strategic National&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University of Denver&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zogby Interactive/JZ Analytics&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Behavior Research Center (Rocky Mountain)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dan Jones &amp; Associates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florida Atlantic University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hickman Analytics&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marist College&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;National Research, Inc.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Quinnipiac University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Southern Media &amp; Opinion Research&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University of Akron&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Winthrop University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angus Reid Global&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CNN/Opinion Research Corp.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EPIC-MRA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Goucher College&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Just Win Strategies&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Middle Tennessee State University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Political Callers, Inc.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sacramento State&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TargetPoint&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;USC Dornsife/LA Times&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='polls_us_election_2016 (2).csv' id='polls_us_election_2016 (2).csv_A7C28E251CEB46A49B3E5E497FD502E4'>
            <properties context=''>
              <relation connection='textscan.1oaiy3y119terg1c513x11pqt365' name='polls_us_election_2016 (2).csv' table='[polls_us_election_2016 (2)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='date' name='startdate' ordinal='1' />
                  <column datatype='date' name='enddate' ordinal='2' />
                  <column datatype='string' name='pollster' ordinal='3' />
                  <column datatype='string' name='grade' ordinal='4' />
                  <column datatype='integer' name='samplesize' ordinal='5' />
                  <column datatype='string' name='population' ordinal='6' />
                  <column datatype='real' name='rawpoll_clinton' ordinal='7' />
                  <column datatype='real' name='rawpoll_trump' ordinal='8' />
                  <column datatype='string' name='rawpoll_johnson' ordinal='9' />
                  <column datatype='string' name='rawpoll_mcmullin' ordinal='10' />
                  <column datatype='real' name='adjpoll_clinton' ordinal='11' />
                  <column datatype='real' name='adjpoll_trump' ordinal='12' />
                  <column datatype='real' name='adjpoll_johnson' ordinal='13' />
                  <column datatype='real' name='adjpoll_mcmullin' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='all_states_agg_by_day_all_grades' inline='true' name='federated.18wpogt0be3eym1g8lqo01aqp8qs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_states_agg_by_day_all_grades' name='textscan.03btvkd0wtst981beq7941pqqag7'>
            <connection class='textscan' directory='/Users/samanthasellinger/Downloads' filename='all_states_agg_by_day_all_grades.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.03btvkd0wtst981beq7941pqqag7' name='all_states_agg_by_day_all_grades.csv' table='[all_states_agg_by_day_all_grades#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' name='day' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='real' name='rawpoll_clinton' ordinal='2' />
            <column datatype='real' name='rawpoll_trump' ordinal='3' />
            <column datatype='real' name='adjpoll_clinton' ordinal='4' />
            <column datatype='real' name='adjpoll_trump' ordinal='5' />
            <column datatype='real' name='c_minus_t_raw' ordinal='6' />
            <column datatype='real' name='c_minus_t_adj' ordinal='7' />
            <column datatype='real' name='electoral_college' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.03btvkd0wtst981beq7941pqqag7' name='all_states_agg_by_day_all_grades.csv' table='[all_states_agg_by_day_all_grades#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' name='day' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='real' name='rawpoll_clinton' ordinal='2' />
            <column datatype='real' name='rawpoll_trump' ordinal='3' />
            <column datatype='real' name='adjpoll_clinton' ordinal='4' />
            <column datatype='real' name='adjpoll_trump' ordinal='5' />
            <column datatype='real' name='c_minus_t_raw' ordinal='6' />
            <column datatype='real' name='c_minus_t_adj' ordinal='7' />
            <column datatype='real' name='electoral_college' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_states_agg_by_day_all_grades.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>133</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades.csv_0ABE365179284289808C085FA7BF428A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades.csv_0ABE365179284289808C085FA7BF428A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rawpoll_clinton</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rawpoll_clinton]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades.csv]</parent-name>
            <remote-alias>rawpoll_clinton</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades.csv_0ABE365179284289808C085FA7BF428A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rawpoll_trump</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rawpoll_trump]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades.csv]</parent-name>
            <remote-alias>rawpoll_trump</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades.csv_0ABE365179284289808C085FA7BF428A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjpoll_clinton</remote-name>
            <remote-type>5</remote-type>
            <local-name>[adjpoll_clinton]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades.csv]</parent-name>
            <remote-alias>adjpoll_clinton</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades.csv_0ABE365179284289808C085FA7BF428A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjpoll_trump</remote-name>
            <remote-type>5</remote-type>
            <local-name>[adjpoll_trump]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades.csv]</parent-name>
            <remote-alias>adjpoll_trump</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades.csv_0ABE365179284289808C085FA7BF428A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_minus_t_raw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_minus_t_raw]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades.csv]</parent-name>
            <remote-alias>c_minus_t_raw</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades.csv_0ABE365179284289808C085FA7BF428A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>c_minus_t_adj</remote-name>
            <remote-type>5</remote-type>
            <local-name>[c_minus_t_adj]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades.csv]</parent-name>
            <remote-alias>c_minus_t_adj</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades.csv_0ABE365179284289808C085FA7BF428A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>electoral_college</remote-name>
            <remote-type>5</remote-type>
            <local-name>[electoral_college]</local-name>
            <parent-name>[all_states_agg_by_day_all_grades.csv]</parent-name>
            <remote-alias>electoral_college</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_states_agg_by_day_all_grades.csv_0ABE365179284289808C085FA7BF428A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='all_states_agg_by_day_all_grades.csv' datatype='table' name='[__tableau_internal_object_id__].[all_states_agg_by_day_all_grades.csv_0ABE365179284289808C085FA7BF428A]' role='measure' type='quantitative' />
      <column caption='Adjpoll Clinton' datatype='real' name='[adjpoll_clinton]' role='measure' type='quantitative' />
      <column caption='Adjpoll Trump' datatype='real' name='[adjpoll_trump]' role='measure' type='quantitative' />
      <column caption='C Minus T Adj' datatype='real' name='[c_minus_t_adj]' role='measure' type='quantitative' />
      <column caption='C Minus T Raw' datatype='real' name='[c_minus_t_raw]' role='measure' type='quantitative' />
      <column caption='Day' datatype='date' name='[day]' role='dimension' type='ordinal' />
      <column caption='Electoral College' datatype='real' name='[electoral_college]' role='measure' type='quantitative' />
      <column caption='Rawpoll Clinton' datatype='real' name='[rawpoll_clinton]' role='measure' type='quantitative' />
      <column caption='Rawpoll Trump' datatype='real' name='[rawpoll_trump]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all_states_agg_by_day_all_grades.csv' id='all_states_agg_by_day_all_grades.csv_0ABE365179284289808C085FA7BF428A'>
            <properties context=''>
              <relation connection='textscan.03btvkd0wtst981beq7941pqqag7' name='all_states_agg_by_day_all_grades.csv' table='[all_states_agg_by_day_all_grades#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='date' name='day' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='real' name='rawpoll_clinton' ordinal='2' />
                  <column datatype='real' name='rawpoll_trump' ordinal='3' />
                  <column datatype='real' name='adjpoll_clinton' ordinal='4' />
                  <column datatype='real' name='adjpoll_trump' ordinal='5' />
                  <column datatype='real' name='c_minus_t_raw' ordinal='6' />
                  <column datatype='real' name='c_minus_t_adj' ordinal='7' />
                  <column datatype='real' name='electoral_college' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='polls_us_election_2016 (3)' inline='true' name='federated.0v37gcl1aemhbd1ep61q61pz0ff8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='polls_us_election_2016 (3)' name='textscan.08tonye0wtn8rh17ummr31x1tdbs'>
            <connection class='textscan' directory='/Users/samanthasellinger/Downloads' filename='polls_us_election_2016 (3).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.08tonye0wtn8rh17ummr31x1tdbs' name='polls_us_election_2016 (3).csv' table='[polls_us_election_2016 (3)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='date' name='startdate' ordinal='1' />
            <column datatype='date' name='enddate' ordinal='2' />
            <column datatype='string' name='pollster' ordinal='3' />
            <column datatype='string' name='grade' ordinal='4' />
            <column datatype='integer' name='samplesize' ordinal='5' />
            <column datatype='string' name='population' ordinal='6' />
            <column datatype='real' name='rawpoll_clinton' ordinal='7' />
            <column datatype='real' name='rawpoll_trump' ordinal='8' />
            <column datatype='string' name='rawpoll_johnson' ordinal='9' />
            <column datatype='string' name='rawpoll_mcmullin' ordinal='10' />
            <column datatype='real' name='adjpoll_clinton' ordinal='11' />
            <column datatype='real' name='adjpoll_trump' ordinal='12' />
            <column datatype='string' name='adjpoll_johnson' ordinal='13' />
            <column datatype='string' name='adjpoll_mcmullin' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.08tonye0wtn8rh17ummr31x1tdbs' name='polls_us_election_2016 (3).csv' table='[polls_us_election_2016 (3)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='date' name='startdate' ordinal='1' />
            <column datatype='date' name='enddate' ordinal='2' />
            <column datatype='string' name='pollster' ordinal='3' />
            <column datatype='string' name='grade' ordinal='4' />
            <column datatype='integer' name='samplesize' ordinal='5' />
            <column datatype='string' name='population' ordinal='6' />
            <column datatype='real' name='rawpoll_clinton' ordinal='7' />
            <column datatype='real' name='rawpoll_trump' ordinal='8' />
            <column datatype='string' name='rawpoll_johnson' ordinal='9' />
            <column datatype='string' name='rawpoll_mcmullin' ordinal='10' />
            <column datatype='real' name='adjpoll_clinton' ordinal='11' />
            <column datatype='real' name='adjpoll_trump' ordinal='12' />
            <column datatype='string' name='adjpoll_johnson' ordinal='13' />
            <column datatype='string' name='adjpoll_mcmullin' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>startdate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[startdate]</local-name>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias>startdate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>enddate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[enddate]</local-name>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias>enddate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pollster</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pollster]</local-name>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias>pollster</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[grade]</local-name>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias>grade</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>samplesize</remote-name>
            <remote-type>20</remote-type>
            <local-name>[samplesize]</local-name>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias>samplesize</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>129</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rawpoll_clinton</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rawpoll_clinton]</local-name>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias>rawpoll_clinton</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rawpoll_trump</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rawpoll_trump]</local-name>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias>rawpoll_trump</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rawpoll_johnson</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rawpoll_johnson]</local-name>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias>rawpoll_johnson</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rawpoll_mcmullin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rawpoll_mcmullin]</local-name>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias>rawpoll_mcmullin</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjpoll_clinton</remote-name>
            <remote-type>5</remote-type>
            <local-name>[adjpoll_clinton]</local-name>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias>adjpoll_clinton</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjpoll_trump</remote-name>
            <remote-type>5</remote-type>
            <local-name>[adjpoll_trump]</local-name>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias>adjpoll_trump</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjpoll_johnson</remote-name>
            <remote-type>129</remote-type>
            <local-name>[adjpoll_johnson]</local-name>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias>adjpoll_johnson</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjpoll_mcmullin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[adjpoll_mcmullin]</local-name>
            <parent-name>[polls_us_election_2016 (3).csv]</parent-name>
            <remote-alias>adjpoll_mcmullin</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='c-minus-t-raw' datatype='real' name='[Calculation_1014224777668083717]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[rawpoll_clinton]-[rawpoll_trump]' />
      </column>
      <column aggregation='None' datatype='integer' name='[Samplesize (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[samplesize]' peg='0' size='2357' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='polls_us_election_2016 (3).csv' datatype='table' name='[__tableau_internal_object_id__].[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]' role='measure' type='quantitative' />
      <column caption='Adjpoll Clinton' datatype='real' name='[adjpoll_clinton]' role='measure' type='quantitative' />
      <column caption='Adjpoll Johnson' datatype='real' datatype-customized='true' name='[adjpoll_johnson]' role='dimension' type='ordinal' />
      <column caption='Adjpoll Mcmullin' datatype='real' datatype-customized='true' name='[adjpoll_mcmullin]' role='dimension' type='ordinal' />
      <column caption='Adjpoll Trump' datatype='real' name='[adjpoll_trump]' role='measure' type='quantitative' />
      <column caption='Enddate' datatype='date' name='[enddate]' role='dimension' type='ordinal' />
      <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal' />
      <column caption='Pollster' datatype='string' name='[pollster]' role='dimension' type='nominal' />
      <column caption='Population' datatype='string' name='[population]' role='dimension' type='nominal' />
      <column caption='Rawpoll Clinton' datatype='real' name='[rawpoll_clinton]' role='measure' type='quantitative' />
      <column caption='Rawpoll Johnson' datatype='string' name='[rawpoll_johnson]' role='dimension' type='nominal' />
      <column caption='Rawpoll Mcmullin' datatype='string' name='[rawpoll_mcmullin]' role='dimension' type='nominal' />
      <column caption='Rawpoll Trump' datatype='real' name='[rawpoll_trump]' role='measure' type='quantitative' />
      <column caption='Samplesize' datatype='real' datatype-customized='true' name='[samplesize]' role='measure' type='quantitative' />
      <column caption='Startdate' datatype='date' name='[startdate]' role='dimension' type='ordinal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/samanthasellinger/Documents/polls_us_election_2016 (3).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/30/2024 11:09:36 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='polls_us_election_2016 (3)' increment-value='%null%' refresh-type='create' rows-inserted='4208' timestamp-start='2024-09-30 23:09:36.556' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>0</ordinal>
              <family>polls_us_election_2016 (3).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>startdate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[startdate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>startdate</remote-alias>
              <ordinal>1</ordinal>
              <family>polls_us_election_2016 (3).csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>303</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>enddate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[enddate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>enddate</remote-alias>
              <ordinal>2</ordinal>
              <family>polls_us_election_2016 (3).csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>301</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pollster</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pollster]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pollster</remote-alias>
              <ordinal>3</ordinal>
              <family>polls_us_election_2016 (3).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>159</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>grade</remote-name>
              <remote-type>129</remote-type>
              <local-name>[grade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>grade</remote-alias>
              <ordinal>4</ordinal>
              <family>polls_us_election_2016 (3).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>samplesize</remote-name>
              <remote-type>20</remote-type>
              <local-name>[samplesize]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>samplesize</remote-alias>
              <ordinal>5</ordinal>
              <family>polls_us_election_2016 (3).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1380</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>129</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>6</ordinal>
              <family>polls_us_election_2016 (3).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rawpoll_clinton</remote-name>
              <remote-type>5</remote-type>
              <local-name>[rawpoll_clinton]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rawpoll_clinton</remote-alias>
              <ordinal>7</ordinal>
              <family>polls_us_election_2016 (3).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>918</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rawpoll_trump</remote-name>
              <remote-type>5</remote-type>
              <local-name>[rawpoll_trump]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rawpoll_trump</remote-alias>
              <ordinal>8</ordinal>
              <family>polls_us_election_2016 (3).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>971</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rawpoll_johnson</remote-name>
              <remote-type>129</remote-type>
              <local-name>[rawpoll_johnson]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rawpoll_johnson</remote-alias>
              <ordinal>9</ordinal>
              <family>polls_us_election_2016 (3).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>429</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rawpoll_mcmullin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[rawpoll_mcmullin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rawpoll_mcmullin</remote-alias>
              <ordinal>10</ordinal>
              <family>polls_us_election_2016 (3).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>adjpoll_clinton</remote-name>
              <remote-type>5</remote-type>
              <local-name>[adjpoll_clinton]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>adjpoll_clinton</remote-alias>
              <ordinal>11</ordinal>
              <family>polls_us_election_2016 (3).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4081</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>adjpoll_trump</remote-name>
              <remote-type>5</remote-type>
              <local-name>[adjpoll_trump]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>adjpoll_trump</remote-alias>
              <ordinal>12</ordinal>
              <family>polls_us_election_2016 (3).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4081</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>adjpoll_johnson</remote-name>
              <remote-type>129</remote-type>
              <local-name>[adjpoll_johnson]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>adjpoll_johnson</remote-alias>
              <ordinal>13</ordinal>
              <family>polls_us_election_2016 (3).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1441</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>adjpoll_mcmullin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[adjpoll_mcmullin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>adjpoll_mcmullin</remote-alias>
              <ordinal>14</ordinal>
              <family>polls_us_election_2016 (3).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='polls_us_election_2016 (3).csv' id='polls_us_election_2016 (3).csv_E7A39B20E25C45388A433F4F5A829B2F'>
            <properties context=''>
              <relation connection='textscan.08tonye0wtn8rh17ummr31x1tdbs' name='polls_us_election_2016 (3).csv' table='[polls_us_election_2016 (3)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='date' name='startdate' ordinal='1' />
                  <column datatype='date' name='enddate' ordinal='2' />
                  <column datatype='string' name='pollster' ordinal='3' />
                  <column datatype='string' name='grade' ordinal='4' />
                  <column datatype='integer' name='samplesize' ordinal='5' />
                  <column datatype='string' name='population' ordinal='6' />
                  <column datatype='real' name='rawpoll_clinton' ordinal='7' />
                  <column datatype='real' name='rawpoll_trump' ordinal='8' />
                  <column datatype='string' name='rawpoll_johnson' ordinal='9' />
                  <column datatype='string' name='rawpoll_mcmullin' ordinal='10' />
                  <column datatype='real' name='adjpoll_clinton' ordinal='11' />
                  <column datatype='real' name='adjpoll_trump' ordinal='12' />
                  <column datatype='string' name='adjpoll_johnson' ordinal='13' />
                  <column datatype='string' name='adjpoll_mcmullin' ordinal='14' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='(GOOD) Count of Polls by Week of End Date'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#596773'>Count of Polls by Week of End Date</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='polls_us_election_2016 (2)' name='federated.1ct9zde12gywhr12vj9d810jhayw' />
          </datasources>
          <datasource-dependencies datasource='federated.1ct9zde12gywhr12vj9d810jhayw'>
            <column-instance column='[pollster]' derivation='Count' name='[cnt:pollster:qk]' pivot='key' type='quantitative' />
            <column caption='Enddate' datatype='date' name='[enddate]' role='dimension' type='ordinal' />
            <column caption='Pollster' datatype='string' name='[pollster]' role='dimension' type='nominal' />
            <column-instance column='[enddate]' derivation='Week-Trunc' name='[twk:enddate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]' scope='rows' value='Number of Polls ' />
            <format attr='title' class='0' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[twk:enddate:qk]' scope='cols' value='Week of End Date' />
            <encoding attr='space' class='0' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[twk:enddate:qk]' field-type='quantitative' major-origin='#2016-05-08 00:00:00#' major-spacing='2' major-units='months' max='#2016-11-25 00:00:00#' min='#2015-10-20 00:00:00#' range-type='fixed' scope='cols' type='space' />
            <format attr='tick-color' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[twk:enddate:qk]' value='#596773' />
            <format attr='tick-color' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]' value='#596773' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[twk:enddate:qk]' value='S' />
            <format attr='color' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[twk:enddate:qk]' value='#596773' />
            <format attr='color' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]' value='#596773' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#2abb7f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]</rows>
        <cols>[federated.1ct9zde12gywhr12vj9d810jhayw].[twk:enddate:qk]</cols>
      </table>
      <simple-id uuid='{641A4B73-1334-4EA8-8476-9D8A453C9E02}' />
    </worksheet>
    <worksheet name='(GOOD) Number of Polls by State'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#596773'>Number of Polls by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='polls_us_election_2016 (2)' name='federated.1ct9zde12gywhr12vj9d810jhayw' />
          </datasources>
          <datasource-dependencies datasource='federated.1ct9zde12gywhr12vj9d810jhayw'>
            <column-instance column='[pollster]' derivation='Count' name='[cnt:pollster:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Pollster' datatype='string' name='[pollster]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Alabama&quot;' value='AL' />
                <alias key='&quot;Alaska&quot;' value='AK' />
                <alias key='&quot;Arizona&quot;' value='AZ' />
                <alias key='&quot;Arkansas&quot;' value='AR' />
                <alias key='&quot;California&quot;' value='CA' />
                <alias key='&quot;Colorado&quot;' value='CO' />
                <alias key='&quot;Connecticut&quot;' value='CT' />
                <alias key='&quot;Delaware&quot;' value='DE' />
                <alias key='&quot;District of Columbia&quot;' value='DC' />
                <alias key='&quot;Florida&quot;' value='FL' />
                <alias key='&quot;Georgia&quot;' value='GA' />
                <alias key='&quot;Hawaii&quot;' value='HI' />
                <alias key='&quot;Idaho&quot;' value='ID' />
                <alias key='&quot;Illinois&quot;' value='IL' />
                <alias key='&quot;Indiana&quot;' value='IN' />
                <alias key='&quot;Iowa&quot;' value='IA' />
                <alias key='&quot;Kansas&quot;' value='KS' />
                <alias key='&quot;Kentucky&quot;' value='KY' />
                <alias key='&quot;Louisiana&quot;' value='LA' />
                <alias key='&quot;Maine&quot;' value='ME' />
                <alias key='&quot;Maine CD-1&quot;' value='ME-1' />
                <alias key='&quot;Maine CD-2&quot;' value='ME-2' />
                <alias key='&quot;Maryland&quot;' value='MD' />
                <alias key='&quot;Massachusetts&quot;' value='MA' />
                <alias key='&quot;Michigan&quot;' value='MI' />
                <alias key='&quot;Minnesota&quot;' value='MN' />
                <alias key='&quot;Mississippi&quot;' value='MS' />
                <alias key='&quot;Missouri&quot;' value='MO' />
                <alias key='&quot;Montana&quot;' value='MT' />
                <alias key='&quot;Nebraska&quot;' value='NE' />
                <alias key='&quot;Nebraska CD-1&quot;' value='NE-1' />
                <alias key='&quot;Nebraska CD-2&quot;' value='NE-2' />
                <alias key='&quot;Nebraska CD-3&quot;' value='NE-3' />
                <alias key='&quot;Nevada&quot;' value='NV' />
                <alias key='&quot;New Hampshire&quot;' value='NH' />
                <alias key='&quot;New Jersey&quot;' value='NJ' />
                <alias key='&quot;New Mexico&quot;' value='NM' />
                <alias key='&quot;New York&quot;' value='NY' />
                <alias key='&quot;North Carolina&quot;' value='NC' />
                <alias key='&quot;North Dakota&quot;' value='ND' />
                <alias key='&quot;Ohio&quot;' value='OH' />
                <alias key='&quot;Oklahoma&quot;' value='OK' />
                <alias key='&quot;Oregon&quot;' value='OR' />
                <alias key='&quot;Pennsylvania&quot;' value='PA' />
                <alias key='&quot;Rhode Island&quot;' value='RI' />
                <alias key='&quot;South Carolina&quot;' value='SC' />
                <alias key='&quot;South Dakota&quot;' value='SD' />
                <alias key='&quot;Tennessee&quot;' value='TN' />
                <alias key='&quot;Texas&quot;' value='TX' />
                <alias key='&quot;Utah&quot;' value='UT' />
                <alias key='&quot;Vermont&quot;' value='VT' />
                <alias key='&quot;Virginia&quot;' value='VA' />
                <alias key='&quot;Washington&quot;' value='WA' />
                <alias key='&quot;West Virginia&quot;' value='WV' />
                <alias key='&quot;Wisconsin&quot;' value='WI' />
                <alias key='&quot;Wyoming&quot;' value='WY' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Maine CD-1&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Maine CD-2&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Nebraska CD-1&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Nebraska CD-2&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Nebraska CD-3&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='938' />
            <format attr='height' value='637' />
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]' value='5' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d9ebe4</color>
                <color>#c2e6d7</color>
                <color>#ace0cb</color>
                <color>#97dbbf</color>
                <color>#83d6b3</color>
                <color>#6fd0a8</color>
                <color>#5ccb9d</color>
                <color>#4bc593</color>
                <color>#3ac088</color>
                <color>#2abb7f</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]' value='Count of Polls'>
              <formatted-text>
                <run>Count of Polls</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='solid' />
            <format attr='border-style' id='annotation_1' value='solid' />
            <format attr='border-style' id='annotation_2' value='solid' />
            <format attr='stroke-color' id='annotation_1' value='#596773' />
            <format attr='fill-color' id='annotation_1' value='#f5f5f5' />
            <format attr='border-color' id='annotation_1' value='#596773' />
            <format attr='fill-color' id='annotation_0' value='#f5f5f5' />
            <format attr='border-color' id='annotation_0' value='#596773' />
            <format attr='fill-color' id='annotation_2' value='#f5f5f5' />
            <format attr='border-color' id='annotation_2' value='#596773' />
            <format attr='stroke-color' id='annotation_2' value='#596773' />
            <format attr='stroke-color' id='annotation_0' value='#596773' />
            <format attr='body-type' id='annotation_2' value='box' />
            <format attr='rounding' id='annotation_2' value='large' />
            <format attr='rounding' id='annotation_1' value='large' />
            <format attr='body-type' id='annotation_1' value='box' />
            <format attr='body-type' id='annotation_0' value='box' />
            <format attr='rounding' id='annotation_0' value='large' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]' />
              <color column='[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]' />
              <text column='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='8' />
                <format attr='color' value='#1b1b1b' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]</field>
                  <field>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2</value>
                <value>&quot;Nebraska CD-2&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]</field>
                  <field>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>11</value>
                <value>&quot;Maine CD-1&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]</field>
                  <field>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1</value>
                <value>&quot;Nebraska CD-3&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='69'>
            <formatted-text>
              <run bold='true' fontalignment='2' fontcolor='#1b1b1b' fontsize='8'>&lt;</run>
              <run bold='true' fontalignment='2' fontcolor='#1b1b1b' fontsize='8'>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]</run>
              <run bold='true' fontalignment='2' fontcolor='#1b1b1b' fontsize='8'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]</field>
                      <field>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>2</value>
                    <value>&quot;Nebraska CD-2&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-30' y='-58' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='64'>
            <formatted-text>
              <run bold='true' fontcolor='#1b1b1b' fontsize='8'><![CDATA[<[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]</field>
                      <field>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>1</value>
                    <value>&quot;Nebraska CD-1&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-126' y='-57' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='64'>
            <formatted-text>
              <run bold='true' fontcolor='#1b1b1b' fontsize='8'><![CDATA[<[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]</field>
                      <field>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>1</value>
                    <value>&quot;Nebraska CD-3&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-171' y='-13' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{47CBDFF4-35E4-425F-9A4C-BEC29C91FD5B}' />
    </worksheet>
    <worksheet name='(Good) Count of Polls by Grade'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#596773'>Count of Polls by Grade</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='polls_us_election_2016 (2)' name='federated.1ct9zde12gywhr12vj9d810jhayw' />
          </datasources>
          <datasource-dependencies datasource='federated.1ct9zde12gywhr12vj9d810jhayw'>
            <column-instance column='[pollster]' derivation='Count' name='[cnt:pollster:qk]' pivot='key' type='quantitative' />
            <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal' />
            <column-instance column='[grade]' derivation='None' name='[none:grade:nk]' pivot='key' type='nominal' />
            <column caption='Pollster' datatype='string' name='[pollster]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:grade:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;A+&quot;</bucket>
              <bucket>&quot;A&quot;</bucket>
              <bucket>&quot;A-&quot;</bucket>
              <bucket>&quot;B+&quot;</bucket>
              <bucket>&quot;B&quot;</bucket>
              <bucket>&quot;B-&quot;</bucket>
              <bucket>&quot;C+&quot;</bucket>
              <bucket>&quot;C&quot;</bucket>
              <bucket>&quot;C-&quot;</bucket>
              <bucket>&quot;D&quot;</bucket>
              <bucket>&quot;NA&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]' scope='rows' value='Number of Polls' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#596773' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]' value='#596773' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#2abb7f' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#596773' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='420' />
                <format attr='maxheight' value='420' />
                <format attr='minwidth' value='660' />
                <format attr='maxwidth' value='660' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]</rows>
        <cols>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:grade:nk]</cols>
      </table>
      <simple-id uuid='{9C8DC76F-C6FC-4B4A-8F52-52020CF679CA}' />
    </worksheet>
    <worksheet name='Boxplot of Sample Size by Grade'>
      <table>
        <view>
          <datasources>
            <datasource caption='polls_us_election_2016 (2)' name='federated.1ct9zde12gywhr12vj9d810jhayw' />
          </datasources>
          <datasource-dependencies datasource='federated.1ct9zde12gywhr12vj9d810jhayw'>
            <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal' />
            <column-instance column='[grade]' derivation='None' name='[none:grade:nk]' pivot='key' type='nominal' />
            <column-instance column='[samplesize]' derivation='None' name='[none:samplesize:qk]' pivot='key' type='quantitative' />
            <column caption='Samplesize' datatype='integer' name='[samplesize]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:samplesize:qk]' scope='rows' value='Sample Size' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:grade:nk]' value='35' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:samplesize:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:samplesize:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:samplesize:qk]</rows>
        <cols>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:grade:nk]</cols>
      </table>
      <simple-id uuid='{23EE9544-6881-4AF7-AA03-10207ED306D0}' />
    </worksheet>
    <worksheet name='Bubble Chart Pollsters by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='polls_us_election_2016 (2)' name='federated.1ct9zde12gywhr12vj9d810jhayw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ct9zde12gywhr12vj9d810jhayw'>
            <column-instance column='[pollster]' derivation='Count' name='[cnt:pollster:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Pollster' datatype='string' name='[pollster]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Alabama&quot;' value='AL' />
                <alias key='&quot;Alaska&quot;' value='AK' />
                <alias key='&quot;Arizona&quot;' value='AZ' />
                <alias key='&quot;Arkansas&quot;' value='AR' />
                <alias key='&quot;California&quot;' value='CA' />
                <alias key='&quot;Colorado&quot;' value='CO' />
                <alias key='&quot;Connecticut&quot;' value='CT' />
                <alias key='&quot;Delaware&quot;' value='DE' />
                <alias key='&quot;District of Columbia&quot;' value='DC' />
                <alias key='&quot;Florida&quot;' value='FL' />
                <alias key='&quot;Georgia&quot;' value='GA' />
                <alias key='&quot;Hawaii&quot;' value='HI' />
                <alias key='&quot;Idaho&quot;' value='ID' />
                <alias key='&quot;Illinois&quot;' value='IL' />
                <alias key='&quot;Indiana&quot;' value='IN' />
                <alias key='&quot;Iowa&quot;' value='IA' />
                <alias key='&quot;Kansas&quot;' value='KS' />
                <alias key='&quot;Kentucky&quot;' value='KY' />
                <alias key='&quot;Louisiana&quot;' value='LA' />
                <alias key='&quot;Maine&quot;' value='ME' />
                <alias key='&quot;Maine CD-1&quot;' value='ME-1' />
                <alias key='&quot;Maine CD-2&quot;' value='ME-2' />
                <alias key='&quot;Maryland&quot;' value='MD' />
                <alias key='&quot;Massachusetts&quot;' value='MA' />
                <alias key='&quot;Michigan&quot;' value='MI' />
                <alias key='&quot;Minnesota&quot;' value='MN' />
                <alias key='&quot;Mississippi&quot;' value='MS' />
                <alias key='&quot;Missouri&quot;' value='MO' />
                <alias key='&quot;Montana&quot;' value='MT' />
                <alias key='&quot;Nebraska&quot;' value='NE' />
                <alias key='&quot;Nebraska CD-1&quot;' value='NE-1' />
                <alias key='&quot;Nebraska CD-2&quot;' value='NE-2' />
                <alias key='&quot;Nebraska CD-3&quot;' value='NE-3' />
                <alias key='&quot;Nevada&quot;' value='NV' />
                <alias key='&quot;New Hampshire&quot;' value='NH' />
                <alias key='&quot;New Jersey&quot;' value='NJ' />
                <alias key='&quot;New Mexico&quot;' value='NM' />
                <alias key='&quot;New York&quot;' value='NY' />
                <alias key='&quot;North Carolina&quot;' value='NC' />
                <alias key='&quot;North Dakota&quot;' value='ND' />
                <alias key='&quot;Ohio&quot;' value='OH' />
                <alias key='&quot;Oklahoma&quot;' value='OK' />
                <alias key='&quot;Oregon&quot;' value='OR' />
                <alias key='&quot;Pennsylvania&quot;' value='PA' />
                <alias key='&quot;Rhode Island&quot;' value='RI' />
                <alias key='&quot;South Carolina&quot;' value='SC' />
                <alias key='&quot;South Dakota&quot;' value='SD' />
                <alias key='&quot;Tennessee&quot;' value='TN' />
                <alias key='&quot;Texas&quot;' value='TX' />
                <alias key='&quot;Utah&quot;' value='UT' />
                <alias key='&quot;Vermont&quot;' value='VT' />
                <alias key='&quot;Virginia&quot;' value='VA' />
                <alias key='&quot;Washington&quot;' value='WA' />
                <alias key='&quot;West Virginia&quot;' value='WV' />
                <alias key='&quot;Wisconsin&quot;' value='WI' />
                <alias key='&quot;Wyoming&quot;' value='WY' />
              </aliases>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]' />
              <text column='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8A7C1C8F-358E-4FA4-8361-27C972F29EEF}' />
    </worksheet>
    <worksheet name='Clinton Minus Trump Raw'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#596773'>Clinton Minus Trump Raw Polls, Uncleaned Data (by end date)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='polls_us_election_2016 (2)' name='federated.1ct9zde12gywhr12vj9d810jhayw' />
          </datasources>
          <datasource-dependencies datasource='federated.1ct9zde12gywhr12vj9d810jhayw'>
            <column caption='c-minus-t_raw' datatype='real' name='[Calculation_1014224777256529922]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[rawpoll_clinton]-[rawpoll_trump]' />
            </column>
            <column-instance column='[Calculation_1014224777256529922]' derivation='Avg' name='[avg:Calculation_1014224777256529922:qk]' pivot='key' type='quantitative' />
            <column caption='Enddate' datatype='date' name='[enddate]' role='dimension' type='ordinal' />
            <column-instance column='[enddate]' derivation='Month' name='[mn:enddate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[enddate]' derivation='None' name='[none:enddate:qk]' pivot='key' type='quantitative' />
            <column caption='Rawpoll Clinton' datatype='real' name='[rawpoll_clinton]' role='measure' type='quantitative' />
            <column caption='Rawpoll Trump' datatype='real' name='[rawpoll_trump]' role='measure' type='quantitative' />
            <column-instance column='[enddate]' derivation='Year' name='[yr:enddate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ct9zde12gywhr12vj9d810jhayw].[mn:enddate:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:enddate:ok]' member='7' />
              <groupfilter function='member' level='[mn:enddate:ok]' member='8' />
              <groupfilter function='member' level='[mn:enddate:ok]' member='9' />
              <groupfilter function='member' level='[mn:enddate:ok]' member='10' />
              <groupfilter function='member' level='[mn:enddate:ok]' member='11' />
              <groupfilter function='member' level='[mn:enddate:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ct9zde12gywhr12vj9d810jhayw].[yr:enddate:ok]'>
            <groupfilter function='member' level='[yr:enddate:ok]' member='2016' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ct9zde12gywhr12vj9d810jhayw].[yr:enddate:ok]</column>
            <column>[federated.1ct9zde12gywhr12vj9d810jhayw].[mn:enddate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[avg:Calculation_1014224777256529922:qk]' scope='rows' value='Average of Clinton Minus Trump (Raw)' />
            <format attr='title' class='0' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:enddate:qk]' scope='cols' value='Poll End Date' />
            <format attr='height' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:enddate:qk]' value='50' />
            <encoding attr='space' class='0' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[avg:Calculation_1014224777256529922:qk]' field-type='quantitative' major-origin='0.0' major-spacing='5.0' max='20.0' min='-10.0' range-type='fixed' scope='rows' type='space' />
            <format attr='tick-color' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:enddate:qk]' value='#596773' />
            <format attr='tick-color' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[avg:Calculation_1014224777256529922:qk]' value='#596773' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[avg:Calculation_1014224777256529922:qk]' value='#ffffff' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='rows' value='#596773' />
            <format attr='color' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:enddate:qk]' value='#596773' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[avg:Calculation_1014224777256529922:qk]' max='0.1' min='-0.1' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#f15b50</color>
                <color>#ee675d</color>
                <color>#ec746b</color>
                <color>#ea8078</color>
                <color>#e88c85</color>
                <color>#e69792</color>
                <color>#e3a39e</color>
                <color>#e1aeaa</color>
                <color>#dfb9b6</color>
                <color>#ddc4c2</color>
                <color>#dbcecd</color>
                <color>#d9d9d9</color>
                <color>#ccd3dc</color>
                <color>#c0cddf</color>
                <color>#b2c7e3</color>
                <color>#a5c0e6</color>
                <color>#97b9ea</color>
                <color>#88b2ed</color>
                <color>#79abf1</color>
                <color>#69a3f4</color>
                <color>#599bf8</color>
                <color>#4993fb</color>
                <color>#388bff</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[avg:Calculation_1014224777256529922:qk]' value='Average of C Minus T'>
              <formatted-text>
                <run>Average of C Minus T</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ct9zde12gywhr12vj9d810jhayw].[avg:Calculation_1014224777256529922:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='233' />
                <format attr='maxheight' value='233' />
                <format attr='minwidth' value='877' />
                <format attr='maxwidth' value='877' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ct9zde12gywhr12vj9d810jhayw].[avg:Calculation_1014224777256529922:qk]</rows>
        <cols>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:enddate:qk]</cols>
      </table>
      <simple-id uuid='{07DF73AE-99C9-4E34-B467-F64D39F433D0}' />
    </worksheet>
    <worksheet name='Clinton Minus Trump Raw, Cleaned Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#596773'>Clinton Minus Trump Raw, Cleaned Data</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_states_agg_by_day_all_grades' name='federated.18wpogt0be3eym1g8lqo01aqp8qs' />
          </datasources>
          <datasource-dependencies datasource='federated.18wpogt0be3eym1g8lqo01aqp8qs'>
            <column-instance column='[c_minus_t_raw]' derivation='Avg' name='[avg:c_minus_t_raw:qk]' pivot='key' type='quantitative' />
            <column caption='C Minus T Raw' datatype='real' name='[c_minus_t_raw]' role='measure' type='quantitative' />
            <column caption='Day' datatype='date' name='[day]' role='dimension' type='ordinal' />
            <column-instance column='[day]' derivation='Month' name='[mn:day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[day]' derivation='None' name='[none:day:qk]' pivot='key' type='quantitative' />
            <column-instance column='[day]' derivation='Year' name='[yr:day:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18wpogt0be3eym1g8lqo01aqp8qs].[mn:day:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:day:ok]' member='7' />
              <groupfilter function='member' level='[mn:day:ok]' member='8' />
              <groupfilter function='member' level='[mn:day:ok]' member='9' />
              <groupfilter function='member' level='[mn:day:ok]' member='10' />
              <groupfilter function='member' level='[mn:day:ok]' member='11' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18wpogt0be3eym1g8lqo01aqp8qs].[yr:day:ok]'>
            <groupfilter function='member' level='[yr:day:ok]' member='2016' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18wpogt0be3eym1g8lqo01aqp8qs].[yr:day:ok]</column>
            <column>[federated.18wpogt0be3eym1g8lqo01aqp8qs].[mn:day:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.18wpogt0be3eym1g8lqo01aqp8qs].[none:day:qk]' value='55' />
            <format attr='title' class='0' field='[federated.18wpogt0be3eym1g8lqo01aqp8qs].[avg:c_minus_t_raw:qk]' scope='rows' value='Average of Clinton Minus Trump (Raw)' />
            <encoding attr='space' class='0' field='[federated.18wpogt0be3eym1g8lqo01aqp8qs].[avg:c_minus_t_raw:qk]' field-type='quantitative' major-origin='0.0' major-spacing='5.0' max='20.0' min='-10.0' range-type='fixed' scope='rows' type='space' />
            <format attr='tick-color' field='[federated.18wpogt0be3eym1g8lqo01aqp8qs].[avg:c_minus_t_raw:qk]' value='#596773' />
            <format attr='tick-color' field='[federated.18wpogt0be3eym1g8lqo01aqp8qs].[none:day:qk]' value='#596773' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.18wpogt0be3eym1g8lqo01aqp8qs].[none:day:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.18wpogt0be3eym1g8lqo01aqp8qs].[avg:c_minus_t_raw:qk]' value='#596773' />
            <format attr='color' field='[federated.18wpogt0be3eym1g8lqo01aqp8qs].[none:day:qk]' value='#596773' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18wpogt0be3eym1g8lqo01aqp8qs].[avg:c_minus_t_raw:qk]' max='0.1' min='-0.1' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#f15b50</color>
                <color>#ee675d</color>
                <color>#ec746b</color>
                <color>#ea8078</color>
                <color>#e88c85</color>
                <color>#e69792</color>
                <color>#e3a39e</color>
                <color>#e1aeaa</color>
                <color>#dfb9b6</color>
                <color>#ddc4c2</color>
                <color>#dbcecd</color>
                <color>#d9d9d9</color>
                <color>#ccd3dc</color>
                <color>#c0cddf</color>
                <color>#b2c7e3</color>
                <color>#a5c0e6</color>
                <color>#97b9ea</color>
                <color>#88b2ed</color>
                <color>#79abf1</color>
                <color>#69a3f4</color>
                <color>#599bf8</color>
                <color>#4993fb</color>
                <color>#388bff</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18wpogt0be3eym1g8lqo01aqp8qs].[avg:c_minus_t_raw:qk]' value='Average of C Minus T'>
              <formatted-text>
                <run>Average of C Minus T</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18wpogt0be3eym1g8lqo01aqp8qs].[avg:c_minus_t_raw:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='232' />
                <format attr='maxheight' value='232' />
                <format attr='minwidth' value='862' />
                <format attr='maxwidth' value='862' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18wpogt0be3eym1g8lqo01aqp8qs].[avg:c_minus_t_raw:qk]</rows>
        <cols>[federated.18wpogt0be3eym1g8lqo01aqp8qs].[none:day:qk]</cols>
      </table>
      <simple-id uuid='{382CD767-6F48-4CA5-AF04-64C2511FD45D}' />
    </worksheet>
    <worksheet name='Count of Polls by Population'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Count of Polls by Population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='polls_us_election_2016 (2)' name='federated.1ct9zde12gywhr12vj9d810jhayw' />
          </datasources>
          <datasource-dependencies datasource='federated.1ct9zde12gywhr12vj9d810jhayw'>
            <column-instance column='[pollster]' derivation='Count' name='[cnt:pollster:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='None' name='[none:population:nk]' pivot='key' type='nominal' />
            <column caption='Pollster' datatype='string' name='[pollster]' role='dimension' type='nominal' />
            <column caption='Population' datatype='string' name='[population]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]</rows>
        <cols>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:population:nk]</cols>
      </table>
      <simple-id uuid='{C3205D7A-CF51-4DDC-ABC7-1DDDA3FB1A7A}' />
    </worksheet>
    <worksheet name='Count of Pollsters by State Treemap'>
      <table>
        <view>
          <datasources>
            <datasource caption='polls_us_election_2016 (2)' name='federated.1ct9zde12gywhr12vj9d810jhayw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ct9zde12gywhr12vj9d810jhayw'>
            <column-instance column='[pollster]' derivation='Count' name='[cnt:pollster:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Pollster' datatype='string' name='[pollster]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Alabama&quot;' value='AL' />
                <alias key='&quot;Alaska&quot;' value='AK' />
                <alias key='&quot;Arizona&quot;' value='AZ' />
                <alias key='&quot;Arkansas&quot;' value='AR' />
                <alias key='&quot;California&quot;' value='CA' />
                <alias key='&quot;Colorado&quot;' value='CO' />
                <alias key='&quot;Connecticut&quot;' value='CT' />
                <alias key='&quot;Delaware&quot;' value='DE' />
                <alias key='&quot;District of Columbia&quot;' value='DC' />
                <alias key='&quot;Florida&quot;' value='FL' />
                <alias key='&quot;Georgia&quot;' value='GA' />
                <alias key='&quot;Hawaii&quot;' value='HI' />
                <alias key='&quot;Idaho&quot;' value='ID' />
                <alias key='&quot;Illinois&quot;' value='IL' />
                <alias key='&quot;Indiana&quot;' value='IN' />
                <alias key='&quot;Iowa&quot;' value='IA' />
                <alias key='&quot;Kansas&quot;' value='KS' />
                <alias key='&quot;Kentucky&quot;' value='KY' />
                <alias key='&quot;Louisiana&quot;' value='LA' />
                <alias key='&quot;Maine&quot;' value='ME' />
                <alias key='&quot;Maine CD-1&quot;' value='ME-1' />
                <alias key='&quot;Maine CD-2&quot;' value='ME-2' />
                <alias key='&quot;Maryland&quot;' value='MD' />
                <alias key='&quot;Massachusetts&quot;' value='MA' />
                <alias key='&quot;Michigan&quot;' value='MI' />
                <alias key='&quot;Minnesota&quot;' value='MN' />
                <alias key='&quot;Mississippi&quot;' value='MS' />
                <alias key='&quot;Missouri&quot;' value='MO' />
                <alias key='&quot;Montana&quot;' value='MT' />
                <alias key='&quot;Nebraska&quot;' value='NE' />
                <alias key='&quot;Nebraska CD-1&quot;' value='NE-1' />
                <alias key='&quot;Nebraska CD-2&quot;' value='NE-2' />
                <alias key='&quot;Nebraska CD-3&quot;' value='NE-3' />
                <alias key='&quot;Nevada&quot;' value='NV' />
                <alias key='&quot;New Hampshire&quot;' value='NH' />
                <alias key='&quot;New Jersey&quot;' value='NJ' />
                <alias key='&quot;New Mexico&quot;' value='NM' />
                <alias key='&quot;New York&quot;' value='NY' />
                <alias key='&quot;North Carolina&quot;' value='NC' />
                <alias key='&quot;North Dakota&quot;' value='ND' />
                <alias key='&quot;Ohio&quot;' value='OH' />
                <alias key='&quot;Oklahoma&quot;' value='OK' />
                <alias key='&quot;Oregon&quot;' value='OR' />
                <alias key='&quot;Pennsylvania&quot;' value='PA' />
                <alias key='&quot;Rhode Island&quot;' value='RI' />
                <alias key='&quot;South Carolina&quot;' value='SC' />
                <alias key='&quot;South Dakota&quot;' value='SD' />
                <alias key='&quot;Tennessee&quot;' value='TN' />
                <alias key='&quot;Texas&quot;' value='TX' />
                <alias key='&quot;Utah&quot;' value='UT' />
                <alias key='&quot;Vermont&quot;' value='VT' />
                <alias key='&quot;Virginia&quot;' value='VA' />
                <alias key='&quot;Washington&quot;' value='WA' />
                <alias key='&quot;West Virginia&quot;' value='WV' />
                <alias key='&quot;Wisconsin&quot;' value='WI' />
                <alias key='&quot;Wyoming&quot;' value='WY' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Maine CD-1&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Maine CD-2&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Nebraska CD-1&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Nebraska CD-2&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Nebraska CD-3&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1073' />
            <format attr='text-align' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]' value='auto' />
            <format attr='vertical-align' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]' value='auto' />
            <format attr='wrap' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]' value='on' />
            <format attr='font-size' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]' value='7' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]' num-steps='5' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#dfebe4</color>
                <color>#cee5d8</color>
                <color>#bee0cc</color>
                <color>#aedac1</color>
                <color>#9fd5b6</color>
                <color>#90cfab</color>
                <color>#82c9a1</color>
                <color>#75c497</color>
                <color>#68be8d</color>
                <color>#5cb984</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]' />
              <color column='[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]' />
              <text column='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A2E2A3A9-C3F9-446A-9103-91185DB82679}' />
    </worksheet>
    <worksheet name='Duration Boxplot by Grade'>
      <table>
        <view>
          <datasources>
            <datasource caption='polls_us_election_2016 (2)' name='federated.1ct9zde12gywhr12vj9d810jhayw' />
          </datasources>
          <datasource-dependencies datasource='federated.1ct9zde12gywhr12vj9d810jhayw'>
            <column caption='Duration' datatype='integer' name='[Calculation_1014224776787111937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[enddate]-[startdate]' />
            </column>
            <column caption='Enddate' datatype='date' name='[enddate]' role='dimension' type='ordinal' />
            <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1014224776787111937]' derivation='None' name='[none:Calculation_1014224776787111937:qk]' pivot='key' type='quantitative' />
            <column-instance column='[grade]' derivation='None' name='[none:grade:nk]' pivot='key' type='nominal' />
            <column caption='Startdate' datatype='date' name='[startdate]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:grade:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;A+&quot;</bucket>
              <bucket>&quot;A&quot;</bucket>
              <bucket>&quot;A-&quot;</bucket>
              <bucket>&quot;B+&quot;</bucket>
              <bucket>&quot;B&quot;</bucket>
              <bucket>&quot;B-&quot;</bucket>
              <bucket>&quot;C+&quot;</bucket>
              <bucket>&quot;C&quot;</bucket>
              <bucket>&quot;C-&quot;</bucket>
              <bucket>&quot;D&quot;</bucket>
              <bucket>&quot;NA&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:Calculation_1014224776787111937:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:Calculation_1014224776787111937:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:Calculation_1014224776787111937:qk]</rows>
        <cols>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:grade:nk]</cols>
      </table>
      <simple-id uuid='{6CB149E5-1C24-4311-A023-3248723DC396}' />
    </worksheet>
    <worksheet name='Duration of Polls Boxplot '>
      <table>
        <view>
          <datasources>
            <datasource caption='polls_us_election_2016 (2)' name='federated.1ct9zde12gywhr12vj9d810jhayw' />
          </datasources>
          <datasource-dependencies datasource='federated.1ct9zde12gywhr12vj9d810jhayw'>
            <column caption='Duration' datatype='integer' name='[Calculation_1014224776787111937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[enddate]-[startdate]' />
            </column>
            <column caption='Enddate' datatype='date' name='[enddate]' role='dimension' type='ordinal' />
            <column-instance column='[enddate]' derivation='Month' name='[mn:enddate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1014224776787111937]' derivation='None' name='[none:Calculation_1014224776787111937:qk]' pivot='key' type='quantitative' />
            <column caption='Startdate' datatype='date' name='[startdate]' role='dimension' type='ordinal' />
            <column-instance column='[enddate]' derivation='Year' name='[yr:enddate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ct9zde12gywhr12vj9d810jhayw].[yr:enddate:ok]'>
            <groupfilter function='member' level='[yr:enddate:ok]' member='2016' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ct9zde12gywhr12vj9d810jhayw].[yr:enddate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ct9zde12gywhr12vj9d810jhayw].[mn:enddate:ok]' value='70' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:Calculation_1014224776787111937:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:Calculation_1014224776787111937:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:Calculation_1014224776787111937:qk]</rows>
        <cols>[federated.1ct9zde12gywhr12vj9d810jhayw].[mn:enddate:ok]</cols>
      </table>
      <simple-id uuid='{56247F2C-B4EA-4B3B-94EE-D416E0D2D0D4}' />
    </worksheet>
    <worksheet name='Sample Size Boxplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#596773'>Sample Size Box and Whisker Plot</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='polls_us_election_2016 (3)' name='federated.0v37gcl1aemhbd1ep61q61pz0ff8' />
          </datasources>
          <datasource-dependencies datasource='federated.0v37gcl1aemhbd1ep61q61pz0ff8'>
            <column-instance column='[samplesize]' derivation='None' name='[none:samplesize:qk]' pivot='key' type='quantitative' />
            <column caption='Samplesize' datatype='real' datatype-customized='true' name='[samplesize]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0v37gcl1aemhbd1ep61q61pz0ff8].[none:samplesize:qk]' value='43' />
            <format attr='title' class='0' field='[federated.0v37gcl1aemhbd1ep61q61pz0ff8].[none:samplesize:qk]' scope='cols' value='Sample Size' />
            <format attr='tick-color' field='[federated.0v37gcl1aemhbd1ep61q61pz0ff8].[none:samplesize:qk]' value='#596773' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='32' />
            <format attr='color' data-class='subtotal' scope='cols' value='#596773' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0v37gcl1aemhbd1ep61q61pz0ff8].[none:samplesize:qk]' value='#596773' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0v37gcl1aemhbd1ep61q61pz0ff8].[none:samplesize:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0v37gcl1aemhbd1ep61q61pz0ff8].[none:samplesize:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0v37gcl1aemhbd1ep61q61pz0ff8].[none:samplesize:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0v37gcl1aemhbd1ep61q61pz0ff8].[none:samplesize:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0v37gcl1aemhbd1ep61q61pz0ff8].[none:samplesize:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-color' value='#2abb7f' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='805' />
                <format attr='maxwidth' value='805' />
                <format attr='minheight' value='32' />
                <format attr='maxheight' value='32' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0v37gcl1aemhbd1ep61q61pz0ff8].[none:samplesize:qk]</cols>
      </table>
      <simple-id uuid='{3A314012-648D-452E-A686-9F70B6B9AE26}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='polls_us_election_2016 (2)' name='federated.1ct9zde12gywhr12vj9d810jhayw' />
          </datasources>
          <datasource-dependencies datasource='federated.1ct9zde12gywhr12vj9d810jhayw'>
            <column caption='Adjpoll Clinton' datatype='real' name='[adjpoll_clinton]' role='measure' type='quantitative' />
            <column caption='Adjpoll Johnson' datatype='real' name='[adjpoll_johnson]' role='dimension' type='ordinal' />
            <column caption='Adjpoll Mcmullin' datatype='real' name='[adjpoll_mcmullin]' role='dimension' type='ordinal' />
            <column caption='Adjpoll Trump' datatype='real' name='[adjpoll_trump]' role='measure' type='quantitative' />
            <column-instance column='[adjpoll_clinton]' derivation='Avg' name='[avg:adjpoll_clinton:qk]' pivot='key' type='quantitative' />
            <column-instance column='[adjpoll_johnson]' derivation='Avg' name='[avg:adjpoll_johnson:qk]' pivot='key' type='quantitative' />
            <column-instance column='[adjpoll_mcmullin]' derivation='Avg' name='[avg:adjpoll_mcmullin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[adjpoll_trump]' derivation='Avg' name='[avg:adjpoll_trump:qk]' pivot='key' type='quantitative' />
            <column caption='Enddate' datatype='date' name='[enddate]' role='dimension' type='ordinal' />
            <column-instance column='[enddate]' derivation='None' name='[none:enddate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ct9zde12gywhr12vj9d810jhayw].[avg:adjpoll_clinton:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ct9zde12gywhr12vj9d810jhayw].[avg:adjpoll_trump:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ct9zde12gywhr12vj9d810jhayw].[avg:adjpoll_johnson:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ct9zde12gywhr12vj9d810jhayw].[avg:adjpoll_mcmullin:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1ct9zde12gywhr12vj9d810jhayw].[avg:adjpoll_mcmullin:qk] + ([federated.1ct9zde12gywhr12vj9d810jhayw].[avg:adjpoll_johnson:qk] + ([federated.1ct9zde12gywhr12vj9d810jhayw].[avg:adjpoll_clinton:qk] + [federated.1ct9zde12gywhr12vj9d810jhayw].[avg:adjpoll_trump:qk])))</rows>
        <cols>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:enddate:qk]</cols>
      </table>
      <simple-id uuid='{6DE2A04F-44B2-49B8-8A49-BBDC586156DB}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource caption='polls_us_election_2016 (2)' name='federated.1ct9zde12gywhr12vj9d810jhayw' />
          </datasources>
          <datasource-dependencies datasource='federated.1ct9zde12gywhr12vj9d810jhayw'>
            <column-instance column='[rawpoll_clinton]' derivation='None' name='[none:rawpoll_clinton:qk]' pivot='key' type='quantitative' />
            <column caption='Rawpoll Clinton' datatype='real' name='[rawpoll_clinton]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='105' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:rawpoll_clinton:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1ct9zde12gywhr12vj9d810jhayw].[none:rawpoll_clinton:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:rawpoll_clinton:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{E76F820A-2885-45F0-BAA2-D4B32D204A63}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='polls_us_election_2016 (2)' name='federated.1ct9zde12gywhr12vj9d810jhayw' />
          </datasources>
          <datasource-dependencies datasource='federated.1ct9zde12gywhr12vj9d810jhayw'>
            <column caption='Adjpoll Clinton' datatype='real' name='[adjpoll_clinton]' role='measure' type='quantitative' />
            <column-instance column='[adjpoll_clinton]' derivation='None' name='[none:adjpoll_clinton:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ct9zde12gywhr12vj9d810jhayw].[none:adjpoll_clinton:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{9A6097E6-89EF-419A-BFAC-E1BB06CC5118}' />
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' maximized='true' name='(Good) Count of Polls by Grade'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9078F88A-F83F-4D08-8E20-25F462307CB9}' />
    </window>
    <window class='worksheet' name='Count of Polls by Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6545BFAD-AAE7-4C1B-A2E7-4613F5C0D10E}' />
    </window>
    <window class='worksheet' name='(GOOD) Count of Polls by Week of End Date'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D8E96588-11E8-489C-84C8-F9C990620937}' />
    </window>
    <window class='worksheet' name='Bubble Chart Pollsters by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0626D106-F726-4423-8137-8349C0E4FAE6}' />
    </window>
    <window class='worksheet' name='Count of Pollsters by State Treemap'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='257'>
            <card pane-specification-id='0' param='[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{896F769B-A0A5-46E3-8AD2-2E6AAC40DFCF}' />
    </window>
    <window class='worksheet' name='Duration Boxplot by Grade'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{41CD30A4-200F-4E67-9FD0-1E9744BD85CB}' />
    </window>
    <window class='worksheet' name='Duration of Polls Boxplot '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C351C868-5D0C-4FED-8FE7-BAF47C40BB35}' />
    </window>
    <window class='worksheet' name='(GOOD) Number of Polls by State'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='152'>
            <card pane-specification-id='0' param='[federated.1ct9zde12gywhr12vj9d810jhayw].[cnt:pollster:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0949CE2A-41AE-4903-ACCF-D7B75970B0E6}' />
    </window>
    <window class='worksheet' name='Boxplot of Sample Size by Grade'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='true' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1194F1E9-4DA6-4960-91BB-293A2B586CC2}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{776DB404-33B9-4AFB-BF1A-4093ADF2CC79}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DA5C6B7E-6CE7-4648-AD86-09518072C687}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4EAD043F-AA46-464D-9505-1F1B3D4FE0E0}' />
    </window>
    <window class='worksheet' name='Sample Size Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{55A2F547-1610-49FB-82BC-9F43249C9D08}' />
    </window>
    <window class='worksheet' name='Clinton Minus Trump Raw'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='109'>
            <card pane-specification-id='3' param='[federated.1ct9zde12gywhr12vj9d810jhayw].[avg:Calculation_1014224777256529922:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1C055848-9118-40EF-965F-B5C5C4F38366}' />
    </window>
    <window class='worksheet' name='Clinton Minus Trump Raw, Cleaned Data'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.18wpogt0be3eym1g8lqo01aqp8qs].[avg:c_minus_t_raw:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E62B578B-C707-4EC4-B289-E10B0EF8BA47}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='(GOOD) Count of Polls by Week of End Date' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='(GOOD) Number of Polls by State' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='(Good) Count of Polls by Grade' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3daZhU9YHv8d+pvXqpqt6goWkaGlllaboFVBQXVARHRzRxRU0Yo5nE3Mxk
      lnvv3LnPnbnz3NnuPJMnd2aSjEkmJCZjRI2IK7jhgiggiuzQLM1ON71V176cc190bGkhUexq
      q7rP9/M8vPBU9an/savOt87S5xiWZVkCANiOI98DAADkBwEAAJsiAABgUwQAAGyKAACATREA
      ALApAgAANkUAAMCmCAAA2BQBAACbIgAAbMuyLCUSSe0/dET7Dx1WMpnS5706TrgnolXPv5zj
      EQ4uV74HAAD5YFmW3t70vh799XMqKS7qW/H/zX/7tjwe93nPLxKNae269bp5yTW5HuqgIQAA
      bKmjs1u/eOIZ3bF0iS6dM1uWZen4yVa5XE51h3t07GSrxtXWaOfeZk2fPFFHT5zU4WMn5HK6
      1DhzmkqKiyRJrac7tGvffiUSSWVNU1JvXLbu2KPjJ1s1ZeJ41dfV5nNRfysCAMCWdu5t1siq
      Cl02t1GJZEqxeLxvpX7oyHH98slnVBYMKJ5IqDwU0uOr12h09QgdPX5Sb296X3/6zeU6fqJV
      //hvP9EF48dKlqV0OiPLsvT8y6/r7U0fqGH6VH3vR4/ooeV3a2J9XZ6X+GwEAIAtdXX3qCwY
      kNPp1Nsbt2jNa28pGk/o7//yO5IsnWw9rcvmNmrxNQvkdDj0ja/eqWMnWzVm9Eitev4VRaNx
      vfnuZjVMn6Lld96ik62ntXf/IaXSab21cYtuWnS1pk+ZqHBPRBu3fFiQAeAgMABbqigPqfV0
      h1LptK68bJ7++Otfkcvp1EeHgMfWjNIN114pt8ulk62n9bff+3e9uWGzWts6ZFmWLMtUe0eX
      xtaMksPx8ao0nU4rkUjquZde1//78S90+NgJOZ3O/CzkpyAAAGxp+pSJ6g736LmXXlc0GlMq
      lZalj88Acjodcjp7V5Hbd+9TVUW5lt91ixpnTut7TlVFuXbu3a9YLK6Ozm5lTVM+r08VZSHN
      mT1df/7N5frO1+/T/HmNX/jyfRbsAgJgS6UlxXrwvtv1yMqn9cobG2RalmqqR8jjdsswDBmG
      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
      mTNn5nmkn41pmiovL9eyZcvkcDh04sQJPffcc7r//vvzPbTPJJvNqr6+XkuXLpUkbdmyRe++
      +66WLFmS55F9NpZl6fnnn9fUqVM1b948WZal1BmXyh8622IFKpvNqrm5WU1NTXI4HOrq6ur3
      +FA8xHLs2DFVVFSoqalJ27Zty/dwztu+ffs0fvx4zZgxQzt27Mj3cD4Xy7LU2dkp0zTl8/n6
      TR+qTNPU4cOHVVVVle+hfC6ZTKbvszFUxONxdXR09H2JMwxDXq+373G2AAbo9OnTKioqUnFx
      saZMmaIdO3ZowYIFevvtt7Vv3z6dOnVKHo9HmzZtUkNDg2bNmpXvIX+qzZs3q7GxUaNGjVI4
      HFYkElFJSUm+h/WZ7dq1S4sXL1ZxcbE2bNigdDoth8OhWCwmwzDk9/sLdhdKOp3Wk08+KcMw
      1NHRoZtvvll+v1/vvPOO9uzZo9bWVjmdTr3//vuaMWOGGhsb8z3kT9XS0qKHH35YnZ2dKi0t
      1X333ZfvIZ2XrVu36uTJkzp9+rTq6+t13XXX9R0bKPT3UyqVksvlOutY0qZNm7Rz504CMBCW
      ZWnnzp06efKknnjiCYXDYUWjUS1YsEDz5s3TnDlztH79epWXl2vq1KlD4uBXKpXS9u3blUgk
      9P7776urq0t79+4dEisaSYrFYtq1a1fft+ajR4+qtbVVLpdLa9eulcvl0qJFi1ReXp7nkZ6b
      2+3WzTffrOrqarW3t+uZZ55RbW2t5syZo6amJr377rsqKirSjBkzhsT7SZLGjh2rO+64Q6lU
      Srt379azzz6rO+64Y8gcm5kxY4ZuvPFGxWIxvfvuu3rzzTc1a9Ysvfjii3I6nbruuutUWVmZ
      72Gek8vlUjabVSaTkdvt7pve2NiohoYGAjBQzc3NuvXWW/u+IT/xxBNqb29XRUWFnE5n3xVK
      z/yfX8iOHTum+vp6LVy4UJI0a9YsvfPOO5o9e/aQ+MBu27ZNV155pZqamiRJNTU12rZtmxYt
      WqRly5bleXSfjdPplM/n0+jRo1VVVaWOjg5VVlb2vZ/cbveQeT9Jvbsd3G63vF6vpkyZoo0b
      N561QipkDodDHo9HbrdbU6ZM0RtvvKGFCxcOifeT3++Xy+VSS0uLJkzovUeKaZpyOp2976c8
      j29I6+7ulmVZGjduXN/KcdasWdq+fbuuuOIKSb3fHobK9VUsy9K2bds0e/bsvv20oVBIr732
      miKRiEpLS/M8wt/Nsixt3bpVt912m0KhkKTe24X+7Gc/06JFi4ZEwLLZrNatW6fS0lJFo1FF
      IhHV1dX1PT5t2rQh881f6l35nzp1SqtXr5ZpmmptbdXMmTOHzMpf6v2St2rVKmUyGZ08eVJX
      X331kHgvSb1fJhYvXqzHH3+8731UUlLS9wWPPwQbgGQyqUQioWAw+DunDRWWZamrq0ulpaV9
      0froYGQgECj4kH309xgVFRV9H1DLsnT69GlVVlYOiQ9tV1eXotGopN7dQWVlZUNqZflJ2WxW
      ra29t2o1DENFRUUKBoND4nch9e4SbWtrk9S7JVBSUqKSkpIhM/6PRKNRtba2yrIsVVdXq6io
      SJL0/wFKILi0kZysAwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Boxplot of Sample Size by Grade' width='384'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Bubble Chart Pollsters by State' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd3hc1Zn/v/dOn5E0o15GvXdLsiz3DrYJNYCBJBDYlA0kIWGTJdlNWzab
      3yYkuwmkQRIgJEsLmGKDwb1KsiVbsmzJ6r13aaTp5d7fHyMNkjWSptwpss7nefIEj2buPSPN
      nPec877v90uxLMuCQCAQCKsO2tcDIBAIBIJvIAGAQCAQVikkABAIBMIqhQQAAoFAWKWQAEAg
      EAirFBIACAQCYZVCAgCBQCCsUkgAIBAIhFUKCQAEAoGwSiEBgEAgEFYpJAAQCATCKoUEAAKB
      QFilkABAIBAIqxQSAAgEAmGVQgIAgUAgrFJIACAQCIRVCgkABAKBsEohAYBAIBBWKSQAEAgE
      wiqFBAACgUBYpZAAQCAQCKsUEgAIBAJhlUICAIFAIKxSSAAgEAiEVQoJAAQCgbBKIQGAQCAQ
      VikkABAIBMIqhQQAAoFAWKWQAEAgEAirFBIACAQCYZVCAgCBQCCsUkgAIBAIhFUKCQAEAoGw
      SiEBgEAgEFYpJAAQCATCKoUEAAKBQFilkABAIBAIqxQSAAgEAmGVQgIAgUAgrFJIACAQCIRV
      CgkABAKBsEohAYBAIBBWKSQAEAgEwiqFBAACgUBYpZAAQCAQCKsUEgAIBAJhlUICAIFAIKxS
      SAAgEAiEVQoJAAQCgbBKIQGAQCAQVikkABAIBMIqhe/rARAIBN9itjDQ6k2wMAyEfB6kYgEo
      ivL1sAhegAQAAmEVYTRZ0No3jprWQTR2jaJ3ZArj0zqw7KfPEfBpRATLkBwdjJykcBSmRSMy
      WEaCwk0IxbJz//QEAuFmg2VZTKoNOHyhGeeudmF4QgNnvvRCPg9pcSG4ZW0ytuTHQ8jneWys
      BO9CAgCBcBOj0ujx/rlGHKlshc5gdvt6USEB+MKtediSFw+aJjuClQ4JAATCTQjLsqhuHsCf
      P6zG4Lia02tTFLAhOxZfvaMIoXIpp9cmeBcSAAiEmwyLhcE7Z+rx1qk6ePLbHSqX4OmHNiEr
      IdxzNyF4FBIACISbCJPZgj8dqsLxy+1euZ9ExMe/7N+IkqwYkiRegZA+AALhJsHCMHjl4xqv
      Tf4AoDOY8T9vleNq25DX7kngDrIDgLUOWm80Q6s3YVKtx6RaD43OCK3BDIPRDJPFAoYFGIYF
      n0dDKOBBLORBIhIgSCqCXCZCcKAEIoH1MZIcI/iCd87U47Vj13xy7yCpCD//592IjQjyyf0J
      rrHqAoDWYELX4CT6RqbR3j+B3tEpjExooNIYoNGbXL4uRQEysRAhgRKEKaRIjJJDGR6EpCgF
      4iLkEApI6RzBc9R3juDHL5+G2cL4bAwpMcF49vFbICBloiuGmzoAMAyLCbUOrb3juNo6hObe
      MXQMTHr1S0IBEAp4SI8LRaoyBIVpUUiOCUagVOS1MRBubnQGM7734nF0D6l8PRR8bncuHtqd
      6+thEBzkpgwAvcNTuFjfi4qGPnQNTsJgsvh6SPOQiQVIjQ3BxpxYFKXHIDJY5ushEVYwB0sb
      8crHNb4eBgDrZ/v5b+1DuIJ8plcCN0UAYBgWfaNTKK/rRWltt1+shJwhPS4U2wsSsD5LSb44
      BKfQ6I345m8+xvi03tdDsXH7xjT8851rfT0MggOs6ABgMJpRXteD41XtaOoe8+n5JxeIhXwU
      Z8Tgnq2ZSFUGk7I6wrIcrWzDHz+45OthzEMmFuDPT9+JAInQ10MhLMOKFIMbmdTiaGUrjl1q
      g0pj8PVwOENvNKO0thtltd3IT4nEnpIUlGQqSQKZYBeGYXHuaqevh7EAjd6E8roe7FmX4uuh
      EJZhxQQAlmUxOK7Gh+XNOF3dCa3B9Yodf4cFcLVtCFfbhhAfIce92zKxdU0C+DzStkH4lEm1
      Ho3dY74ehl3K63pwa3Ey2cX6OSsiAIxNafH2qXqcqu6A0exfCV1P0z2swnMHKvDuuQbctz0L
      W/LiSZkdAQDQ2D3qt8ee7f0T0BnMkIoFvh4KYQn8OgCodUa8e7YeRyvb3KrRvxnoGZ7Cc+9U
      4GBpE/7ptgLkJUeShrNVTmP3qK+HsCgqjQEjKi0SxHJfD4WwBH4ZABiWxekrnXjrZB2GJzS+
      Ho5f0TEwiWf+ehYlWTF47LZCRIcG+HpIBB/RMzzl6yEsSe+wCgmRJAD4M353qNw/Oo2fvnoW
      vztQQSb/RWBYFhfr+/DU747gYGnjqjsWI1iZmNa59fodBYmQiKxrwOzEcMTPTNb/dFsBshPC
      3B7f2JR74yN4Hr8JABaGwaGyJvzrH4/hSsugU45FqxW90YxXPq7Bf7x8Bl0rrPeB4D7uFkL0
      jkxhbXo0ACA3KQLDExooAsSYUOuRkxTh9vh0N3Ghxs2CXwSAwTE1fvb383j58JVVf9bvCvVd
      I/jeC8dxqKwJFj9NChK4h2HcWya19o0jOSYEfB4NHk1BbzSjMC0KFfW9oGkKAr570wNZxPk/
      Ps0BsCyLS439+OMHlzDhR52MKxG90YyXD1/B9Y4RPHlfCWnCWQVIRO5X2Kh1RhSkRqKpx1pO
      mpUQhjC5FJHBAciMD0Nt+7DL1xYL/DLFSJiDz3YAJrMFrx65il+8Xkomfw65WN+L7/z+KBq6
      /LdChMANIYFit69xvWMY92zNxLW2IcgDROgZnsI7Z+rxwsFLyE127xgoJEji9vgInsUnUhAa
      vRHPH6hARX2ft2+9apAI+fja3cXYUZBAmnFuUv74wSUcrWxz6xo0TSFcLsXQhAZ8Hg2apmCc
      EU+UiQVuHcn+6olbkR4X6tb4CJ7F6zuA/tFp/NuLJ8nk72F0RjOeP3ARrx+vdfusmOCfpMaE
      uH0NhmExNFNtZ7YwtskfgFuTv1QsQBQpUfZ7vHpI19I7jl+8XopRldabt121sKzVJWp8SofH
      7y4mmkIrAJZlYTIzMDMMGAsLmkdBwKPB59ELdnI5yf5rxp4YpUDgCslDMSwLnd6EvtFpDI6r
      MaUxQG80g6KAAIkIoXIJlGGBCA2S3nTfIa8FgJrWQfzi9VLoDGZv3ZIww8nqDqh1Rnz3wY0Q
      CUlizt9gWRbt/ROoaOhDXfswBsbVUKn1sDAseDwKwQESxEfKkZsUjg05cVCGBQIAIoMDkBgl
      R+eg/5UAF2dE+/XR46y2WHldLy419qG9f2JZ35CQIAmyE8OxKTcORWlRnCThfY3HcwAsy+JK
      yyB++WYZmfx9zJqUSHzvc5sRIF0ZK7ObHYZh0dg9ijdP1uF6xzAsDhzVCfg0SrKUeGBnDhIi
      5XjvXCP+fvSqF0brOHwejb88fadfJoEZlkVLzxjeOVOPKy2DLmspBclE2FWUhLs2pyM0SMrx
      KL2HxwNAdfMAfvVm+U2t3rmSyEuOwL99fgsJAj5GbzTjLx9W4VR1JxgXvoJCPg/3bs/CrqJE
      fOv5I9Ab/WdxtT5biR88vNXXw1jA8IQGr3x8BZUNfQ4FW0cIkAhx3/Ys3LkpfUWKNHo0ANS0
      DuIXr5VC50cfTgJQlB6Nf//ClpvuPHOlMDyhwbNvlKG1b9zta63NiIZcJsap6g4ORuY+Aj6N
      //7qbr+q/mFZFmdruvDy4SuY0nrGPyQzPhRP7d+A6NBAj1zfU3gsALT2jeMnL58mnb1+yua8
      OHzngY3EY8DLqNR6/PufT6JvdJqzayZGKTAyqfGL79qedSn4+j3FfnP+b7YwePNkHd472+DS
      TssZ5DIRvv/5zZzIaHgLjwSA/tFp/PClUxgnYlB+ze0b0vCVO4qIrDQAi4WB3miGwWSBhWFB
      U9azbIlIwNlOyWi24KevnnWru3YxBHwaJrNvZUDC5FI8/619ftOFbjRb8OdDVTh+ud1r9xQL
      +fjOAxuwPjvWa/d0B85LQtQ6I375ZhmZ/FcAhy+2IDJEhrs2Z/jNis1bMIy18uZKywBa+8bR
      NaSCRmeCwWSGhWFBzQQAqUiAiGAZ4iKCkJ8ciTWpUQiUCl36fX18ocUjkz8AmMwMgqQijx1x
      LIdQwMM3711nm/xZloWFsVba9I1MYVJtgN5ogoVhIeTzoAgQI0whRUxooMu/z6VgWRZvHK/1
      6uQPWHM7v377Iv7ryzv96hhsMTjdAZgtDH7+eikuN/ZzdUmCh+HzaDz9uU3YsEJWLO7Asix6
      hqdwqroDpbXdGJl0vh+Fpijkp0Ri3/oUrE2PcXh3MDGtwzee+xganeeOaaJCAiCXiWy6Pt6C
      pih87a612FuSgo6BSVQ3D6CqeQCtveMOSZXHhAUiJzEc67OVyE2K4KS88mRVB377boXb13GV
      MLkUv/jaboQrZD4bgyNwFgCYmYj7zpl6Li5H8CIBEiF+9cStiAlbWQksR2FZFt3DU3jrZB0q
      G/o4s1GMiwjCfduysK0gATx66VzKWyfr8ObJOk7uuxRP3FOM09WdXnMLo2kKD+3KQUSwDEcq
      WtHSO+5WhU1IoAR3b8nA7rVJCJSKXLpG38gUvvfiCah1RpfHwQXFmTH40SNb/Xp3zXvmmWee
      4eJCFfV9eOlwNbyvLERwF6PZgpbecWzNv/n8hvVGM/5x6jp+/14lOgcnOU0ETmkMuFjfh5qW
      QaQoQxAcaL/u3Wxh8KdDVV45njEazfjhI1vRPzaN3hHPOoYJeDSyE8PR2DWK45fbMarSuf39
      1xnNqGkdxMkqa1VTckywU4UKDMvi1/+4iO5h3zfH9Y9OIyYsEIlRCl8PZVE4CQDDExr892uk
      y3clMzalg95oRlG6f3dwOsrscc/P/u88ymp7OKv7tsfYlA5na7ogFvKRpgxZ8PvrGprE26e9
      szMentTg/u3Z2LYmASIhH43dox557xRlXf0PjqkxpeV+pW0wWVDTOoSq5gEkRwcjJEji0Oey
      srHfr04hOgYmcWtxst9W27k9KpPZghcOXsakmkg6r3QOX2y5afI319qH8cOXTqG9f8Ir99Mb
      zXjpo2q8cPAyTDece7f1OTcGuUyEoDmNerPGLDRFLTuRsCzQMTABHo/Gfduz8Ozjt6AwLQpc
      hXSRkAdleCAoUDCZGY+bvrT3T+AHfzmJjy60LCtqaGEYvHvWfyZ/ABgcV6P0Wrevh7EobgeA
      IxWtqG4e4GIsBB/DsrgpgvmFuh78v7+fw5TG+xUxxy614Vdvlc/LMzhT87+jIAG7ipKwZ10K
      NuXGAQDu2pwBALh3WyZCFjlmmsvAmNr230nRwfjJo9vxs6/uwtqMaIhcLGkNDhTjjk3p2FGQ
      iIExtcdr6udiMjN4+aNq/OH9yiXzN62942jtdb+5jms+LG/26u/LGdwqAx0Ym/ZKYovgPcam
      dPjrxzX4lwc2+HooLlHfOYJfv33RoeoTT1FR34ffv1eJb95bAj6PdjgZSVFAfKQcfz96DQDw
      8J58XKzvBZ9HozAtCiOTWgxPapa9jlo//340TSE3KQK5SREYmdTgctMAqpr60TEwuagyL49H
      ITI4AHlJEShIi0JecgTeP9+Ijy+0+GQyYwGcqOqAwWzBt+9bbzdXde5ql0eP+lyle0iFjv4J
      pCjdl+/mGpcDgMXC4M+Hqvyi+5DALeeudWFLfjzWZcb4eihO0TcyhV++WebTyX+W01c6ERUS
      gId258LRPjuRgI/pOefpRpMZNEUhMUqB5Ohg/OadCw5dh17irDxcIcNt61OxryQFFoaFWmfE
      qEoLrd4Ek9kCkZCPIKkI4QophHweeDwaLMvivXMNePdsg2NvxIOcv9oNAU3jm/eVzKu8YlkW
      Na1DPhzZ4jAsi8tNAzdXALhQ34vqlkEux0LwExiGxcuHq5GXHAHxCpGPNpkteO5AhV/Zi759
      5jqyE8MR4GA5o95ohiLAavNIUxTEQgEYhkXn4CQq6vtw56YMhxKcjnTiUhQFPo+CIkBsu+di
      lNb24LXjtQ69B29w6konYsICsX9nju2xUZUW/WPcyWtwzfWOYbBstt8VWLiUA1DrjPj7Ef+S
      oCVwy8CYGofKmnw9DIdgWRbvn29Es5cboJbDYmHxh/cvIciJevbqlgE8sicfD+/JQ1VTPxiW
      xbTWiM7BSfSNTiMrIWzZa0SGcOfENTiuxosHL/mdq9xbp66jtv3TFX/HwKTfjXEuvSNTPpfq
      sIfTAYBlWRwqa7LZyBFuXt4/14jhFfB3HprQ4IPzjb4ehl0Gx9W43um4/MPV1iG8caIWrx+v
      xfXOEQDAxxdbAADldT1o6Fq6wUvAp5ESE+z6gOdgsTD4y4fVUHuwe9lVzBYGL3xw2SaDPcDB
      6j9IKkReslXITSjgISYsEKlzjm2iQwMgE7vWpTw+rfMrye5ZnA4AY1M6HCpdGStDgntoDSa8
      e7YeHraMcJt3z9T7dS7qauuQU/aIFoZ1OZlZnBHjcqXPjZyv7cblJv8tC+4bncZ756x5CS5s
      ZiOCA7B/RzZCgySQiQXITgxHVkIYwuRWw5dt+Qku/11YFlBp/Od4chanAgDLsjhwpp7o+68i
      jl9u51S6mGtGVVqcvdrl62Esid5ohsYLhkgUgK358ZycMxtNFrzjpeY1d/iwrBkT0zoYTdwc
      r5yq7sDutUm2vonKhj4UZ8SApigI+LRbq3i90ffFCTfiVADoH53GST8xniB4BwvD4h+nrvt6
      GIty5krnsl6u/oCAR3s8oZ4UE4x1WUpOrlVe1+NxKQku0BpM+KSiFVzlVqe0BkyqDYiLkAOw
      Hi+GB0uRGR+G+mWO35bDz/K/AJyoApotBTOugC8bgVsuXu9FU88YMtyUt7VYGIxP69A1qFpg
      ESoW8pEUrUBwoMThtnmT2YJzfr76n8VgsmBrfjwuXO/lTIxuLhIRH4/tWwMhB1pOJrMFH5T6
      Z07FHicut6MoPZqbi7HA2ZpOPHZbAToGJgFYF767ihLx4qEqty4dIPYPn4S5OBwAugZVZPW/
      SjGaLXjjeC3+80s7XHr9wNg0TlV34uL1XvSMqJYUDIuLCEJxZgx2FiQiYRkRrc5BFbqGfC/6
      5Sg0RWH/jmzOmyd5tFWOOTU2BFfbhtDeNz6TdLRALOAhTCFFXIQc6XGhDpWINnWP2Sa/lcDY
      lI4Te82eYRV4PBoGkwX/OHXdlvsqq+1GW9+4W4FbLOQjKMA1dVNP4lAAYFkWB8uaiNLnKuZq
      2yA6BiaQFO14hcnwhAb/OFWHs1e7HC6B6xmeQs/wFA6VNmFdphJf3JsPZXiQ3ec2dI04PBZ/
      oL5rBE/eV4JJtR6fVLRyck0KQEFaFKqaBvDSR1eW7DqWCPlYl6XEbetTkRkftqgT3MX6Xk7G
      5k0Gx9XLP2kZDCYLMHPCMVcORW+0oHPQvYVGuEIKkR8q7ToUAMandCvyQ0HgDpYFPr7Yim98
      dp0Dz2VxsqoDfztS47JSpIVhcbG+F1fbBvH5W/Jw56b0BcnNll7/qvtfjkm1HhPTenz1jiLI
      ZSK8fbrebVkFiqJQ3Tzg0OJMZzTj3NUunL/ahU25cXh03xq7PQOeci3zJP6uRJyqDAHPDxVB
      HRrR+Wvd0PpxmR3BO5TVdi8rFGcyW/DS4Sv43XuVnMgE6wxmvHz4Cn77biUMpvlf8r4R/61O
      sofJzGBUpQWPR+Oh3bn40Re3Ii7C/u5mKSh8KvfAsKzTO3MWQFldD55+4Tiu3NDNP601YIiD
      1bQvcLVG3xsUpEX5egh2WTYAMAyLY5fbvDEWgp+j0ZtQ2dC36M8ZhsWfDlXho/Jmzu99qroD
      vz3wqRokw7KYmObOd3p7QQIe2p2LOzalg6YoxIYH2ibnxCgFojjqrp2tV6coCmszYvC/39iD
      J+8tQXykfNnX0hSF7MRw3LouBTxHBYaWQKUx4OevnUdF/ad/08FxDfQm/15NL8Zs5Y6/IRby
      UZDqnwFg2SOg5p6xFbfSIniOI5Wt2LMuZcHjLMvi9ROeNeEure1GoFSIf75zLSwMAyNHrfVx
      EUGQiYV462QditKjUZwZDY3OBJqm0DM8hdAgCaa1BgxyoDR8Y8mqSMDHLcXJ2L02Cd1DKjT1
      jKFzRqXTZGEgEvAQrpAhMUqONSlRGFVp8R9/PQMTR5VEBpMF//NWOX72lZ3IiA/DqErLea5P
      wKdtOSAeTdmaqUQCHiiK4qxDNj0uFD0jKo/6LrvCxpzYZfWWfMWyAaCsrscb4yCsEDr6JzEw
      No3o0Pn+wTWtg16RYzha2YaCtCgUpEZx1qGcHBOMmlbrUcj1zmHcviEdTd2j2Jwbh6ToYMRF
      BOH4JW52wZZFJm6KopAQpViy8klvNONHL5/iXFLAOCOk9z9fvxVTHuhW/dZ963GkohXXO0dw
      24Y0HL7QjJIsJZKiFDCZGRy/3M6JXSZFAbuLknCojPsdqKvQNIXPbEiz/ZudObJjZ6x0KIpa
      Ur3V0ywZAAwmMypI8pcwB4ZlUVrbg/07sm2PGYxmvHiwyiP17fbu/+dDVfjtt29btIrFWfRG
      s+38WCIU2OSkKxv7Uds+xF2NOeDWmA+cqZ9n9sIl/aPT+OB80zwnMs6uPTaNtRnRaOwehVjI
      h0jAR6oyBK9zrDCqN5rxud25OHap3W90dzZkxyJVGYKxKS3K63pxtXUQfaPTmNIYQFMUggPF
      iI+UozgjBusyYyBzQjKEC5YMAG19E0T0jbCAyvo+3LctyzaZHbvUxkkZnqOMTenwSUUrZGLh
      PP18V6ltH8Yje/JhYVhszo3DqeoOKALEMJktMJkZmDlUcZTLXDsKmFTrcbTSs7m4wxeacfvG
      dM6vy1hYXGkfxNoMq7+ERMT3iOucdUKV4N5tWXjjhO/lq8VCPu7enIEXDl7GuatddoPSlNaA
      riEVzl/rRnCgGHdtzsAdG9Mh5EjPaTmWTAKT0k+CPVr7xzE6ZU1mmswWfMxRTbszHKlohUzC
      TdWHVm/CWyfrECaX4uilNvSNTqNjYBJtM37CTT1j6B52XxaBAhAmX97S0R4V9X2cHJMshUZv
      8tiOv7Z9GBlxoRDyedAZzA5ZWzqLaEZq47NbM93uWueCtenRePaNMhy71ObQjmRiWo+/HbmK
      f/vTCU7UTR1h0QDAsqxfKwESfAfDsLg6c2Ze1z6Mfh+IxY2qtJx6/qo0BlQ29Nnkr7UGk630
      Wa0zcnKkIBEJEB4sc+m13lqMdQ9z31k9W757/lo3UpTBMJjMaO4Zw8N78vHQrhyn/BKWQjHT
      aSsU8PDdBzdCLvNd561YyEdFQx/GXahUa+ufwA//cgrdXuhyXzQADE1oMOih80bCyqe6aQAA
      cKXVd65wvjB9d4fosACXJjuGYdHophCZo3ii2/+DGfn4zsFJ/NffzoFlgYqGPrxxvBbvnKnn
      bGcztzAhMiQA3//8Zp842kmEfBhNFrdyYmNTOvzijVKH/aRdZdEAcL1jxC8Nlgn+QX3XKCwW
      BvWdvpNjoCiKs0SwN8hLjnTpdRPTugXiefbYW5KCLXnxtn9/7a61SI5W4P7tWfj6PcV4cFcO
      1qS4NgZPwLCu+x7YQxk2vzItJykCP3hkq0P6R1yRER+KkCCJ2x3egLXR8dVPajzqx7FoALjW
      5p8GywT/YEpjQPvApNPJ34RIOe7dlonHbluDe7dlYlNuHOJnGq6KM2IQ5MS2nWFZzhq0vMFa
      F6uJVA7udGRiAZJjrGWkEcEyBEiEEAr4OHC2Ab0jUzhU1oSrDnyvRUL/06xZjpAgyYLSZABY
      kxKJn355B2Ls/IxrdhUlYVdhEqf+GWdqOj16FGQ3AFgYBl1DK0cNkOB9GJZFTcuA0/LgXUMq
      fHC+CQajBR+cb0JlQx/2rk9FbHgQkmMUTh3rsAyLQj9tsb+RmNBAZDrg5+sOLGsVRYsMlqE4
      I2Zeh68zZMZ7dpyeIDsxfNHu6JSYEPzyiVuwszDRIzX3QVIRnry3BE/eW4ITVdw2Qs72SXhq
      F2A3AExrjSvCDILgW+q7Rl3a6lr1a1gwLAuzhcGZK5144u5ipxt4GJbFppw4SETeP+d1lp1F
      iS5r9Uud0LipbOjD+uxYSER8TOtcO1vfXZTk0ut8ydr06CWd0AKlInz7/vX4yWPbkbiMzLij
      CPg09pWk4tff3INbipMxNqXlRJb6Ri5c91wBgN0A0D867ZcO9gT/omuQm11iQpQCg+NqxIQ5
      t02nKAqhcqldaQp/Ikgmwm3rU11+fZhcCgHfMSVJjd6EqBCZ9dhgTmx2NEyLBDwUpkUjKZqb
      SdIbKALEWO+AExpFUShMi8JvvrkX//7wFpRkKZ1ePFCwHq/dvTkDf3jqM3j87rUIV1gru1p6
      x+0m0UOCJNiUGwvAWqKakxgOALhtfSryUyJtJau7ipLsVi6NqrSceB7bw+67n61/JhCWYlpr
      hMXi3tY0KiQAwQFivHjoMh7bV4De4SlbJ+5y8Hk0ZGIB7tqcgZNVHR6vmHCVuzZnINCNUkc+
      j0ZKTAgau5euBDp6qQ0mM4PXj9dCbzSDR9M2yYGTlzugd0AyOT5SjgCJEHvXpbjtgOUtNuXG
      OdVBS9MUNmTHYkN2LMandbjeMYLa9iG09Y2jf0xtK/+lKIBP0wgOlEAZHoj0uFAUpEYhJSbY
      1nMwl8VUVKc0BiREKnDxeh+EAh7S40JR3zUCRYAYxy614dF9BVbrSbl00XzP8KTWFmi4xG4A
      8Eb9KWHlYzRbrOeuLsSAU1c6AVhLHD8obYTJzODA2XoI+LTDASBQKkSAVAiaovDwnjy8eND/
      Jqz4SDnu3GTtrmUYFmNTWjR2j6FrcBLDkxpo9SZYGBZiIQ8hQVLEhQchPS4UcRFBEMw5MpqV
      UliK2YlLM/P/FubT36MjVUQAsD5bCZqmsL0gEf84fR0T09x37HKJUMDDnZud7142GM3oHlah
      rmMEPcMq9AypoNIYwKdp224rUCpCXHgQkmOCkRYbgsz4MITKpYtfc5F8mNnCgIXVFGZ4QoMw
      uRSJUQp0DE7CwrCoaR3A1+8pxh/ev7TotfUO/v2cxW4A8EVjD2FlEiAROlylMpfZhqvhyU+l
      RpydbLISwm1JvT3rUlBW2+NXZiZCPg9fv6cYDMvik4oWnK7uROfg5LIm9jRNISWXXeUAACAA
      SURBVCRQgu0FCdhVlARlWCC25sfjwJn6ZV/rDnwejU25cQCseYcHdubgT36+C9izLgXRDlaC
      MSyL7iEVjlW2oaKhD2Mq7ZJrl/EpHcandLbKKZGAh1RlCHYWJWFrfvyCHgOJaPFczcikBhtz
      4nCpqQ88Ho2NObE4fKEFAHClZRC5iRFLfo+cyQM5w4KDRZZlvdaGTFj5RIf6rgxzTeqnNe08
      msZT+zcgwgPbZFd5cHcOWnvH8cT/HsaLB6vQ1DPm0ATOMCxGVVq8e7YB33r+E/z67Qvg0TS2
      rUnw6Hi35sdDGfapQc2txclIiw3x6D3dISRIggd2Zi+Z/AWsc1p95wh+9rdzeOq3R3D4YotV
      9trJ+xlMFlzvHMHv36vE1399GB+WNc1zIlvqu9DYNYqSbCUGRtVo7R1HRnyYbcJnWSwp700B
      TufHHIVib6gvmtYa8ZVfHvIbNT2Cf7OrKAmXm/q93pUrEwvwx+/cvkBnvaV3DD95+YzDRx6e
      IjsxHBq9EV1uesnOEiQV4TMb0nCovMkj7nyBUiH+5+t7FvRVtPdP4N/+dMKjOw9XoGkKTz+0
      ybZjWYyJaR1ePXIV5692eaSxNSokAI/dVoAN2UpMqvX40rOHwCxyH4mID53BDIqySkXMDR4i
      AW/R33FUSABe/O7tywY6V1iwA1DrDF6R9SXcHOiNJuzyQdngtjUJdk020mJD8f0vbPapPaCQ
      z0Nb3zhnkz9gVY1861SdR+rYaYrCV24vsttUlxwTjIf35MOHkvV2+cz6VGzIiV305yzLoqqp
      H//6x2M4c6XTY6oGg+NqPPt6Kf74wSVIRALkzlT42GN2wmfZhR7GSwXYjTmxHpn8ATsBYFpr
      JAGA4DBjUzp8dmumV9vtJSI+7t2WtejPC1Kj8NMv7XRZedNVKMqaE7EwjMdWzFxXOlEUcP+O
      LGwvWPx46Y6N6dhX4noZK9cUpkXh0X0FiwZDhmFxqKwZ//1aKUZV3NmGLgYL4NildvzkldPY
      kLP0jsRZxEI+9pZ4rsx5QQBQecARiHDzMq01QhEgxudvyfXaPffvyEbEMqqaqbEh+MXXbkVe
      coRXxhQoFWJ9lhIGo9krGlpc7AQoCnhkzxo8tDt3yRUmTVP46p1F2FGQ6PY93SU3OQJPP7Rp
      Sb38A2fq8eonNV5fyDZ1j+Gj8iZO82Kf2ZBqV+KCK+wcAfmXnybBv9HqTWBZFntLUpc9j+WC
      tRnRuGtzhkPPDVdI8Z9f2oEvfabQYzsUigKKM6Lx1P4NuN4xwplX73IwLIv1WUoow12bHGLD
      g/DvX9iCW9YmYUpjhFpnhIVZfOw8msaT95XgtvWpPjsOKkyLwo8e2bpozT/Lsnj/fANeP1HL
      iRibK/SPqTGq0nISoDPiQvHgLs8urBaUgep8nDwjrCzMFgYmMwOhgIdvfHYdRiY1aOnlvh0e
      sNbUf/u+9TBbGDT1jGFgzGqtx7LWpHB0WCCSohSQz8kN8Ggad2/JwOa8OHxwvhFHKls563LP
      iA/FQ7tykZccgWf+ehbTXm5Eu9Y+hJ9+aScaukasRjYjjlXv8WgKDMvixYNV0BlNYBgWQgEP
      gVIREiPlyE+NxMbsOCgC5+dY+Dwa/3znWkSHBuJvR2q8phZMUdZjqEf25NttwJrlUmM/Xjvm
      eyew2e8D7YbhfXyEHN/zgpz1giqg98834tVPajx6U39HwKORorR2Xgr4NFJigtHYPQYACJQI
      saMwETyaRkVDr8c8WlcKUpEAL33vTtuqbEpjwM9fL+VcJloZHoh961JxpXUQde3DizaLUZRV
      zGxzbhx2FSUtWC2qNHocq2xDaW0PuodUTq8UgwPFKEqPxs7CRJu886nqDjx/oMK1N+YmxRkx
      +OEjWwEADd2jqO8cQUf/BEZVWuhNZgj5PARIhOgYmHTKhlHAp7ElLx77d2RDGR604OeN3aP4
      w/uXPN40Gq6Q4qt3FKEkS7nkMdXQuBrf+cNRvzrB2JgTi4ExNTqdlEzZkB2LJ+8r8UpebUEA
      ePdsA/5+9KrHb+zPSEV83FKcjENlzZCJBdhZmIiPZpo27tuehdNXOmEwmiEW8jE25fkkkz8j
      EfHx56fvnGd0ojOY8JePqnGquoMTgxGpSAChgOe0j2xokAT7d+Zg77qUBb4BFoZB38g06rtG
      0NIzhq4hFUZVWkxrjWBYFgzDgs+jERokQUKUHAmRCuQlRyAtNnReU47RZMF3/3jMZ93zFAU8
      +/itdi0QWZZFS+84/nSoymWRMomQj/t3ZOOerZng8+afGGv1JhypbMW7Zxs4T04LBTzsKkzC
      w3vylpXRsDAMfvF6GSobXFM/9RQCPo3/eGw72voncLC0CePLzBXKsEDcvyMb2wsSwKMd035y
      F94zzzzzzNwHatuH/Kqb0hcI+DSSY4LR1DMGIZ+HpGgFmmeONfg8GrsKkzClNaKHA5/YlQ6f
      R+POTenztqoCPg/rs2ORFheK1t5xl43bQ4Mk4NE0NHqTS1tpncGMy039aOweRX5y5LyJm6Yo
      yAPESFWGYH12LPasS8HmvDjweDRUaj10BrOthT9IJkZOUgTWZkQv6PasbOjD4YstLr0/rtAZ
      zdh8Q/6FZVmcrOrAs2+WuSUkZrYwuNY2hLb+cRRnKucpmgr4PGQlhGP32iTIxAIMjWtsMhSu
      IhLwcEtxMp5+aBN2FCZCJFj+CKTiei/ePn3drft6AoZhMTSuwdfuKsbtG9OQqgyBIkAEsZAP
      iUhglYSIVmBzbhwe3pOPL+5dgxRliEdKfRfDzg6gHn8/es1rA/BHJCI+9qxLwcHSJgRKhdia
      n4CP53zJZWKBtQaZBU5Wd/hwpL7H3g5gLkaTBeV1PTh2uQ3NPWPLnr/zeTRSlSHYmh+Pc9e6
      0DRz9OYuMWGB+Mmj2+xWVLAsi1PVHXjl4ytLHiEkRyvwLw9sRHyk3PbYr94sQ2ltDydjdJUA
      iRAvfvd220qZZVkcrWzDnw5VcZoMzU4Iw48f3b6oLIHeaEZD1wguXu/DpcY+qDTL9xRRlHWH
      l6IMwfpsJUoylQhXSB2ue7dYGPzL74+iy4/1y370xW1Ylxnj62HYZUF4pb209fBnjCYLwuRS
      hMklKEyLRveQCjFhgZjSGJAcE4wxlRa9w1NIiwtFkEwEqUjgtDPWzQIFCrwlvqxCAQ87ChOx
      ozARo5NaNHaPoq1/HCOTWttqUSoWIHxGICsrMQyKADF+9vfznE3+gFXf6qevnsP/++ouhAR9
      2h/Asiw+KG3C3z6pWVYaoH1gEj/4y0n815d3Iik6GHqjGTWtvnfOU+uMaOwaxboZSeQrLYN4
      6XA155Uw9V2jeO6di/j+FzbbPaIQC/koTItGYVo0HmfXYnhSi95hFQbHNRib0mJ4QoOOgUmM
      TGpgtjCQy8RIjwtFTlI4UpUhiIuQI1Dq3Ll3ZWOfX0/+gLUsdcUEAAGPBAALw+JgaRMK06Ix
      ptKirmMYyvBAUJRVKXVNSiQMJjOOVrRCKhZ4dcvmb1AUwHPwMxOmkGKLIh5b8uMXfQ7Lsvjr
      xzUesSTtH5vG8wcu4kdf3GZT2rzSMojXjl1zWBdmWmvEr94sxy+fuBVD42po9P4hQd3UM4Z1
      WVY5gucPVHjMz6OioQ9HKtpw+8a0JZ9HURQiFFKIBDyMqnSobRtG97Bq3lHe+LQOF+t7cbHe
      angiFQmQnRiG2zemY01K5LKfK5ZlceKy/+/AW3qt6q8JHBnRcMmCACCT+K6F3p8YVWlx/PKn
      9m5zS+zOXu2y/bdKY3BJDfNmgc+nIVqiKcdZGrtH8dEF55zBnKGmdQinqjuxtyQFLMu61DDU
      NzqNwxdaEBUicyvJrQwPtH2uchLD0T827bL8cufgJFiWxZsn6pxOljvLGydqsTE3FiGBi3da
      6wwmHCxtwoflzQ4niLUGEy43DeBy0wCyE8NtJvaLHQdNqvWobff9Dmw5LAyLMzVdeHSf/wWA
      BSFWuoSkKYFwI2IBnzOdEgvD4P+OXvN4ffk/TtVBqzeheab6xxVOVrVjaFyz/BOXYGuedSfE
      oylsyInFtnzX1T4npvXoH53G6SueXxGrdUZ8cK7R7s9YlkVzzxi++4djePNkncvVQfWdI3jm
      r2fwwsHLi4rfXWkZ9DuRusWoaupfstHOVywIAEF2LMkIhMXg8vPS1jeBhmVMT7hgbEqH8roe
      XHejV2FUpUXHADfOeckxwahtH4JUIlhQruooWr0JZ2q6vDYhnrvaZbcy69zVLvzkldPo48BT
      hGWBo5Vt+MkrpzFmp5KprmPlVCv2DE9Bpfa/k4IFASBQKrK6PBEIDrDUMYCznKruWFRKl2tO
      VLW7VR5pYVjOOn+LM2IgFQmhkImhdFn3ncX5a13LP40jJtR6XJ8zAVsrj1rxm3cuLlC6dJeW
      3nH88KVTNhOhWdpXkHUtw7LoGuLGQ5tLFgQAmViwoOGDQFiMG+UCXMXCMF7tP+kcnHS5P2GW
      pRygHIWCtXqmrX8cp690oiA1yqXraPQmr1ei1XV8uoOqahrAXz6s5qTxzx4DY2o8+0YZDDO7
      DoPJjJFJzxile4qBUf+rFFww08sDxJx8sAmrg6hgbpQPdXoz+h10oguTS5GTFG77n1QsQOKc
      CotwxeK+rbb7Gcxg3DiTFfBpZCWEufx6wFq5I5MIUV7Xg57hKTR2j7o8iat1Rqcn39nfU0xY
      ILITwxG2hN+tPWaPwEYmtXjuwEWPC+G19o3jlU9qwLIsVGoDDCZudho7ixKxb0ZyeU1KJCKD
      ZdhdlGSriNxdlMTJonhowr2ckSdY8K5oikLkMlK7BMIskQ76sS7HiErj8PEPw7KwWFjsLEyC
      xcJCLhXh2/evR+iM/v+uQscMamLCFmrcOEpCpAJrUqPcUsa80jIItc6Ipp5P+x0uNfa7dK3l
      5BLsMWvks7soCRSAzXlxS/oC3Mj4tA4WC4NXP6lxezflKMcutaGuYxhGk4Wz48JAiRChcimC
      A8WQSQQQ8HmQB4htxQ2KQDG4OBX3l5LhudgNa/bEnwgEe3Clfe5Mtcj4lA6N3aMYndSgsXsU
      RrMFp6o7sGedc8YZgVIhSlxs0LlzczriI4Ig95OiiYQ53cnOYrYwuN45goOlTVCGBTmcAzSa
      LGjoGkV5nfc6oRmGxWvHamFmGE4b3U5WdWD32mTbv4V8q4rsvdsykRITzMk9vKWe6gx2A0CM
      D42+CSsHkYC3rDGLo7jbTKc1mDA8oZl3FLQcfB6Nx24rcHoSX5cZg8258RDweTZFUF8SJBUh
      L4WbcRhNZocrkfg8GofKmryuvd/UM4rGrlFOGzAn1Xpo9SbEzEiFmMwMPixvxgfnmzhLNgv5
      /pdbtTuiZI4iHuHmJjIkABKO9Mq5KCc9f60bW/PjrZlVBwiQCKEMD8K/PrTJYendjPhQfPv+
      9RDMfJmdOTLxFEUZ0YjjYNceGSyDSMB3uIvYZGZQ3TLg9n2dhWWtf2tHO9CXvd7M/5+q7sD6
      7FjbYwzDgmFZzhLb3rRNdRS7396EKAVoivKZqw5hZZAYpeDsSxihkEEk4DlVx94xo7NuMFkw
      MKaG0WTBtfYhh5oZKcBWcpmXHIH/99VdeOGDy2jqGbX7hRfwadxanIJH9ubPu/6a1CjER8p9
      JgdN05RNjdXZ7+ysTv3AmBr7d2RDozfh3XMNDr9+SmvwmOTEcvQMc/f7PlLxqUnQj18+DYPJ
      jA/L1bbHDpU3cfI+Q51MsnsDuwFALhMhMliGgVUqcEZwDK7ORgGrtHB8pNwpN7GKeqv+u1pn
      tBnQXHVQnC0oQGRTBlVpDOgbmcLajGiIhXwMjqshE1uTgUFSITLiw7AxJ9ZubkzI5+G+7Vn4
      zdsXHR43l2zIjkVyTDBYloU8QOSUlMTs7+9MTadL97Z42XN3LiqNYZ40tTvMndxnm9vmPsZV
      kHMnT+Mp7AYAAZ+HxGgFCQCERaEoICsxnLPr0TSF9dmxHrOTvJG8pAiwYPHSR9U4frl9QVer
      TCzAXZszcM/WzGVt+batScDxS+1e70yVigV4ZE++9SycorA+S4kjlW1eubdExEeQTOSSHIZE
      yEdkSADGVFooAsUu+2rweBTAbc+ZxxDyeYiN8L/imkX377lJEd4cB2GFESARIjGK2xXN1vx4
      zlZ1y7EmNQo/fvk0PixvtitpoNGb8ObJOvzs7+eW9cmmKQpP3F3stJSxO1AAHtmTj5g5ncM7
      i5K8ZthelB7tchmmVCxAWmwIgmQiJEW7vouMsePt4K8kRMkRKPGPirG5LBoAcpLCvfZhIqw8
      MuJCHXJrcoaokABsyY9b/olukhilwMmqDrT1LV/dUds+jN+/d2nZyS42IghP7d9gSw57mr3r
      U7G3ZH7Za3psKArToj1+bwGfxj1bMl02POeKxGiFx03TuWJjTqzLOk+eZNHfXnykHKFBUrf0
      Ugg3LzmL7BAZhkX/2DSaukfRP6bGlMYAC8NALOQjXCFDckww0pQhkIjsq4g+tCsXFfV9blsL
      LgaPppAco8Cp6k6HX1Ne14M965KxZhmZhuKMGDxxdzFe+OCyR7tiN+bE4qt3FC0wZaFpCl++
      vRDX2oaclrh2hr3rUpEQKedMBdZVQgIlKM6IQWltt0/HsRx8Ho0NM9VF/saiAYBH01iTErnq
      LQ8JC6EpCsUZ8xuoRiY1OFXdidPVHcvmjvg8GvkpkbhrUzryUiLntdlHhgTgS7cX4vfvVXpE
      V+auzRnzOm8dgWFZHLvUtmgAYBjWJkuwsygJQVIRfv3OxUVljF2FooA7NqbjsdsKFpUmiA0P
      wiN78/HXj2s4vfcsSdEKPLI3HzweDZlYgCk3vTACJUKEySWY0hhhNDunZBogEWJfSQrK6ro9
      pkHEBYVpUX7bXLvk/ml9tpIEAMICIkNkiJppFjQYzXjvfCMOlTZBu8xZ+SxmC4Pq5gFcaRlA
      RlwY/um2AmTEh9pWlLuKktA3Mo33nChJdIR1mTG4e0sGvvncJ06/dq49JcuymNYaUdHQh8tN
      /egeUtk6mSVCPuIj5diSF4+a1sEFCpauEiAR4uE9+SjOiEZdxzDGVFrojGYwDIsAsRCKQDES
      oxQIkolw56Z0DE9ocPgCt2b1YXIp/vWhTRAL+WBZFhEKGQbGnC8Uma3amlDroTOakZsUieud
      w06Lu0UEy5CTFIGshHBbFZi/QVHAvduyfD2MRVkyAOQmRyBQKvSazgdhZVCSpYSQz0Pn4CR+
      8/YFdA66VpPNslYHsB/85SQe2JWD+7dng8+jQVMUHt6TB4oC3j3LTRDYkhePJ+8rgd5oduns
      ekprXenqjWa8c/o6PqlotXtMNaUx2ES/hHweeDQFmqZcLiWkKGuPhDI8CO+dbcCLBy8v+fzQ
      IAnWpEZhfbYSFguLo5daOVkdRwTL8J//tMOWdKYoConRClx1wbrTYLLY/AJOubjApGkKyTHB
      oGkKD+3KwTN/PeuXfUslWUpkxn8qGsiwLKY1BmvwM5jAMCxkEiGCpKJ5XtXeYskAIBMLUZAa
      hfPX/PuMjeA9KFjPoOs6hvHz10pddnyai4WxWhn2Dk/hyftKIBLwwaNpPLwnHwmRcrz00RXb
      BOwsQgEPn92aif07siHg82C2MBAJeTDrnJuQAyRC9I9O43//cQGtfY6Vqs4eachlYmzMjUVH
      /wRa+ydgXKbZjUdTCJKJYDRZYDBZMDShcVhJcmxKh1PVHThV3YHIYBmiQwMxNK52WYeGooB1
      mUo8cU/xAu+HnMRwHCxtcum67hITGoDQmQkzPyUSW/Pj51m1+gNiIR+P7SsAy7Jo6BpDeV03
      alqHMDKhgd5knheYRQIeQuVS5CVHYEtePLISwmy+1Z5k2RT61vx4EgAINmIjgkBRFH7+2nlO
      Jv+5nL/WDYoCntq/ATzauhPYXpCIvORIvHWqDmdr7LtQ2YOirKWKn9udi7TYUNvjUrEAceFB
      aOx2Lg8gDxDjxy+fdqkoYnxaZ3XKenQ7IoJlaOoeRdeQCkPjGugMJpgtDCQiAUKCJIgJC4TO
      YMLJqg5bp66rzAYNmqYgFQtgMJqdCgTK8EA8tCsXW/Pj7SZ881IiIZeJfOKJvS5TaZsgKYrC
      l+8oxPXOEb8qWvnCrXnoG5nC8wcq0LiM053BZEH/6DT6R6dxtLINyrBA7N+ZjW1rEhYk+7mE
      Ytml900GoxmP/+9hjE/rPDYIwsrhzk3pqGzo86i2+edvycMDO7PnTTosy2J8yjqRXmrqR+fA
      JPRzJjSaoiAS8iATC5EZH4bcpHBEhwVCIhIgTC5FgERgK1s9fqkNv3//klNjoii4fZQSJpfi
      V0/cuuhW32S24K2TdXj/fCPnypE0RWFtRjQSoxSobhlA/+g09Mb5q1AhnwdFgFVYbktePHKT
      IiAULL0K/cuHVfiI41zDcvB5NH77rX0LEquzPsL+4BOcmxQBqViAS419bn1ucpPC8Y3Plszr
      9+CSZQMAALz6SQ3eP2/fBJqwehDyeUiKVjhdReMsAj6NXz5+65KihDqDCRPTVgXH3pEpXGrs
      Q1vfBCY1eruWhGFyKdJiQ7ApNw7FGTH4ySunvdZ1PJdt+fH4zoMbF6yodQYTfvduJco8LK1c
      nBGNp/ZvBMBiTKWDWm+ExcJAKhZAESBGaJDUqXr1wXE1vv3bI17tCdi2JgHffXCj3Z+drenE
      8wcqfCq9LBUJIODTnO2MgmQiPP3QJuRzpPg6F94zzzzzzHJPCpVLcLSyza9LrQieRyjgYXhS
      6/HPAcOwGJ7QYNuahEVrzfk8GhPTOhw4U493zzWga6YSZ7H6d63BGiguXO/Fiap2rEmJgkqj
      X7ZUM0wuta6U3X5XVrqGVFiXqZy3C9Abzfjlm+WobOjj6C6L0z+mRkPXCHavTUaYQoqIYBmi
      QgIQGiSFTCx0urZfJhbAwrBek8EIlAiXVG9NiJQjJEiCmtZBr/lLz4XPo2G2MNBxGBANJgvK
      63qQGB3shme0fRw6XFKGBaEwzTWvUsLNg8nMeO1LdbV1CE099s9NLRYG75ypx7++cBxldT1O
      r/ZUagM+qWgFw7JIiw2xa4AimDEEWZ+t5Ly65ERVu+2/WZbFXz+pQXWz92SVG7pG8cf3l+9u
      dgSKovDZrZlIiw3hYGTL8+htBYia40JnsTCYVOsxqtJieqZQYM+6FHzngY2cSZU7SqoyBEIB
      zyO7D4PJgv/9RznnqrMO/YaskrMZuNzkfe1vgn8gEvA82l16IwzL4khlGzLjw+atSqe1Bjx3
      oAKXXbROnMuYSgeNzoQv3JqHIJkIg2NqUBQFZbh1wRMkFeH7L55Y9jo8moKFYUEBoGgKDMPa
      HrNHVfMATGYLBHweTlZ14EhFq9vvxVnOXu1Cckww7tma6fa1REI+vvvgRvzgz6c8mivctz4V
      m3JiUVbbjaqmATT3jmFgTA3LHG9n4YyqbGZ8GB7anYtjl9psJaeeQiTg4a4tGahrH+a8+W8u
      OoMZv3qzDM8+fiukYm582x1OL+elRDjltkS4uYgJC/T6uerV1sF599Qbzfj566WcTP5zr/n6
      8VoIeDw8vCcfD+/Jx87CRCgCxNAaTMsa1ctlImxbYzWFiQiWYX2WEgBw+8b0RV8zMa3DxLQe
      wxMa/O3oVc7ei7O8caIWgy40ctkjOjQQP/ziVo8J4hWkRUHAo/HN5z/BL98sx8nqDvQMT8Fs
      YcCysP3PYLKgpXccH5Y346+f1MBotnjUiCVVGYL//upuRChkaOhautKHC7qHp3CwjLvSW4f3
      SDyaxv4d2fjVW+Wc3ZywMogJC0RwoAQdA+6VJTrLxLQevcNTSIxWwGxh8Lt3K3G9g/uOTwvD
      4g/vX0KoXDLP4lGrNy1b6kpTlK26iEdTNjVTiWjxr5bJzECl1uPwxRa3pRTcwWCy4G9Hr+J7
      n9vk8Nm/1mBC7/AU2vonMKbSQm80Q8CnERIoQXykHP/+hS144eBllyWe7SGTCNDSO4aalkGn
      XzvbXUzTFMLkUkxO652WnLBHckww9u/IxobsWBhMZvzijVK3r+koB0sbsbckZUFfhis4dUhW
      kqVEYpTC7fpkwsri7i0Z+LCs2anXFKZFISM+FDza6htLgcJnNqSCoiiU1Xaj28EJonNwEonR
      CpysakdZnef6UYxmC557pwLPPbkXgVKrbK8DBXIAgKL0KARIhQiSCtHmoH9s15AK5/ygcamy
      oQ8dA5NLVlyxLIuuIRU+udiCi/V9UKn1iybFZWIBkqKDYQyxuOQVcOO1AECjc/9YhWGsZcT7
      1qciOECM0tpu2w7CEShYe0FKspTYXpCAjLhQWx9CeV2v0zIW7qAzmHH8Uhse3JXr9rWcCgBC
      AQ8P7srBs2+UuX1jwspAGRaITTlxePNEnVOvW5MSiVePXLWJlj2wMxuHL7RApTHYTbouxtiU
      FhPTOvzfsWserz4aVWnx9ul6fPn2QgDWz/tSZ/mzVDcP4khlK2JCA+Y1nS0GRQEXrvf6tFRx
      FrOFwaGyJjy1f4Pdn09M6/C3I1dx7mqXQ+PV6E22iiCaphAgEUKtMzqVcA6SibCzMBG17cOc
      GbID1vd6uLwZn92Wid98cy8m1XrUdYygZ1iF3pEpjKq0MBgtYBgWAgGNIKkIEQoZEqLkSFGG
      IE0ZssAClWVZnL/m/UBeVtuD+2akU9zB6TT5+iwlMuJD54ljEW5OKACfvzUPNE3NS7Q5Qkvf
      OL70mUJcauxDfecIGBa2umhnJj6dwYyPypu9pkd1tLIVd2xMQ2RIAGRiIUKDpBieXHwly7As
      TDNHCgwLmwz0UnIPNE2htt15DR1PUdnQB53BBMkNXsrXO4bx3IEKlwXtGIaF3mDGnZvSIRUJ
      UN08gO4hFYxmy7zPAJ9HQyzkIzkmGMUZMdiSF4eXDl/hdPKfhQXw3rlGSEQC7N+Rja358fN/
      PmMC72gvxLTWuGyXryfoHlJhVKWdVxHlCk4HAB6PxmP7CvDjl097tSqEYZ6GrwAAIABJREFU
      4H2yEsOxITsWRpPFaTOLstoeVNb34TMb02A0WSDg0aAAp+vpDSYLSr24wjKYLDhZ3YHP35IH
      oYCH1NiQJQOASmOwKeYOjqsxOCOFvVTjJJ+m/aJbdRaN3oTrHSMozvxU4ruqeQC/fKPM7QYv
      o9mCQ2VNeGh3Lp59/BbojWaMT+kwrTXCZLFAJOAjUCpEmFxqO1I5cKYe5R5uiPvHqetIjw1F
      wQ3l7RRFOWWE1T2sstt46GlYAI1do24HAJf2D1kJYdic53nnJoLv4NEU/mlGd14k5EEidK7s
      7DMb0pCVGA6xkA+dwYS2/gncsSkdRenRTjWzdA9NYtwJo3MuKK/rse14dq9N4vz6wRwk77im
      Yc4qtqFzhJPJfxaWBd46WYePL7ZAIhJAGR6EzIQw5CVHIj0uFNGhgbbJX280z+uT8BRmC4Pf
      vVcJg5vvccgF3/Sv3bUWEcEyAMCOwkTb4xuyY51yOBvkwLPdpQBAURQe2ZNvS9IQbj52r022
      NffwaBrRoc6tNEqvdcNktuBUdQe6h6dQXteDy039UOuMS66ob2RU5X0NqoExtS2BWZgWtWSC
      1FmiQgIQ64fmIG0zCqfTWiN+914l59IOLAv87chVNC8jI3LmSqdLHgOuMKrSuq1j5IpKrdnC
      YOfMxB+hkNkeD1NIncqPcSE14XIGIUwuxSN717g9AIL/ESaX4pE9+fNKAx1Jbs5lSmtAQ9fo
      vOqIgTE1mnvGHNbGFwl4Th090TQ17wvEoynQM1t6oYAHoYDnUNLMbGHQPayauQaNr9xeyInX
      Lz2zq1Jp3NvR5CVH4O4tGchLjgBFAZtyYnHvtixkJYQt/+JFGJnUwsIweOfMdY81ThlMFvz5
      w6pFj46NJutxkTf5qLzZYSMjeywn7W0PtdaI8Skd4iPlLt8XgC335A4uf6opisKtxcnIS7bv
      DUtYmVAAvnJHEYJkonmPzz0f9hZZCWFQqR2fLLfmxeMLt+bZ/v3l2wtRkhWDxCgFHtmTjz3r
      UrA2wzHT9IE5k2BOUgQe5WCxMystoVK7vnJLiw1BYpQCRyutHa5F6dHg8Wh8VN6MovRom0a+
      s+iNJgyMqj3eldzSO76o5lFt+7DHu3ZvZHxa51ZjodjJo9FZTl/pxI6CxHn5BpqinMqRLdVr
      4ihuLWv4PBpfv2cdOQq6idi9Ngnrs5ULHk+PDUFytHc7wW8pTnZqdcbn0xAJ+RAJeAic6f4U
      CngQ8GhcaR7AR+XNqKh3THDtRrevOzal44t7853aos9CUxTu3pKBL+5ZA4pyvqJqLpnxYThT
      02lLpiZFKVBR3wej2YKL13uRqnRNk8dkYXCqusMryemPL7bY7bGoaOj1+L3tUeWGxE2EQur0
      a1hYd5lN3aNIVYYgKiQABalRCA2SQO9EQjlU7vy9b8TtfW1MWCC+SI6CbgoiFDI8dlsBaDtl
      EBRF4e4t7uvGOEpMWCDWZSpBwbkJt6ppAEXp0VibEY1Lc1Z2W/Ljcd/2LJRkObaTubEzlqIo
      3LstC9///BaEOfHFUwSI8eR9JXh07xrbcZa7tdtz/z4sYFtF0jTlsnAdn6Zxsd47E3BL7zjG
      bsjtMAy7bH7AU1zvHHa46e9G4iKcP8Y5fMHaVHmpsR9//OASprUG6IwmvHmyzqm/X7wL974R
      Tqxm9q1PxZa8+OWfSPBbhHwevn3/elsXrD0258V5TfXx4VvzIBbyndZx6RqcRHykHGEK2bwq
      idJr3Xj3bAMqGxzb7tsT26IoCuuzlfj9U7fhn+8sQkKk3O6OgAIQFxGER/euwe++fRt2FSXN
      ayByRy+ntn0Ye0tSERIkgTI8EE3dY9hVlARFgBhb8uJdnkS1BpNTyXl30BvNaOiaL+lhNFvQ
      O+K8fMSaGY382V6DuY85ymxZqiuEK6ROLQiAT3eXDMtiYloPjd6Epu4xpxLvEhEfKUr3ixM4
      00t9/O616BycdOmPSPA9D+7OQU5S+JLPEfB5+Po96/C9F4+7bHLuCBtzYrExx1pmHBUa4LDC
      pMXCgIW1kkVvNIFlrU1nDMtic148kpUhGBpXO2RxGhkss/u4xcJArTMiJFCCLfnxaOkdR3PP
      GKa1BgRKRciMD8O2NfEoSo9e0Fg1izIsCK19rjU5dQ5OgqYpFKVHo2NgAnUdw6Aoawnhiap2
      lytDDEaLU6vP4EAx1mfFQqXRQ60zIiokABRFQWc0oay2Z9nO364hFbbO+bdGZ3TpM5WVEIar
      bUOIjQjCnnXJ+KC0CZnxYU6Z1TMsi/Fp3YK8lyOIhHwUpkXh+GXPl67OJScxAkFLLNYchbMA
      ECgV4enPbcK/vXiCUzMEgufZnBuHe7dmOSQIlhwTjMfvKsYf3r/EuU4+ACREyfGNz66zHZek
      xASjvtMxAbgzNdaGsY8vflraN7sL+N17lQ6PQcCnF5ylD46rceJyOy7W96J3ZMquLMWkWo+L
      9b24WN+L4EAxCtOisW1NPNakRM2rZkqMVrhlYN7ePzGvS7a2fRi17e4ZsigCxA4HWpGAh/t3
      ZOPdM/WQSYRWZzGdEXnJkbh4vdch2Ycb7+XunDGm0oIFnF6NA9YSVXurb5ZlMTalQ+fgJAbH
      1dAbzBAJ+YgOCUBitMJ2r30lqThR1e5Vw6y9JSlOm/fYg1PHhMQoBb69fz3+560LpEt4hZCq
      DJk34TrC7rVJ0BlMeOXjGk6DQFxEEH70yLZ5x1D5KZH4sNw5ITp3iQ4NRLhCCpZlMarS4v+O
      XcP/Z+88A+M6y7R9nTN9RtKo92r1asu23Htc0nslIR+EZYGlQ1h2l90FttF3AywbspQAIQmQ
      ENITO47j3i3Lliyr9941kqbPnO/HWIpktTOjGTlZ6/qTSNacczSS3ud9n3LfJy61edXyNzhi
      5UBpI++dbyQnOZIHdhSwPD0GURQoSPvgdc7lpUZxtFye2F5KjJGy2i4GRqwTQ3qmMRtmm0N2
      X7zNPvW9nKnu5C0HShu5aW0mXpaNAKYYr9sdLo5fauWtk3U0dAzOqB6qVinITorgxrUZrM1N
      YEVGLOd9UCv1hbS4UFZmyetmmw+/W+asz0/ikV2j/Obta6dzvoQ8woK1/O1DGzB4mWcXBIFb
      N2Rh0Kn539fO+WUUfkVGLJ+/Z820HVxBWjThwbqAGo1czcaCJCTg7VN1PPtO+byS0HMhSR4H
      rm8/fZAty1N47JZikmOMRIXqF1VBci4MWhWF6dGyA4AoigsO/GrV1PJjiEHjk1TIZEbMdkxj
      NnJSvJtZEQWPaJ0keQrRT712jvp5UnR2h2vi5JWREM5NazOobOoNeBeVKAg8umf5ghsJJq7n
      l6tcxZ2bc7hpbUYgLr2EnwgxaPjGRzcT46OWiCAI7FiZxvc+vYui9BhfNl2Ax0D7kV2FfOOj
      m2c8vuu1KnaVLPPx6t6j0yhZm5fAD58/zlOvnlvQ4j8ZCY8L1989tZ/O/pEPVNPExsJk4iPk
      y3M0dw2xMjOOYL16yiSrN1z9s9aqlVN8kuVy7Ipm0PEKTwfT/nMNvFfa5NU1VEqRSKOO9843
      8U+/em/exf9q6toH+OUbpcT72a93Jm5al+FXe15ZpvDeIggCyzNi6RkcpanLvx6WSywclVLk
      aw9t9EsqIjRIy7YVqaTEhmIas8lWjjQaNNy4NoMv3beWktyEaTK7k0mNDWX/2YZF6VHftiKF
      wxeaORcgj95Ri53jl9rYUZzG2eqOgNRRvEEhCnz27hIijXr2nq6TpdTqdLnp7B9hXX4ioUFa
      mrqGkCSwO5wMyRxyu2V95pRJWEHwnJS8bSIZN9QZTz25JYluL9VL0xPC0agU/OwvZ3xubnC6
      3JjGbIiiELBaQH5aFF+6d53fdv8AguRrA6wM7A4X3332aMD+mJbwHo1KwVceWM/a3AS/FJEm
      I0kSvcNmzlZ1cLm5j66BUXoGxxi12FEqRGLCDOSlRrEmN4H81CjUKoXsZ3j3XAM//fPpBaUI
      5sNo0BARoqeh0/8yxFcTpFMTHxFMTdu1lVXfsjyZr9y/HoDH/2efz91J3qDTKHnyK7dME8V7
      82QtT716LuD3v5oty1M4dbltWl3CF1QKkdiIIL86ooFH/uPxBzdgd7ho7TXR3mtieMzmUdq9
      4sgWE2YgNS6MiBCd7Jqe32sAk1GrFDz+4Aa+++xRr9qylggMKqXIl+5bx7q8xIBcXxAEokMN
      bCtORSEKjFrs9A178txWu5OO/pGJz/UPm9m8PEW2+uG24lTO13bJauH0BbVSQViwblEWf/Cc
      BFp6hhEEFrV7ZDJatZKHd76v+bSxMHlRAkBuStSMiqglOfH85q2yRZfKrmjo9sviD56J6tAg
      LSsyYnn9RI1ffrb5aVFkJITz7acP0do7POcpRakQSY4xsrkoma0rUueVBgnoCWAcu8PFD/94
      XPYY/hL+R6NS8NUH1rMmADv/cZwuN2+drOVPBytled2GBWu5b1see9ZkyDrWOpwu/v2ZI37v
      tlApRDYWJnP4QvOip2RUSjGgMxWzMa75dOuG983rh0asfOY/31iQOJoc/vHRLZTMoi31oz+e
      WFSrTK1a6XflU4Dv/PUNjFkd/PrN83T4qG+kVioQBM+UtMOHrkq1SsHu1cu4c3MOUbPUagJS
      A5h2E4XI2txE+k3mRTcWX8IzefqVB9azJjcxYIu/2ebgiRdO8cqxatk7OKvdybmaTlq6hyjO
      jEOtUsz59QpRZG1eAu19I34bONRplPz17as4erEZ0yK5jk1B8sxWDC6y58H24lQe3l04pf1S
      q/EshnLnLnwhLzWKh3cWzpqiSI42sv9sw6LYZYqCQEx4kE+SzvMhuSXu3prLzlXLiAjRMTRi
      ZUiGsKGARzI8IkSHyWzD4XT7vClxuSVq2gY4VNZMaLCW1NjQaX//ixIAwBMESnLicbulgP6C
      LTGVSKOef3p0C4XLvBuP9wazzcG3nj5ImY8787beESqbetlYkDRhDDIbKqWCdfmJaFQKalr7
      FzRvsiw+jH/46GZ6B828d77J5+ssBAmP7tGy+DDaexdHCXNFRixfum8tatX09FtmYjhnqjr8
      ojV/NTqNkq9/ZCNBeg3tvSNUNvdS3dJPS88wYxY7WrWSqDADtW0Di6IKumdtBpebewMyszRq
      tXPjmgw0aiWZiRHsWZPBpqJk4iOCCDFo0KpV6DRKjAYNCZHB5CRHsH1lGg/tLMRqd1Ja0+mV
      j/Jc2BwuTlW2M2KxU5QeM2XmYVFSQJNxSxJ7T9Xx9DXI9V1vZCSE8/iD64nzosXPW9xuiR+/
      eIqDZU0LvtaOlal8/u61sgtYbb0mXnjvEkfLW736Iw4P1nHvtlx2rl6GQhT50k/f9nvRzhsU
      osB//PUNvH68JmA1jnFWZ8fxlQfWY9DOPvvR1DnEP/zi3WmKqAtBFAUe2J5/xeKzhT6TedoC
      Z9CpyE2OYndJOj/58ym/teDOREZCOJ+6fRVfe/KdWb+mODOWiBA9+881kBYXit3pIlinZnVO
      Ak6ni5OV7TR1zZzREAWBnz9+CzFhs7dZjy+947tyh9PFEy+ckj2P4Qvbi1P57F0lExutRTsB
      jCMIApmJEWQnR1JW2xWQ/NsSns6Grz24gfCQhUvGzsXxijae21/ul2s1dg6RHh8m2zErxKBh
      fX4Sm4uSCTFocLncWGyOaTl1URCIDNWzJieej+wq4q9uKSY3NQqlQqS6tY+/HJ7dv3cxkCQI
      0Wv41G2rEEWBy829fi8MK0SPmunf3Fkyb+E9NFhLTnIkJyvb/FKfEPBMV5fVdVHe0MOY1THj
      9+dwuunoH+FkZRupsaEMj1n9tgueTHSogW89to2+YfOEfMhM5KZEkpMcQU1rPzFhQYiCQFiw
      lsvNfZysbOeuzTlUtfTNuPmQ8AwUzpZ7h3H/Yc/i73K7+cVr5zlwvnGh396cNHUNMTxqY3VO
      PIIgBLYLaC6K0mP43md28V9/OsHl5r75X7CELFRKkYd3FXH7hqw5e+v9gcvl5g8HKvzamvnc
      /nJWZ8fP+uySJDFmdXCxvpsLdd00dQ3SN2zBZnciigI6jYrY8CDiI4NZmRVHUrSRSKMOg1Y9
      Y43hTFVHQFtL5XK8opVH9xTxwI58itJj+OUbpV4PJM1GSoyRT962koK0aNk1oPy0aP7lE9v5
      zz+dWFBqSqtWIooCnX0jst9nh9NNVUvfRBHUn8EwJcbI3z60kUijniYZ9ci9Z+rZsyad6qtU
      Vp0uN+WNPcRHBFPfMfPPyZvC7bvnGnn7dGDNeMbZe6aenJRIdqxMu3YBADyKi//y2Hae3V/O
      q8eqAxLtrydiww189q41V6wCA1Psncylpl5au/076NfcNUxlUy+FM0j69g6ZefnIZQ5daJ5T
      vrdv2Ex9xyAnLrWRlxrFvVtzKZpFIviDUo/qHRqj32Qh0qgnLzWK7396F0cuNvPykepZ0wzz
      kRQdwu0bs9m2InXeAvtMZCSE88PP7OaP713i7VN1Xp/W1+Qm4HC6fO7asjtdJEQGo1SINC/w
      90wANhQm8enbV0+ofupkGFmZxmyMmO0kRAZPC8hhwdo5fzYzSYrPRNfAKL9bZOmcp98so3BZ
      9LUNAOBpVfrYjctZmRnLk6+cXTRD6P9LiKLAthWpfPymFT5J2vpKaU2n33fPEnCmumNKAHC5
      3ew/28jv9l7wKi/sdLm5WN9NeUM321ak8uie5VPkBiRJ8tsue6G43BIt3cMTEglKhcj24jQ2
      F6VQ2dTL0fIWKhp66B02zypKp1YpCAvSsiIzlk2FyeRdSXN5gyRJDI1aqWkdoL3XRL/JjMPl
      ZnV2PKU1nXO2iAqCZzJ8ZWYcN63LoGdwjB88f9yr+19Ne9/IhD/1K8eqfLLTTIk18uCOAtbl
      JU6pLyXJTDUeLGviHx7ZfOV3RSA/NYr0hHCCdWp6Z5k61mmURMlQJpUkief2lzMSwHrHTJjM
      Nn6/r/zaBwB4Xzrih5/ZzTP7LrLvTP01H5H/sBARouNTt68KaH//TEiSRG3bwJxfIwoC923P
      w+F0MTxm40BpI9lJkXT0meZsuWzsHEKSJARBwGp38uQrZzm4gC4dSfJ4sFY29fJ3D29iWbzH
      SMM0ZptR6VEOYcFadq1ORxBg35l6BkesPLgjn8MXW3zu+55JRkOpEClKjyE9IYya1n7OVHVw
      uamXjv5RJCTCgnQULotmY2EyiVEhhIdop3R5yMUtSZRWd/L6iRouN/fNu9vXqZWU5CaQEBmM
      WqUgNEhLcoyRhMhgdBoVVruT//zTSb9sEF48VMlTj9/KrpJlHK9o5b3SJmra+ufMGKhVCpan
      x7C9OJWSnIQZT0AhBg0JUcGzprhOX27Hanficks88eJJRs12WntMRIXpMVsdc4r5xUcGy9qM
      tfeNcORCYAv/s3HkYvMHIwCME6RX8+k7VrGhIJGn3ypbmhmYA5VSZNfqdD6ys2BOF69A4XZL
      DI7OrdDpyd9K/OVIFZsKk8lKjCDuisHLXAFgwGS5Mvzi4vvPHfOblEj34Bj/9Kv3+OePbSU7
      KWJBXS53bs7hTwcuTSyUYcFaHE436/ISeMnHovKYdep7IkkSDZ1DvHK0itOV7TNq5ncNjNI1
      MMqJS21sLEzi1vVZJEWHyN4MSJKnV/xXr5dOy3PPhcXu5Gh5C5sKk/n4TSumCbmdqmzzORBO
      u5fNyb7T9dy3PZ8b12SwpyQd05htol10aNSKze6kvc9Ec9cwZpsDlVJBWV0X52u7PO2loXqW
      xYVRuCya4qw4jAYNgiCwIT+JFw5Wznjfyb8f71tYumiWoW8mV2pl3+lrt9l1uaUPVgCA908D
      3/vUTvaerufZ/eVLnUJXUbgsmkd2F5GdFLGou/7JuCUJp4wOEa1aSUxYEMkxRmrbBmQpJrrc
      blxuiV+8ds7vOlKjFjvff+4Y3//0Tp/7v9UqBSNjtikLRNGyGE5dbmfL8hSPN68P9azJzzNi
      tvGbty9w8HyTrOcctdjZe7qe9843cfuGbB68IX/emQqAl49U8fy7FT61ZLvdEocvNHOpsYcv
      37+ewmUecUFJkqb4MfuD45fauHdb3kTnjDFIy+qceJY7XRwobeTNk3VT8vGTv59Ri51Ri53G
      ziHeLW1Er1VRkh3Pvdvy2LEyjVe9GF6Ug0atYHdJ+rxfZ3M4OX6p1W/39YUPXAAYR6NWcvum
      bLasSOHlI1W8faruuncaS4oO4YEdBWwsSPLKwCUQKERxVsvDyYQF67hnay7lDd10DYySmxI5
      72t0GhWHLzSz/1xgWuL6hs385M+n+fQdq3x6vdPlRnNVK+WKzFgijXriI4NJiTH6dHrVqj3v
      Z1uvif945ohPw1B2h4sXD1Vyob6Lr39kE1GhM+eh3W6J59+t4E/vXfL6HlfTb7Lw7d8c5Av3
      rGVzkUfmuqJxdoeyrKQINhUmYbE5qW7tp7Smk5QYI1tXpOJ0udl3pn5CQ2qczr4RhsdshAZp
      Jz53qbGHp14953WB2Gx1cOhCM4cvNnPPllxuWLVsiovcQrl3a96MWkdX09E3Mu37XGw+sAFg
      nNAgLR+7aQW7S9J55WgV75Y2XhPtlGtJYlQI92zNZVNhsk/dHIFAFAViI4Lm7VDp6B/hpUOX
      uX97PtlJ8ow6jAYNz+y76I/HnJULdV1UtfT71GbodkuMWexsKEjydIlYbDR0DPL68RpCg7Vs
      KUrxKQCEh+jo6Bvhn3/93qSUg2/Utg3wracP8q+f2D4tPSNJEi8freKFgwtf/MdxON389KXT
      xIZ7TntzSVvoNEpOXGqjqqWPB3cU0NAxyA2r0vjd3os4Xe4ZvSUsdiemKwFAkiTe9sMwqSTB
      i4cukxJjJMSgkaVfNR+5KZHcNklfaS6qWvqvmRDgOIs+COYrwXoNJTkJ7ChOQxQFWnvmVsX7
      sCMKAqlxoXz85hV86vZVpCeEB7yv31tMY9Y5UzSS5GlvHLU4qGzqxaBV0dQ1jMlsmzNF4nS5
      F8UBrKVnGI1K6ZP4WXVLP3qNCpVSQffgKA0dQ9idLqx2J8NjNq+nWAUBblyTzhMvnKJ7wDs9
      +9kwmW3UtvazZXnKlN+dmtZ+nnjhlN/brl1uiYv13azJS+SNE7PvqGPDg3C5JXqHzEiSRGx4
      EFq1kkuNc7fk3rAqjfBgHX85UsWv3zyP0+Wf5x++0gyw0DN1amwo//joZtk1ucMXmryquwAE
      6VQkxxgZGLESrFeTmRjOmtwEVmbFkR4fhiAIXp0qPlgrigwiQ/V87Mbl/OzLN/PYzStIiAzm
      GqXBA4JaqWBdXgL/9lfb+eHf7GbbilS/GkD4k3V5Hk2euRjvlHBLEs3dwwyNWueVsx0eWxxh
      tI6+ERw+dgFJQHVrPxfruxkenbrgjxvRe4NBq+ZgWbPfRO7GqWzu45WjVROyA3ani/99rTRg
      nt3dg2O8erRKtsdvfGQwXQOjBM1jSyoAOrWK/eca+f2+i37fOUuSJ/WYGmuc/4tnYGVWLN/8
      2FZZqZ9xBnwQANRpVBNGOgadmkijnnfONACw/1wjtV76S3zgU0AzIQgCYcE67tiUw20bs7lY
      382hsibOVnVcG0VHPxAWrGV9fiJ71mSQGht6rR9HFhFGPZsKk3m31H+5+pgww6IIgY0TSL0Z
      b9BplAtqdZ2LPx++zLbiVKJCDZyubKeufe723YWy/1yjpxA+xw59bW4C2UkRSEBrj4m69gHu
      25bHqMXOmaqOabtYvVbF4KiV/33tXMCUQs02B/ERwWwvTuOlw5dlCeKFGDQUpEWTlRTBy0eq
      sNgdKESRCKOelBgjWUkRU+oWk7H5o6YpeYK6y+XG7nB5/d58KAPAZERBYEVGLCsyYjGZbZyv
      6eRoeStVLX1+yekFivGhmeLMWDYWJJOfFiWrqPpB46GdBZyp7vDLex0apKUgLXpRA4BWrcTp
      cl9zYcJ+kyVg7YAWm5O3T9XxyO4ivxY7Z2O+00VFQw8NHYM4XW4sNs8ieKy8lSCdGpVSnFE2
      OSXGyHP7y2cdgvMXJyrb2L4yjf/5yi2cqGjldFUHtW39WGxOXG43ClHEoFWhVSvpHhzDYnNw
      vKKV4xUzd/No1Upykj11geLM2CmpOF9O9pLExOlKIQq4Fvg786EPAJMJ0WvYuiKVrStSsdqd
      XGrqpby+m4v13TR1DS2KxvhcaNVK0uJCKUiLZmVWHJmJ4bJa9T7IRIUa+Js7S/jB88cW9P4q
      RIFP37GKQ3OIc40jCgIP7Szg5aNVjFkchAVr2bMmgz8eqOCuzTkAdA2MzfpHORm3JFGUHuP3
      tkVv0Gk8QSiQUihHy1vYuXq6ps21wOWWZpTymOs0ptWoOL8I1rKSBM++U86PPrubXSXp7CpJ
      x+2WGDF76gROl5uXDlfx3vlGWWk0q91JWV0XZXVd5KVG8Ve3FJOeEA7g09S+acxGWlwYkcYu
      1uUlLvj39v9UAJiMVq1kVVYcq7LicLslTGYbde0DVLf0Udc+SGvPMMOjvk+Cyrl/aJCGpGgj
      OcmRZCdHkBYXhl6rkp0f/bCwLi+BT92+il++ft6n91OpEPn0HatYl5coa4hKFAUijXpWZsZx
      5GILq7PjPT6ogoBGpeSFg5UUZ8ayrTh13rSKxebkxjUZnK/tClhefD7yUqIC7pvdO2Tm8AV5
      MwX+QMDTAuyPYn6kUcfQqHXRRPuau4e4WN/Nyqw4wPP7FmLQ0NQ1zI/+eNxn6fDKpl7+7ql3
      +eStK9lVsmxOqejZsDtdvHqsmhUZcVxq7KXlSgvsiUttuNze/2z/zwaAyYiiQGiQltXZ8azO
      9ljRudxuBkwW+obNdPZ7pikHTBb6TRZMYzbGrHYsNic2hxOny43D6UapEBEEz4KlUSkxaFXo
      NCoijDrCgrREGPXEhQcRGxFEpFFPaJD2mg1qLSaCILC7JJ2YsCCeePGkV+5W0aEGPnt3CSsy
      YgFkH/Hbek0TQ2URIboJGQVJ8qQgzlZ38MCOAlnX8pwg0ufsXAl/atV9AAAgAElEQVQUcRFB
      5CRHyg4AGwuTOFXZjtPlJjnaeKWTSUFseNCc/fAut+S16U2kUU9seBAVjT0IQNKV+8lBAm7d
      kMXz75YvqFtPFARu35jNr98s8/ka3iJJcKisaSIAANS3D/Ivvz20YKMcu9PFk6+exepwkpEQ
      5tM1ugfH6D7XMOVzvqZNr4sAMBMKUSQq1EBUqIHclKgp/yZJEpIEEtKs3QaCAAKC57/XwSI/
      jtPlZmjESt+wmT6T2aOn43ChVIjoNEo+edsqztd0cuJS25xH+ugwA9uLU7l9QzZB+vc7QFRK
      eXlRSfKM5+enRtHeN0Js+NTdlDd6OBqVkod3FVJW27Wo9QelQuQzd5ZwtkqeV3Z8ZDDr8hLp
      GzZT3dLPhoJEWg4Mc+fmHFmpM2+FFjcUJBETbuBSUw+iILAuP1F2AAAwBmn469tW8T8vn/G5
      a+fOzTk+aRstlPKGHhxOFyqlgt6hMb773FG/uaS53RK/euM8n7p9FUE6FaOWwHowz8V1GwDm
      wjNuDiy4M/jDjyRJOJxuSms6OV3VTnVLH90DY3NqnQuCZ1FViAIGnZrkaCPGIA06tZL4yBCy
      kyJITwibseh99dDSXJyv7eRL963j+88f48Y1GYBHTyo3JZJV2fGckFED0KgUGHQqDFo1X3to
      A3/31LuLJj3y4A0FFC2L5ni5PDmA1dnxPLP3IpuKkqlu6UelVLCjOJXWHpNPrafzYdCpuNzc
      R0pMKK1eLPzjuFxudpek43S5+eXrpV7ViAQB7t6Sy8M7C/nZX854dV+VQsQlSbjdEjqNEovN
      SWiQFlEQZKek+k0WBkwWokIN/OTPp+cUfvOV5/aXExMWxKjl2inSLgWAJWZEkiSauobYf7aB
      9843eSWcJklMLKKmMRuXm3spSItmx8o0VmTEztn9kBJj5FTl3Dtil8vN0fIW+k0WfvF6KSNm
      O4cvNONySxwrb0Ehirx8pEpWi2d4iG6iBz0tLoyvPrCeHzx/PGC1oXFuXpfJvVtzEQQBtWr+
      Ha4oCGQkhNE3bCYzMRxRFFAoROIjg7lQ3+3350uPDyNYp0GrUrKhIIk/HvA+AGhUSgRB4OZ1
      mSyLD+PJl8/K8jaIiwji4zetYG1eIgBdg94FtxWZsfQPmzHbHGwrTqOt10RYkBaX201T5xCV
      Mg2o2vtGuNzcx8UAvL8AI2b7NZ8EXgoAS0xBkjwTms+/W8GRC81euRrNhsstcaG+mwv13WQl
      hvPQzkKKM2NnTJ3lpUbNcIWrnpH3pZPHi2DdVz721l0uOyliSifWmtwEvv7wRn70hxM+TQjL
      4e4tuTy8q3Di+48Jn78YmBAVTFVLHw0dg+jUSrISI7DaHPzpvUo+uqeIzv4R+uaRj0iNNdIk
      Q8kSoCgjhr2n67A5XOyJSkchioiCp1vLLc2eGp3M5NNcTnIkP/jMLs7VdHKorImL9d2YrQ4k
      PLt9lUJBQlQwGwuS2LM2g5Ar07SSJPnkAaBSKrhlZRrP7S9nd0k6l5v7qG3t96qQPDRq5eUj
      gbULHbPa0amV10TnLCc58sM3CbxE4HC53Lx+vIYv/OQtDpQ2+mXxv5qatgG+/ZtDfP/54/Sb
      ph+r81KiZh2cCQTr8pOmfW51djzf/fROUmJ8mwqdDb1GxefvWcOje4qmnILS4uYvBmpUSo5c
      aKFrYJSj5S0oFAKVzX24JYkXDlaSEjP38KBKIXLDqmWyn7Wpc4jm7uEJqWmNWoEE3LYxm8wr
      bYxz3k8pEhfxvvKr3eGisqmX+vYBnC43MWFBaNRKVEqRpGgjt27I5LN3lXDP1ryJxX8cyYf+
      n5vXZTJgsmCxOXnrZB1pcaF84taVJMhQox3nUmPvgp3I5kOSPK3Uiz3tr1KIPHrjcgRJutaH
      kCU+CAyNWvnvl04vaj98lFHPF+9dO83+8VdvlPLqsZqA3z8iRMeTX70FjWrmg7DF5uDPhy4v
      WC5YFAWKM2N57KZiEqOnu1BZbA4+859veNU95S0psUb+5bHtfPIHrwV8mAo8dpLf/8xOLFYn
      b5ys4UBp07x1ClEQSI018vGbi6fYmn7tyXeo8WJ+oSQnnn6ThRUZMVyo66a1x4Td6SJIp+am
      tRmz6v9fTXSogZ4h/+gyzUVMmIEVmbHsPV0f8HuNc9uGLD5xS/GHRwxuicDR0TfCN58+SFXL
      4g4JmW0ODl9sIcKoIzUudOIPPjnayP6zDQE5gUzm4Z2F5KVGz/rvKqWCovQYNhWloFKJdPaN
      eBUI1EoFq7Lj+exdJdy7LW/WwR+VUkHfsNmrRc5bbt+QzcqsOKqa+xbFdvW2jVlYrE6+8+zR
      eTvCxpGAwVErh8qaGRyxUJAW7TF2qe3yqvc+NEjDmMVBaU0X24tTCQvRsb4giZzkSE5UtMru
      5nG43LIK1xq1YmKIT6UUcbsltGolGrUCtUqByzX3GcZic/KFe9fS0DFIvynwIojZSRF88b51
      qJSKpQBwvdPSPcy3f3uIrmvkxeyWJM5Vd6BVK8lO9hjc6LUqlAqRsjrfzMTlkJUUwSdvWynr
      6B2sV7M8PYab1maQlxpFkE6NQhQ90sVX8uJqpQKdRolGpcDlcqPTqIgOM2Aas3H0YguvHKti
      7+l6TlW2U9s+wIjZjkHnmSMRBIG4iCD2nWkIyLR6aJCWz95VglatxGjQcrCsye/3mIxOoyQx
      2siv3zyPyex9/l4C6toHOVfTycqsOEatdi7UyS/E9g6ZGTHbcUsSlc19NHcPc6mph/KGHtmL
      /7hEiJz8yCdvXYlBq6a5a5ib1mTQ0j3Mo3uWY7xik9kzODbnxkHCI6x48/pMzlZ1zDgl7S+W
      xYXyj49umVAsXSoCX8f0Dpn5l98eCkiLmze43BK/3XuBIL2anVfy1Leuz5qw9PM3Bq2Kz9+9
      ZtbUz0wIgoBOo2JVdjyrJg0TWmxOzFYHF+q7OVzmkfd1uSXMVgct1un54/a+ES7Ud/MGtShE
      geykCG7bmE1JTjx3bc7hj34waLmah3cVTtRVCpdFsyIjNqDBVRAEvxRPGzuH+NbTB/no7qIF
      X8vbRHdaXCh17QOyAnL/sIWkqBB0GqVH60fwOLp5k9IZHrOyIiSWbz+2je/8/ij1Hf5vDc1M
      DOcbH908RbF06QRwnWK2OviP3x+hpdu/8sO+IklQVtdFbkoUMWEGRFFgVXYc5Q09DPjxWKxR
      K3j8wQ3kJEcueIBPkiQuNfbwkxdP8c7ZBroHx7zawUsS9A6bOVbeypGLLazNS8Q0ZvOrS9T6
      /EQ+umf5xPcqigKZCeEcLGsKmJ+GP687YrZPdDcFqitrJu7YmM2F+m5Z+kz5qVEcudjCuvxE
      FKJIXccAm4tSSIoOIS81iubu+b1L1uUnkhobikGrZvPyFAZHrDR3DftF/kIUBW5YuYzHH1w/
      zatgqQvoOuX371ykepFz/vNhd7j4yZ9PTfgBBOs1/OOjW2TZSMohSKfm6x/ZxOrs+AUv/iNm
      Gz/64wn+9beHafFRG2Yynf2j/PjFUzicbrRq/xzMi9Jj+Pw9a6ZpTyVGh/CZO1b73VY0UAPx
      VS19Pvs2+EJ4iI5txd75cHT0jxCk0xB8Zaq9b2iMPx+6zJ8PXcYsY4bGoH1/KHK8W+wbj25e
      cCdaQmQw3/joZj57d8mMg5dLKaDrkNKazkWRBfaFnsExnn6zjC/euxZB8Gg4/esntvPMvou8
      dbLO5wGt/LQoPn/3mmmSEb7Q0DHI9547FpDp27r2AQTBU0BeyDBabkokO1el8dLhKjp6TZjM
      diQkgnRqYsKCyEwM554tubx0+LJf6g6hQVpiw4OoavFuDkMuJrMNpUJcFDG7e7bmEmLQEBGi
      l2XQM2qxgwRvn6rjS/etQ5I86qX3bssDYP/ZhhklrscRBYHY8OBpn1udHc+KjFjOVLXzxola
      alr7ZTUhqJUKspMjuHFtBuvyEucMZEttoNcZVruTr/98v6yJzGuFKAj8219tJz/t/Q6d8cnk
      Fw9e5sSlVtmLVlJ0CPdvz2ddXqJf/JRr2/r5t98dmfMP2h+olCK5KVETWvTeIieA6DTKKVPb
      vpIQFcynblvFD/9wwqeir1xSYowB78tPiArm9o3ZBOvUHKto5ZhMmY6FEBWq52dfvnnOmpQk
      SfQNm6lo6KG+Y5COvhGGx2wMj1kZHLGi0yjJTIxgY0ESRekxRIXqZZ1yl2oA1xnvnKln/zn/
      OXgFAgnPkXr7ytSJ9MW4C9zGwiS2rUglKlSPKAq43Fda7CRQqxQoRAFBEIgw6ijJiackOwFR
      IWC2OiYE63xN/zR3DfGt3xzyaTLVW9xuieExG1+6by0JUSGMjNlnXVyVCpGwYO2UQCEnQDpd
      7gXtqIN0am7flM1X7l9PbWs/hy7ML0i3EIL1GjYWJVHXFhhHM51GicPp5lh5K8eutIsuhlHQ
      ysw4tixPmfNrBEHAoPXoaum1KroGRmntHaZn0IxbkrA7XHT2j3Kmqp1Ljb30mcxEGvXz+hMv
      nQCuI5xON5//yVt0LKLipa8IAnz7se0sv2pI7GocThcjZo+N4JGLzXMek9UqBQmRwWwoSGJ3
      STpGg0Z2MBi12Pn6z/f73bN3PqJC9Xzv0zsxGrT0DI7R1DVE/7AZm8OFVqMkOtSAJEk8/VaZ
      X/r7EyKDMdscDI/aZnQoU4gCSdFG1ucncsOqNKJCDQD88A/HOXKxZcH3nwtBgB9/4Uaefad8
      Xr0ob9GoFDy8q3CK7LRK6ZF9D7Rt6L9+YjtF8/yeS1c8tX/1eikVTb2yitMalYKtK1J46IbC
      WUUWl2oA1xGltZ0fisUfPB0ybxyvoWjSROjVuNxuzlR18Nz+clmDQnaHi8bOIRo7h/jTe5e4
      cU0GD95QMK8huVuS+PWb5xd98QdPq+7/vnqOv3t4E/GRwRMeCONUt/TxL7895DdJ4d5hM1+9
      fz0JUcG0dA/Tb7LgdLnRqJREhepJjQ0lOsww7XVyUopKhchtG7Jwutw0dg5R0dhDQVo0y+LD
      kCSJ6pY+aubY3UsStPeO8PgDG/jxi6c4Wu6fgKNRKdi9Jh2DVj2lzhAfEcy24lR++/YFv9xn
      JnKSI+dd/N2SxBsnavnd3gteTXHbHC72nWngTFUHX75vHcuveG5MZikAXCdIksQ7Zxvm/8IP
      EGV1XZjMNoyG6dpAo2Y7T756lmPlLT4pKjqcbl47XsOpy+187q6SGf84xqlo6AmYYbscTla2
      c6qynXX5iVM+395r4rvPHvWrnrzd4eKJF0/y7Y9vY2NhsqzXuN2SrFkSpUJEFAX2n25gx8o0
      QCItPpRDZU2YbQ5Zaau+YTNqlYIv37+OzMRw/vjeJVldNrMRGx7E0KiV1yZJj4SH6MiID+OR
      PUXEhgdxoLTRZxewuVApPXo8c+Fyu3l+fwUvHqz0uSV0cMTKvz9zhMcf3EBJztQOuKU20OsE
      i83J5ebea/0YXmFzuCitmT6w1Ds0xjd+eYCjF31b/CfTMzjGt39ziH1n6pkpG+qWJH6398I1
      95N+/t2KKa2QdqeLn750moEA6AdZbE6eeOGU7IXV6XLLNrR3uSUsNidvnqylYFkMAh7jmc1F
      KcTJ6NAaT+8pFSJ3bs7hR3+zm02FyV6LqSVEBvO5u0vISAibVgQ3aFX83SObSIkJRaNS8vl7
      1vqtNXcy923LI38e9dv9Zxt48ZDvi/84NoeLH/3xBPXtUwfMlgLAdcLl5r6AjpgHitKrrBIH
      TBa+9fQhv3YxudwSP3/lLPtnOCFVNvYGrOjoDU1dQ1OE+g6ca/Ra+tobOvpHZIumqZSi1z7X
      aqVHMkMCLtR1UVrTKWsATqOc2skVHxnM4w+u56mv3sojuwopSIvGoFWhuGrGQaNSEB1mYOfq
      ZXzr41t54gs3smt1OrXt03+23YNjDE0KrFmJ4Xz2rpJp11wIO1amTbSJzkZrzzC/euO83zwD
      rHYn//XCySmBfSkFdJ1Q2/bBGvqSS1VLHy6XG4VCxOF08f3njwUkF+9ySzz12jliI4IpXPZ+
      ++n+cw2LZkY+H/vPNrChIAmr3Sl7cV4Ie0/XcduGrHld2gRBICJEJ8tOM0SvJiMhnE1FSew9
      XU9JTjxBeg0KhYhbkubtuokwTn8WQRCIDNVz5+YcijJiudTYQ3VLH33DZiTJYz+anRzJ2twE
      4iKCpqRAYkINdA9MVfw0aFRTbEoFQWBzUTIKUeBnfznjlTnStGcFblmfycdvLp7T6tLtlvjd
      3ot+70Jq6zXx1qk67tmaCywFgOuGxs5rZzu3EExjNkxmG6FBWl4+UhXQXa/D6ea/XzrNf31u
      D3qtijGrndJaeWbti0FZXRdmq4PTl9v9KhcxG2NWB++db+SerXPvVMEzXTxfALA7XVQ09hKs
      V/PSoSpMZhtnqjpIijYSGqTF5ZYwzSHWNm5MP5nx+ZDXT9RyurKdEbNtWsCu7xjkxKU2ntl7
      gcToEHauWsaOlWkE6dQ8cEMBte2HJ1poRVHggRsKpvXkC4LAxsJkkqKN/OwvZ3waeAsL1vLY
      zcVsKkyedwq7oXOQc9WBkWZ/9Vg1t67PRKNWLgWA64VATK0uBla7k8ERKzaHi5cC7M4Envfp
      5aNVfGRnIS3dw4vS8y8Xl1uirK6LYzK8jv3F8Yo27tqSO2+KZ0VG7LytmW63NC2l19k/Krt9
      NTJUT2LU+34KgyMWnn6rjOMVrbL0h1xuieYuT1rl5SNV3L89nxvXZvDdT+3k4PkmBkwWRFEg
      NjwISZJm7D5LjjHy75/cwanKNv58+PK0nPqMz23UccOqZdy8LlO22dGRCy0BqzsNjVqpaOxh
      VXb8UgC4HnC7Jb+bjexYmUakUY9SIXDqcjv17YPsKUlHoRD9LjMxOGrlQGnjgro9vOGNE7Xc
      si4zoPr8vlJxJb2xWNS1D2Aas827cK3NS+CZfRcD+jPaXpyKKApIkieQPPHiqTlPDHPRb7Lw
      5CtnOX25nS/cs5Z7t+Xxtz9/h/beEd4738SDNxTw4I78GYOAUiGysTCZDQVJtPWOUFbXSW3b
      AL1DZoZHrQyP2bDYHATp1BQsiyYvJYrwEB19w2aUCnHetmMgoGqtAGeqOpYCwPWCyy3P2MIb
      gvVqXjtejcPp5v7t+TR2DhEarEUhCoiiIGtQRS5DIxbeXcTp5VGLneMVrX4ReQsL1jJmcWB3
      ujBoVROpBYvN4ZMP7IW6bq8Gk8KCtdy3LY9fvnEet1vi5nUZE6Jgb5+qk5XPbu0xzRsAIkL0
      bCpMZt+ZwLha6TRKthenIUkS+8818NQr5/xiGHSuppNv/PIAt27Ior33/RTWobIm7tuWh1Ix
      +8lHEASSokOIjwyisqmXd8810j9sxnKlpXV4zOaZKp4kJxGsV5OZGMGmwiTWFyShn0GgzWJz
      yDqxby9O5b0r7cnr8xMZHLFSsCyasGAtgyYL75Y2zrrxG5fUWAoA1wFutzRji+NCEAWPrLAx
      SMvAiIXEqBDae0eQkEiNMdLQ6b8unbK67kWVAgY4XdWx4CAmCPDR3UVUNPZyoLSRxOgQ4iOC
      yUgMp7ZtwKfZgvY+k1ddISU58fQNW0iIDKa1x4TRoOX5dyuIDQ9i64pUWae1gRm8m2fioRsK
      OFbesqAi6WzctiGLuIggTlW28+TLZ/26oWnrNfGbt8qmfC4uPGjePL3T5eZUZRt/eq9Sdlfa
      iNlOaU0npTWd/HbvBW7fmM3N6zKnBILhMZssiQ6tWklMmMe2Mj0hnN/vu0hVSx8P7MjnxUOX
      53xtv8mMJElLbaDXAyqlwu/SvwigUStp6Rlm3+l6VmXFkRJrJDU2lOKsOL/e6lqkYqqa+xhZ
      oLBZTFgQFY29xEd4+turW/o5XtGK3eHiiI+6Od7G8UijgQOlDay4MuimUookRoWwPD1Gtt+t
      XDG68BAdj91S7HdZ6LS4UO7ekktH3wg/fel0QHLjVrsTnVpJVmI4GwoS+fSdq+ese/QNm/n3
      Z47wgz8c97kleXjUxjN7L/LVn+3jYn33xCZN7obtfG0nKzJjiTLq6fXSu9jlknAvBYDrA1H0
      CEn5E7dboqKxh+auYdyShEGn5tl3ynn2nXJZOU5v8MYQJj0hbMr981OjJoaEUmNDiTLqZV3H
      bHMs2CltbV4Czd1DuCSJiCutlLdtzObNk7WLMlgWE2YgMSqEHSuXkZ8WhQCoFApWZcURHxnM
      2Sp5XSbeqKjuKE7j7s25Pj7xdKJC9Tz+4AbUSgVPvXouoLo8FruTm9Zl8vWPbCImbOahNEmS
      KG/o5mtPvkNpTadfevQ7+kb41tMHee14DW63hEYtb8PWPThGpFHP8oxYyrx0ztOqlShEcSkA
      XC9Ehcpb+OTy1qm6KTvDFw6+b2X4xwP+szUUBE8NQy47itPYVpwKQFxEEB/dU0SwXo0gwObl
      yWxfmSr7WqNW3xcbQfCcABIighkasbIyK4681Cj6h80LCix6jQq5G+zlGbH89u0yXjp8mZOX
      2kmOMWK2OXjlWDW1bf3sWZMu6zrhwXPPAUxGFAUe2V3E3VtyvB4Ou5qoUD3f/NhWEqNCOFPV
      wcUG+b7AvvL8uxWzymNLksSZqg6+8/ujfnWpA0+H0q/fPM/v9l7AaNCilWFXKkmejp5l8WF0
      D3p3Aoi7cipdkoO+TqhrG6DWjxOtV+9gXa73P/anaUewXo1WrZKtWZ+REI5KqeBycx8bCpIY
      GrVS3zFIkFZNkE6NQauiuqVflnRBiF7j8yBOWLAWp9PN8UttNHQMkpkYTm6K5zSSmxKJQhRl
      p2Amk5cWxeiVovJ8DI5a6b8yL9DZP+IRw+sawmJz0tJjwmpzzjsdLgAf2VWIwYtTnSAILE+P
      IT4ymIrGHq8EzMbvuTYvgb9/ePOEgc/PXz3r9SLnC2NWB0lRIaTGhU77t7r2Ab733LGA1DjG
      qW7pQ69VYXe6ZBWCO/tHaekZnvJz7OwfnTdtt2Nlmud0vOAnXuJDQXpC2LV+BJ9IjQ2lf9ji
      lQFLS88wyTFGQvSaiS6I1Tnx2J0uFAqRzKQIKpvm10XKTIqQnSa5msERK6cue/ri3ZLE214Y
      hM9FTlIkNrtL1iDS5F2qzeHyBLNJG1c5k7sx4UFEzpE2kyQJq90TSIZGrYxZ7TicbpQKkehQ
      A//06BbeOdvA8YpWWQtnXEQQj91czKrsuIlJ2e7BMSoae+Z9rb94t7Rx4hQ5zojZxg+ePx5w
      aWgJeGbfRTbJFOIbtdinPdN8pxMBT3MALHUBXTfkp0UjCoJs0a4PCvlp0Z7hIS/qwBUN3Tyw
      o4CqZs9uSsCTDz9a3kpn3yj5aVGyAsDKzDifA0CgyE6OIFivDpj14tWsy0uYlo82Wx1UNvdS
      VttFTWu/RztnjgCt16pQKxXotZ6AYdCqEUUBh8OFVq0kMlRPRkI4yzNiyEuNmjaFe6Guy296
      OHKobetn1GKfqCVJksRv3ipblBMIeE7Q52s7USlFWQNu3lKwLHrCa3gpAFwnRIcaWBYfRt0M
      4lcfZNblJtAzOCq7E6i+Y4BRi4P23hHO1XSSFhcKgsD5uq6J7z3EMH86QxQF1uUn8vLRKnoW
      6Q9/PjQqBQXLoslKiuDZ/eU+WUV6g1qlYM+aDMCzKFW39PFuaSPHK1q9urfZ6sDM+7t/u8NF
      QVo0u0qWsTo7Hq16bpc2OcF6MmHBWgZHrOi1KowGzynQandOuMHNN6xmsTlp7BykcJlHp7+6
      tX+i336xGB6z+cXC9GoUosD9298fcFsqAl8niKLAhoLE+b/wA0RiVAjJsUZyU+aWzJ3MuWqP
      1MDbp+uw2p1cbu5jwGThQt37BcSTMtykEiKDCTVoWJ0d7/2DB4j1+UloVEqC9RpuXZ8V8Ptt
      KkwmPjKYM1XtfOOXB/jGLw/w7rnGBQcel1viQn03P/zDCR7/n3c4WNaEa466kbcyJntK0hGA
      +7fnY9CquG2D5726bUM2Kpmy0ZOD/stHqq6JHPj4ydWf3LAqjYJJXttLAeA6YsvyFNRK/+8q
      AsWeNekoRJE1udPTEIGmJCcBhUJkT0n6grtZ/IEoCOxavWzi47u35pJwlTuYPzEaNGwvTuU/
      fn+Ef/vdEaqa+wKShmnrNfHEC6f44k/fpqKxZ1r/uyRJXsuYq1UKblybwanKNuraB3E43azM
      isNktjEsUzrCdOWe3YOjfreflIvN4WJzUYps/aD5yE2J5BO3rJzyt7QUAK4jokINbCxMutaP
      IYtgvXrCKDs0SDuvbZ4/USpEthR5inCpcaGszvHvYJsv5KZGkpMSOfGxXqPic3evCUhAFwRY
      Fh/Gd35/ZNEWv9YeE9/89UGefqsMm2NhJ4yoUAN5qVE0d3nkDt45W8/tG7N9mrw+dan9mtbN
      WnqG+KdHtyw4COSmRPL3j2yaZmyzFACuM+7dlocmALlFf3PHxuwpv/R3b8n1+4TpbKzKiiMt
      /v2uqYd3FV3Tk5MoCHx0d9E016u81Cg+d/car92w5kOS4HxtF+YA1xiuxuly88rRan71xvmJ
      1lFBELweLGzvNfHrN8/zwI58RFFgzOqguqVPdisxeFzBAC7UB372YC4qm/qICTfwg8/sojhz
      dtvS2VCIAjety+CbH9s6o7XqUgC4zkiIDObWDYHPHy+E+Ijpz1iYFr0o+XiNSsGDNxRM+Vxq
      bCh3b/XfdKu33LQ2g5zkyBn/beuKFL76wHr02umiYh9W9p6u53vPH2PsyiDe+NCSXFp7TAyO
      WDlZ2Ub6lUDe2jPs1TXiI4KxO11ev87fjFrsdA+OER1m4B8f3cLfPrSB9PiweTdDCtEzi/Ht
      x7bxqdtWTQgATvu6pUGw6wtBEMhMjODEpbYPpEWkQhT40n1rSY6ZOogjCALZSREcvtDsd5ek
      yTy8q3BGM/TclEiqWvoWrRVwnMzEcL5477o5O0KSoo2sy0ukuXvI5ynjiBAddodrUdst56Kj
      b4TqlveH+Wbyhp6NcQP3vmHzRE+8N8quGpWCh3cV4XS7eU/FAa0AACAASURBVOG9Sq8LwDeu
      zWBo1IrZ5qAoPQan2016fDg9Q2PEhBmICQ/ySp59RUYsyTFGRFEgOcbI7pJ0VmfHExMWRLBe
      jV6jIsSgIT4ymPzUKG5e53Ecu31jNjFhQXN2WC21gV6H6LUqvnzfOv75V+/5JEkcSG7bkMXK
      WcTkYsKD+MK9a/nes8dkTcJ6y6bCZO7cnDPjvykV4sR71hoAS8qZiDR6dHDk7O4To0L49se3
      caqynT+9d4nWHtO8uWtBgITIEG5am8Gxilb6/SxvsFAqGnv58YunuGdrHgIsmjVnSmwoxiAN
      PYNjPm02YsIM7FmTzrPvlJMeH0Z1Sx8lG+Kpaetn5+plvHR4bqXOq7l6xmJ8E5eZGDHxudkM
      bOZjKQBcp2QlRfCpO1bzxAsnr/WjTLAqK46HdxVN/CK7Jcmjre6SUKsUaNVKVmfH89m7S/jv
      l077dUhmdU48D+0s4MjFFpo6PTtps9XuyUHr1SREhpCZGM7ffmQj3332qKwp2oUwroMzLoUg
      B5VSwaaiZNYXJNLUOcSZ6g5qWwfoGhjFYnPgliT0GhWRoXoyE8JZmR1HdlIkv3it1Ote+8Xi
      xKU2YsKDSE8Io06G+5Y/uGFlGsIChiatNie9Q2Msi/Okn1xuicMXm3l0z3Jq2/q9bqOVo4Xl
      y+IPSwHgumbbihR6Bkd5/t2Ka370z02J5HN3r6GyqZdzNZ3UtPbT3mfypCXwFEINWhUpsaHk
      p0bx6O7lvHioUnZb31wE6VSMWex8+ad75z1Z6DUq8lKjGB6zBUwWICspgq89uIFoH3vAFaJI
      ekI46QnhSJKE2y3hkiSQPPMgk4vGB0ob2Xumzl+PHhBeOVrFxoLkRQkARoOGDQWeTrmFFP6P
      lrfywI78iTpGffsgu1enTzGHkcvVk9H+ZCkAXMcIgsB92/MRRZHf77t4zZ4jMzGc/LRo/uEX
      787pD2u1O+k3WSit6UQhCkSE6FEpHQs+CYxaHLLN5s02B2cDZNatUorcsTGb3SXp9AyNUdnU
      y4jFjtstoVUrCQ/RERceRHxUsOzZBEEQUCgEZlrKBkwWfvl66TUP/vMhSR4rzKhQ/YIluufj
      nq25hBg0gGeeQK9R+WRGZHe6qG7tY09JBq8eqwE8qRxfhBLDgv0zBzATSwHgOkcUBO7dmktk
      iI6nXjsXcHmBq9GqlfQOjfHiwUqvXudySxNqmgatiugwA92DY/OO+StEgcToEIZHbV4JzM2F
      Vq3E6XIvSAVVr1WRkRDO8Utt/GWOyVNRENBplBQui2Z9QRKrsuII1mu8vp8kSfz27QsBVbb0
      J0OjVjITwxkatQZEHwc8p9Bb1r3ffabXqogK1U/YJ8rlSHkL4PHdNVsdEymcIxe9NwFSiALx
      EYEb+BMkf3sFLvGhpa59gB+/eIoWL3/hfUGtUiAKAjaH0y870BC9ho/dtAKdRkltWz9tvSOM
      mG243JLnD9moJy0ulNyUKN46VedX71qVUuSuzbnYnS5OVLTK7hSKCNEhCgLDYzafi9rBejW7
      Vqdz56ZsjF4MC1W19PGPvzjgF1/dxUKpENm5ehl7T9f5/dQSadTz75/cMa3m8qM/HOfwxRb/
      3swLokL1PPmVW1AFaA5lKQAsMQW7w8WfD1/mlSNVAekQEgWB5RkxEzo9/kSpEPnivWvZXDS9
      jVMQBCRJ4n9fK5Xlg+vLvf/2oQ2U5CbQ2jNMTesAbT3DDIx4JJIFBLRqJRFGHYlRIagUInvP
      1PvtPTBoVTx2czHbV6ZOyCjPxXd+f0SWJtIHjRtWppEQFcIz+y74LQiEh+j41se3TShkTuZY
      eQvff/64f27kA9uKU/nyfesCdv2lALDEjHQPjPLy0SoOlDZ5NUE5G6IokJ8axd1bcjlX3cnr
      J2r88JTTUSpEvvmxrdOkIyRJ4kBpIz996XTAct5BOjU/+uzuOTt3JEli35kGnn7rvN/TbQKw
      Ji+BL9yzds7p2daeYb74k7evicDZQlGrFPzsSzdzsb6bX75euuBNSmpsKF97cAOJ0SEz/rvZ
      6uCvvv/qNUuV/fP/28KqAA5ALg2CLTEjQTo1q7PjuXFNOpFGA3ani6ERq1eLhiBAUnQIO1el
      8anbVnPXlhxq2wb43d4LAXtutyRRVtfFxsKkKT7IfcMWvvvc0YAOkdmdLtp6htlSlDKjeJ3T
      5ebZfeX8bu8Fv7qmTaa9d4Sz1R0UZ8YRrJ85CLx+vIaKxg9m2+d8uNwSYcE6bt2QxZrcBNp6
      TT7Jdes1Km7bmM2X719HeMjslpcqpYKhURvVMuXI/UlqbCj/76blARUjXDoBLCELSZIYHLFS
      3z5AXccg7b0mugdGGbM6sDlcqJQiOrWSsBAd8RHBpMaFkpkYTnxE8ET+cnjMyhd/8rZXU5C+
      srEwia89uGEi9fPUq+d469TitDv+/SObWJc3VXrb5Xbz27cu8Mqx6kV5htjwIP7jkzuIuMrN
      y+508fkn3vJaYvmDRGJUCP/9pZsQBAGXy01ZfTcvH6misql3zsAqAMEGDcWZsazOjkcQBCw2
      B5IkodN4vAOSoo0E69VTcu69Q2N86ad7A+4GdvWzPv7QBtnOYL6y1AW0hCwEQSA8REd4SAIl
      uQk+XePlI9WLsvgDHC9vpXpDPzkpkfSbLBwsa1qU+wK8crR6SgCQJInXj9fy6vHFWfzBo6H/
      nWeP8q+f2D5FB6atx0T34Id38QePv3HvkJnoMAMKhciqrDhWZcXRN2ymprWf6pZ++obNjFnt
      KBUieo2KEYvHsnLUYufwhWYOlc3ckSPgqQlkJ0eyPj+RVVlxRIUaeGBHPr964/yifY/FWXGs
      zwu8f8dSAFhiURi12Nl/tmHR7icBLx2+zN8/somTl9oWtb31cnMvLd0eX2LPx31+LVrKpbZt
      gF++fp7P3V0yMSla3tDzge/7nw+XW6KyqXfaoFykUU+kUT8xyGV3uDh+qZUXD1bS1muS9X1L
      QL/JwvGKVo5XtBIapGV7cSo3r8uktKaT87XyNYl8JSxYy2fuWI3CzyqvM7GkBrrEonDiUhsm
      88Kndr2hrK6LfpOFU5Vti3pfj5yyx5nMZnfy81fOBqx3fT7eLW2YcEkDFs1LONBcbp69hiFJ
      EmW1XXz1Z/v4rz+dpLVH3uI/E0OjVv5ypIov/vRtUmJDiQ+gCQ94Zkq+cv96n6fAvWXpBLBE
      wJEkyWPsvsjYHC7OVHV4LSEgigLuScVuURBQiIJXPfPVLf1IksTbp+u9HiTyJ5IEv3m7jMJl
      0WjUStoXScgu0LT0mGYUQLPZnTy7v5zXj9f4tcvJbHXw8pEq4iKC0KgUAWkm0GtVPP7A+kU1
      P1o6ASwRcJwuN3Vt18aM/uSlVq9H+W9dnznl442FSTyyp8ira7T2DGOxOXn5aJVXrwsErT0m
      Tl1ux+l0T0xPf9jpGzJPO1UNj1n5t2eO8MrR6oC1uHb2j2J3uKY5ay2UqFB9wFs+Z2LpBLBE
      wLHYnPQOe7fw5KVGsSorDkEQOHKxmcbOIf7qlmIGR62IgsArR6uwy0ir+NLuOLl9FDxdJyNm
      Gzq1Unbf+ZjVwcGypgk9+mvNq8eqKVwWHbD2U4D1+YkkxxhxutwcLW+haFkM7wSo7jNqteNw
      uSZ8EobHrHz76UPUdwReME4C3G6JNTnxVDb3Lag7SKkQ2VyUzMduWuE371+v7r/od1ziumNw
      xOJ1DnZdXgK/eesCCoXAQzcU0tQ1xKjFzp8PXWZ5egx5qdGU1c1fkFvogmcM0mAy26hs6mVV
      djxHy+XJAjhcbvae9p/cxEKp7xikqqVvSmrL34QFa3n7VN2EQmtksX6eV/iOze7E5ZIm/v/7
      zx1flMV/HLvTxeWWPr76wHou1nfz1qk6rwYmBcETMO/YmDPF63mxWQoASwQcbwugOo2SgREr
      bknC7ZRwOF0IeNpQV2XFUZgew2uL1FK5JieB0CAtK7PiiAjRyQ4AFquD1kXsG58Pt1uaUgwO
      FOvyEzFbHbKC80JwuSUkJCRJ4tdvllHR2BPQ+83EiNnOr988z3f++gY+squQExVtnKvpoLa1
      n6FR25TUo0alIMSgITnGyPL0WDYWJhFpDFyAlMtSAFgi4KhU3pWabHYXQZPSMEqliISEw+km
      KTqEjj4T/cPyUis6jdLrFtDoMAP3bsujo2+ESKOe594pRwLu3JRNkE4t68j/QRRZW4wOoLr2
      AUbG7AFvu1UqRERB4Gx1B/vOXruTVmuPid/vu8in71jN1hUpbF2RgsvtZsziwGJ3YHe4UCkV
      aFQKgnTqgIm6+cpSAFgi4IQFeVQv5TosuSWJgRELe9ako1Epae4aBglMZhsvH61md8kyNhcl
      c0SGSmNiVAh9w2avBtB+/OKpif8/XvG+gcfLRxdvkCsQ9AyO+exyJQcJT3F2PAWkUSnYsTIN
      q93B8Qr/tuJqVAocTjdPv1UW0LSWHPadbWDHyjSykz2pHIUoEmLQTPgKfJBZkoJYIuDYnS4+
      86M36BuWb+Yh4PEAdrnc9F55nVatnMizyt2J71mTzvCojZOLPAugUSuw2X1vFVyZGUd2cgSi
      +P/bu+/wOOpzX+DfmdmqXa12VVe992YVS7bk3o2xjQ0hEFPDkzhOgJRzT3JSOIfc+4SQdshJ
      Oc8hwL0hhJZAIJhijAvuvUmW1WVVq7eVVto+9w/Ji2WrzFavvO/nP0vemZEw8878fm9hsO9s
      E7oH9VhdlAizxYbDlxzvKw9MrDszcH7U4VykYg4myxeD5QNkYkjFHGw23i2T226kDVbi7sWp
      eNmL1bmzyU+JwE8fX+H0aMbbhd4AiMdJRBwStGqHAgAP3NKv5sZNNqGZF5nxoWAYxqsBQMyx
      iA5VocnJTclglRwpMRq8uf8yGGZyuYNlEBYUAJZlwDBwqrCJ5yfmB3iqIO/m3Pgxg3nOAT3O
      Uitl+PCE+9t6O6uysQd1bf32t4D5guoAiFeUZjnXP8gVUjGH3KQILMyI8mqKXWlWNFROTOm6
      Lj4iCJVNPYgJU2Hb0gxEaJSIC1ehrUeH3qExRGiED4q/5djaW3vez0fDegO6faihnY3n8dnZ
      Jsy3BRUKAMQrynNiZ+1R7wkFqROZOwqZBHctSvHKOUUci23LMu356c7QG8wIUsrQ0avDpYZu
      RIUGojAtCgmRakSHBqIoPdLpY6fFhDj9WV8yMDIOX7vVnqxqn3czFigAEK9QyCVYW5zktfMx
      DLB9WYZ9TXZzWTpiwqYf+uFOa4uTkBylQZALG4ANHQPISQjHwsxoZMaHwmK1IUAmxuufVeLP
      ey4hVOVc+qBYxKI4I8qj/eW9gQFgNvteltXIuMnpZb/bhQIA8ZptyzIQHDjz8A13WpQVM2U9
      NkAmxpPbF0LiwTS8uPAgPLwuDwzDzDoVbC42G49XP72I/uExVDb14GJDF3bfMEfA2ZkCwSo5
      kqI0iA7zbEMzTwsOkns0m8kV9e3eHxzjCgoAxGuCFDJ89a4FHn8CDVbJ8dW7Cm75emZ8GL6+
      pRDcNNO6XKVRyvCDHeVQTC5zJUaqXTqe2WJD47VBtHQP35JFMzTq3EyFpEgNpGLO40NGPC0+
      3PV9DJZhILqh3TLHMvZ/F9NNcxOqpev2Nf5zBgUA4lVL8+Ox6aZma+7EMMB37iudsZ3umqIk
      fH1LEdwZg0JUcjzz2LIpS0wJWjWkLuwDeEJ2YjgYhsGqwsQpN7/5JEAmRnZiuMvHyUoMw9P3
      ltj/vH1ZJjaUpkClkGJZnvMBsteBTDdfMD//FZB57bGNC7CqMNHtxxVzLL59XynyU7Qz/h2G
      YbChJAXPPr7CLaX4OYnheH7nGiRHBU/5ekhQANJifWfDlWMZ5CVN3DjDNQosy5+fbwErFsRD
      JHL9tiXmWOgN5ompYiwDhUwMlmHAMgykLnT6HHew8+ztRgGAeJ2IY/HktoW4d1mm25ZjAmRi
      /GDHEqwsEBZYFqRo8cKT67GhJAViJ24oaqUMO7cU4dnHl8/4tuGJIOeslOhgxEZ8sXRyz9IM
      lzKVbgeJmMP2ZZng3ZRpc+pKO0ozo5EeF4rqFve0ybhdg3+cRQGA3BYcx+KRDfn4tx1LXNow
      BYCCVC1+8811WJjhWC91lUKKXfcU44/fvQv3Lc9CbLhqzqUhEcciMz4Um8vSIOZYXKjvQlvP
      MMyWW6t+F2fHIDTIO5vec7m7LG3K3kt8hBprinwnQAmxbWkGwtQKiN0UuPTjZkjFImQnhKGq
      2fG24dORS+dXbe38ulpyxynJjEZOYjg+OVWPvWeabqn+nU1oUAAKUrWICgnEwQvNkIg5hKrk
      iNeqEROmEvyEG6FR4uH1eXhwTQ76hsfQ1j2M7kE99AYzugdGcaGhy97X32K1obqlb8oTI8sy
      0ChlWJCqxcqCBGTFh4HjWMilYmxbmomXPjzv2C/FzRIj1SidZsD4V9bk4mRVBwZGfGNmwWxi
      wlTYWp4OYGLPxVVWGw8rz6O5ewiJWjWsNhvMVht4nnephbi3stzchXoBEZ9hslhRdbUHZ2uu
      ob5jAD2DeoyOm2C18pCIOagCpAgJkqNnUI+hUcOsRTeaQBnKcmJx9+I0p+a4Do6M49U9l3Ck
      otXhG0JabAge37gAWQlhMJos+MGL+3C1c8jha3AHjmXw7OMrZhwzeKbmGn7+1yM+XcDEsQx+
      9rVVyIwPAwA0XhvA9/6w9zZf1fS+tDILD611bHrc7UQBgPgknudhMlthsdrsFZ8Vjd14dc8l
      h94SJGIO60uSsWNNLuRSsaDzHq1sw0u7z7nUwEzEsbhrUQoeXpePq12D+MlLB2GaZpnI0zaW
      pmDnlqIZm5TxPI+3DlThrf2XvXxlwjAM8NiGBdi6JN3+MxhMFjz63PsODWDxlh89tGTaty1f
      RXsAxCcxk9kYCrkEAVIx3tp/Gb9687hDN38AMJmt2H2sDj/803509s/+WRvP4+0DVfjN28dd
      7l5psdrwwbE6/Pz1o4gMCcRjG/Ph7frb9LgQPLohf9YOlQzD4P6VWVjqQuqjJ60tTsLmsrQp
      P4NUzCE1JniWT90eLMu4JUXVmygAEJ9msdrwPx+cxe7jdS5Vf17tHMK/v3IQ1/pGpv0+z/P4
      24EqvLn/slOdNmdyvq4Tv3j9KFYWJGLbskz3HXgOseEq/HDHEkFvPRzL4sntJS71GPKEspwY
      7NxSDO6mmgWGYRze8PeGjNhQKGRz/759CQUA4tPePVTtttm6PUN6/PyvR6dtUXy0shVvH6xy
      y3ludvlqL17+6Dx2rM3FfSuyPHKOGyVo1fiPx5ZD48CGpEwiwvcfKPeZN4G1xUn47v2LZyxY
      K8+Ng9yFfH1PWFOcOO/mAVAAID6rvq0fbx1w79p0a88w/vLppSlte/uGx/DiB+c8Ollq/7mr
      OFrRiofW5uJ79y/yyJMiyzAoy4nF8ztXI0w9fW3CbGRSEb57/yLcu9x99RnOeHB1DnbdUzxr
      36bQoAAszon14lXNLlglx6Ls+bP2f51vhVBCJlltNry2t8IjN+W9ZxqxoTQFCVo1eJ7HG/sq
      MTLm+QHur+29hIWZUVi+IAHJUcF4cfc5VDR2u+XYwSo5Ht2Qj6V5ceBY55/rOJbFw+vykBkf
      hj/+4zQGnew75AypmMO2ZZlIjFTjvcM16B3Sw2rjIRVz0ATKER2mQm5SOBQyMRiGwbalGThS
      0eITxVdby9OhkHm33bk7UBYQ8UnVLX340Z/2e6zr45riJDy1vQQdvTp85/efei1D54lNBdgy
      mc/O8zwqGrvxt4NVqGrudWrvQRMow/qSFGwuS3P7vIWRMSP+vOcSPr/Q7FJu/FwYAEFKGTSB
      MnQNjM46UF4sYpGXFIGVBQkozY7B659V4v0jNR67NiHiI4Lwq11rXWohcbvMvysmfuFoRYtH
      W/6erbmGMYMZ+85d9Wp65r6zTdi0OBUcy4JhGOSnaJGTFI72Hh0+v9g8WVmsm/GGy7IMVAFS
      LEjRYlF2NPJTtAgQsNHrjMAAKZ7cthCbFqXi3UPVOH65za3/TViWgVohw8i4EcN6g6Aup2aL
      DefqOnGurhNJURp8ZU0uTl/pwLX+6Tf3PU3Msdi5tXhe3vwBegMgPojneTz9X3vQ2uPZ1rrP
      71yN3/79lMOppa763dMbEK+duV10z6Aen51txLHKNnTckLWkCpAiLzkcS/PjkZ0QhkAXxk7O
      xmCyoHtQj6GRcQzrjeB5QCbhMG6yoLKxB5ev9rj0O1MrZShKi4RCLsH+c03QuzA3mGUYLEjV
      4vLVHpjM3q+zeHRDPrZ7MbvL3eZn2CJ3NL3BjO7BuW8wa4uTEKySw2rj8d7hajy4Jgcmsw06
      vRH7zjXNuWxxob7L6zd/AKi82nNLAOB5Hm09Orx/tAZnqjugm2ZPQjdmxNHKNhytbINCJsai
      7BhsLU9HXESQS9knPM9jZMyEs7XXcOxyG2pb+6AfN0/7tC+TiBAaJEdReiTUShl0eiM6ekcw
      MDIGi5WHzcaDnyzdu95zPzBAiqjQQGTGhyIrIQxpMSH4/GIzXvrwvMt7PDaex/m6ztuSEbRu
      YTK2Lkn3+nndiQIA8TmDI4Y5b94TN6IAvLn/MiRiDjYbD6uVx98OViEjLhSrixLnTB89UdUu
      +JruWpSCszWd6BnSIz8lApebenB3WRpOVLWjZ1APmUSE+1dm4bW9FXOu5Tff1BbCYLTgb59X
      4Z9HawWvtesNZuw/dxWHLrZg/cJk7Fibax9G44jhUQP+caQG+842YXR87o1wg8mC9t4RtPeO
      gGUY5KdE4Nv3lSI2XIWRcRMMJgusNh4MAKlEBFWABEq5ZEqA2neuCS+74eZ/o3GTBTKJCDYb
      75UlvbXFSfj65kKXNtx9wfy+enJHslhtc641G0wWjI6b8PC6PMSEqaYMCK9p7UOwgIZh3Q42
      nlu3cGKmcVKkBizLICwoACWZ0QCArIQwxGvVgp7E+24YGnKtbwQ/fvkA3j1U7dRGq8Vqw0cn
      6/HDP+1HmwNLZharDfvONeHJ336C94/UCLr538zG87hQ34UfvbQff9lbAaVMggStGslRmonR
      k6GBCAyQTvmdNF0bxMsfnvdI7yGDyYKynFhB/+2dxXEMHlqXh11biyH24HhRb6EAQHyOTCIS
      9GS1+3gd3jl0Bcvy4qBWfrEeLp18I3Ano8mK9l4dkqM19q/pxowIkIrBMEBSlAYN7QOCjnV9
      aEhHrw7P/r/P0dAh7HOzaekexjOvHBQ0lNxgsuD3757C7989Dd2Yay0vgInOmntONeD7//MZ
      WrpnDkIWqw0vfnBu1iwfV52u7sCPH16KRR7oxxMdGohnHlmGL63IuqU6eb66M34KckfRBMrm
      HNKikImxuSwN6bGhYBgGJrMNwSo5ynJi8eVVOThW2TbneaJvGOEoxLHLbSjLiZ0yM6CxYwDZ
      CeEwmiyCn+DFIg6j4yY899ej6B7UO3QNsxkcMeDnrx/F8CzZNDq9Ec/99Qg+v9jitvNe19E3
      gmdePoC6tukHo5+oakNNq3sGr8xkzGjGnlMN+MGOcvz44aVIiXa9Z5BaKcOOtbl44cn1KEj1
      rXYZrqIAQHyOTCJC3ByDv/UGM45VtmHMYMbfP7+CMaMZ7x6qRkvXEN4+cBntvbpZP88yDArT
      HPuf2Wyxobq5Fzk3NPyqau7FvcszcaG+S/Bx1EoZXv7w/JzX6IyeQT3++N6Zad+ATGYrXvj7
      SVxqcE/x2XSG9Ub8n78cRutNbwI2nsd7XsrXP3a5DUOjBpRkRuMX31iDZx9bjkVZMQ5NQGMY
      IC0mGE9sKsAfvrMR96/MnrepnrO5834ickcozYpG7QxPktcNjIxPGWbiSEZPZIgSpZnReOfz
      K4L+/uGKiSfmc7Wd0BvMsFhtOHKpFQaTBa/uuYSOPh2OVLQKWnrqHdKjrs31ZZ+ZnK7uwJma
      jiltiW02Hq/uuYTzdZ0eO+91Or0Rv3jjGJ7fudqeqtrSNXTL5renjBnMOF7ZhrvL0iDiWBSk
      RWJBqhbjRgtq2/pR29aH1q5hDIyM27OdpGIO6kAZYsJUSI0JRkZcKEKDAuZdbx9HUQAgPqk8
      Nw5vH6iC0UO53SsKEpAcrYFUzAk6x/VW0jxgnwbWORlwmrsmbmxCA1BDx6BHi9x4AG/su4yS
      zGj7DayiqRsfn6z32Dlv1t6rw2ufVmDXPcVgGAYXG7q9OnTmbO013F2WZv8zwzAIkIlRkKpF
      QarWa9fh62gJiPgkbbASyxckeOTYKoUU6xYmg2PZ29IC2ZNtFa5r6Rqyr8WbzFa8tPu8R4PO
      dD4722S/BqEb5LHhKvtcXYnoi77/Cdog+xJOuIBGd40dc2+GEwoAxIc9uDoHGqXMrcdkmIlZ
      uOrJ464tTnbr8X0FD+BUdQcA4PClFo/sN8zFxvN451A1rDYbOgW2alhbnGwf4VmYFokvr8oG
      AGwpT8eqgokh9isLEuY8zqjBhBE3ZDjd6SgAEJ8VrJLjye0lM/aEd8aKBQlYv/CLm35uUviU
      1E5Pkog4BCmFtW8Qi9gpP7dUzIGdXM4JDJDYn5JnU3W1B1arDR+dqHPugt3gXO01tHYPY8wo
      rN2D3mCyJwDERQTZ01q7B/RQKaQIDBBW7Ha9upnMjgIA8WlF6ZH41raFbulPX5gWiW9sLQZ7
      w7HEIg4Pr8vzyrjGZfnxkEuENW7bUp4+pc3A979Sjoz4UKwsSMCKBQnYtCgV8RGzZ0p1D+pR
      3z6Apts0kB6YqBE4WtkmvNMpP9EZNEQlx+i4acqm+qenG7C+JAVen615B6MAQHwawzBYVZiI
      33xrvcNpm9cFKaX49n2l+NFDSyCbJpVvQYoWj27Id/VSZ1WUFokHVmcLXpaw2mzgWAZyqQg5
      ieGobe0DxzJQK2UY0I3jg2N1sxZdARPZMHvPumeamiuOVrQKfnIHgDPVHXhiUwFOXZnaqmNY
      b8S1vhGkx4bMeQyWYezLfGRm3LPPPvvs7b4IQuaiSRiiFAAAEoFJREFUCZRhaW4cokIDca1/
      RFAFq0ohxfqSFPyvBxYjMz5sxupihmGQHhsK/bgJdQI3Kx2RoFXj33ZMBJ/dx+oEDTDJiA/F
      pYZupESHIDFKgystvWAYBkcqW6FRynB3WRp6h8dmHV7PsSwMJotbqn1dYTRboA1WokdA0Ztu
      zIj23hEMjIyjtUcHnd6IYb0RujEjdJMBYFhvnDPjKjhQ7pXxm/MdpYGSeYPjWKwoSMCy/HhU
      NnXjSEUrLjV2o183BjHHQSETQ6WQIkGrRm5SBBZmREGlELbmzrIMHr+rADaex8cnG9x2zYmR
      ajzzyDKolTIYJxuWCW1/3NqjQ3luHPqGxsDbeIBjEBoUgEuN3RgcNSA1OviWgqsbiUUs+nVj
      M35/OhIxh5zEcHu9gFopQ2SIEtUtfQhSSFGaFY3O/lFUNvUIPqbZYoMmUNjTeFvPxGb19VTb
      1sk/X/+61cYLKrrLvqFYj8yMAgCZF3iex7X+UZy60o6L9V242jmIMaMFNn6yBTFvRRAnRbxW
      jcXZMViQqoVU7Ng/bxHH4mubixAfocaf91x0qWcNyzAoz43FN7cttA9skYg5BKvk6NeNz/Fp
      4GrnEKxWG6pb+tDWMwyeBziWQYJWjVWFiTCaLNhzevZAJZeKMeZgr31VgATbl2Wgs38Enf2j
      WFGQgBCVHLVt/XhwdQ7eOVSN3KRwLMqKwckrwrupJkVqcKKq3WvjG51dLvQ3FACIz2vpHsJr
      n1bgYkPXjDcQm41H96Ae3YN6fH6hGeEaBe5enIaNpSkOtQBgGQYbSlOQlRCGVz46j4tOtE3Q
      Bivx0Lo8lOfETtlwZhgGabEhqBewzHS9XcPpyVTO6zr6Rm752kziI4JwpaXXgSufcL6uC/kp
      WvQMNkLMsdCPmxATpkJVcy/6hsfw+cVmPLg616EAoFHJkZMY7lDLDGeplTIsTI/y+HnuBBQA
      iM8yGC1468Bl7D5e53DxVM+gHv/34wvYe6YR376vFGkCNg5vFBcRhGcfX4HGa4P45GQ9LtR3
      zfrkrpCJkRkfipUFiSjNip6xVXBZTiw+OuGditwleXGobXO8+drwqAHBKjkSItW42jWE5CgN
      xBxr77PvTD2ZVMThnqUZuNjQ5dTnHbGxNAVKBzad/RllARGfNDRqwHOvH8F7R2pcqpxt79Xh
      mVcO4khFKxydfsowDFKig/HUvaX47+9twgtPrsfT95agPCcWoUEBEHEslHIJkqI0WJIbh6K0
      KCjkEugN5hnPlRkfigjN3JWsrgoOlGNRVozDy2DXdfTpsKYoCVWTa/3tvTrkJIaDYxmkxgRj
      wMG9BZVCirykCCzOdn+b5huFqxXYUj6/p3R5E70BEJ8zOm7CT/98SFBveyEMJgv+8+0TsFis
      WFmY6PDnx41mXGzowsHzzahu6ZuSVTM6bsLouGnKtTIMkBipQWlmNFYsSIA2RGn/HseyuGdp
      Bl784JxrP9QcNpenIUAmRqg6QNCew3VjRgtauofR3quDmJuYA1zT2gej2YrDl1pw34osjI6b
      5py2diMRxyJYJQfLMti5uRg1rf0YcOCahBJz7MSei0xYrQWhofDEx1isNvzyzWM4dUXYOrcj
      pBIOP3tiFVIFLgcZjBZ8drYR/zxWi94hx5547ecUcyjNisYDq3MRFaIEwzAwmCz48Uv70eCh
      fjUxYSr8atdaBMjEePGDc15tAjedEJUcL/9gi72SubKpBz/7y2GMm9w7GOaJTQXYXJZ2x3fw
      dCdaAiI+Zc+pBo/c/IGJqV4v/P2kfSLXTHieR2VTD77/4md4+aMLTt/8AUw+Obfi27/7BK/t
      rcC40QyZRISntpdOW5TmKomYw5Pbv3gKvh3N7m5WmBZpv/kDE+03fvjQEkHtLITgOAYPrc2l
      m78TKAAQnzGgG8ffDlZ59BwdfSP459HaGdfoLRYb/nG4Bj/98+do6RI+Y3cuZosN7x6qxk9e
      PohrfSNIiFTjyW0L3drniGMZ7NpajIy4UPvXchLDBddCeEp5buwtX8tP0eK5r61GYqTapWOr
      FFJ8/4Fy3Lsii27+TqAAQHzGntMNs1a2ussHx2unzY+3WG344/tn8JdPL3ksX72hYwA/emk/
      GjsGsDQ/Hv/y5cWQSVwfLi4RcXj63lKsKkycciOUSURY6aG22kJEhwYiO2H6oqykKA1++Y21
      +MqaXIfX7cUiFquLEvGbb67DouyYKW8YRDjaAyA+wWKxYdcLHwlqF+AO39hajI2lKfY/my1W
      /Pf7Z3DgfLNXzq9SSPHTx1cgMVKN5q4h/O7d005veseEqfD0vSVIiw2Z9im4d0iPp377idvX
      3IXYtbUYG274Pc9kcGQcRypacayyDU2dgzBNM6RHLGIRoVFicXYMVhYmICokkJ76XUQBgPiE
      mpY+/ODFfV47X2FaJP7jseUAJtb839h32ePLTzeL0Cjw/M41CFbJYTRbcODcVfzjSI1DQTA5
      SoPCtEiYLFbwPCCXihChUSAxUoP4iCBwk0tMb+yrxNsHvPvzJUaq8ctdayGZoSZiOjzPo3d4
      DO09OgyOGGA0WyAWsQhVBSA6TIWQIPmMPZ2I4ygNlPiEy1eF9ZbhWAZWGz/xys9MVACzLAMG
      mDJykGWZWefzNk8+ZUrEHC7Ud+GdQ8JmA7tT96Aef3jvNH7y8DJIxSJsXJSKNcVJuFDfhXO1
      nahv70efbgxmsw08+IniMh5T0lAbrw2icZo3B4aZqAUoy4nF8gUJ2L4sE6erO3DVS62hpWIO
      u+5Z6NDNH5iovQhXKwRN/SKuowBAfEJbz9wbrgwD3LM0A+8eqsbSvDiolFLsPlaHDSUp6BnS
      Qz9uQnVLH2LDVYgOVc3aqmBIb8SAbhzKAAn+tPucoGHunnCuthMHLzRjddFEfYJYxKEkMxol
      mdEAJmoYDCYLTGYrPj5ZLzj/nueBft04dh+vw8cn61GeG4vHNy7Ar9467pVBKY/fVSCobTO5
      vehdiviEgRHDnH+H5wGpWASOneiKeb3JmlopQ2VjNxakTAz7zk/Rom6OFgg2Gw/dmBEfnqiz
      D3y/Xd7YVwn9+PQ3ZZlEhKFRA/73q4fw3pEawZO1bmS18Th8qRXPv3EMy/PjPVooxTATozw3
      lNyZozbvNBQAiE8wW27d9JtOv24M4RoFrDYbRsZMiNAoMDJmhNFsBcMwEHHsxNAUAQFFN2bE
      B0drXb10l/UNj+HgheZpv1fR2I1nXjlob4fsijGDGZ+cakB+cgRUAe5PDWVZBjvW5uH+ldm0
      OTtPUAAgPkEqsGNnbWs/VhclobVHh4b2fmwsTUFdWz+AiRTLxdkx6J5jWMh1xyvbBPfm97QP
      jtXesgxV19aP5147Ap0bU2OtNh4nqtqxpjgR+SkRbjtumDoAP9yxBPctz5zSAZX4NgoAxCeE
      Cdz06+jTITshDLWtfWjt0SE9LhTNk0NRrjT34O6yNEHtkkUci8omx1s9e0rPoN4eyICJtMjf
      vH3CY6mbHx6vx9byDHxjazFCVHKnjyOTiLBpcSp+vWsdSjKj6cl/nqE0UOITPjpRhz/tPu/y
      cSQizt62eDZijoXVxsPmQ//8712WiUc25IPnefz6reM4Wtnm0fNFaBT47VMbwDDA4UstOHSp
      BbWt/YK6r0aGTOTj37UoVXDwJr6HsoCIT7i+gesqITd/AJBIOOjHfWP557q69n7wPI/LV3tx
      okr4sBVndQ/q8cGxWjywOgfrS1KwtjgZAyPjuNLci5buYXT1j0JvMMFm4yGXihCsCkBMWCAy
      48MQE65yOMWT+B4KAMQnaEOUiAsPQquAdFB3iAwOREOH+wfAu6KzfwRGsxX/OFw9pabBkz45
      1YBNi1MRGCAFO5ldtSw/3ivnJrcf7QEQn8CxLDaUeid1UBusRFxEkNOfDwyQIF478fmcxHBE
      BE8sgWQlhEEsYpESrXHquEOjRrR2D6Oi0Xt7E0OjBo91XyW+jwIA8RmrChOhDVbO/RdddN+K
      zDlbQs/GbLGhdLJQa2FGFApTJ9od5yVHQCzikBkf5tRxLVYbjla0ujQBzRlnaigA+CsKAMRn
      yKVifH1zoUc7O+YnR2BVQaJLSywGkwVSsQgyiQh9w2NQyCUIVsndMuWq4jZkJl1p7nN4XCa5
      M1AAID6lMC0SW5Z4ZqarWinFk9tLwHEsxCLX/ukPjIyjKD0SDR0DMJmtyEoIQ317/9wfnEOX
      wBqGBSlaBE4OPv/KmlxIJRwkYg7FGVH2768XWI07Om5C37D7RzQS30cBgPgUhmHwyLo8rHJi
      du9sghRS/OSRZQifHMiuVshcOl5NSx/WLUzG1c4hNF0bQHluLNp7XavW5diJcZFCjBvNyEoI
      gyZQhohgBRK1akSFBNozc7ISQhGkkAkKdDzPQ6efu3Ka3HkoABCfw3EsvnlPMe5alAJ3LAZp
      g5X498eWIzXmi+ZkkaGBLh2zpXsYH5+oh8FkQX37AD470wSzxQaT2er0Mo4yQCI4tbK5awhx
      4UFIjw3FJycbkBipQUq0BvXt/QgMkGBkzISmzkEkRwXPeSweEBx4yJ2FAgDxSWIRh51bivEv
      D5Q5XanKsQyW58fj5ztXIyV66o0wycVRhBarDacmK46NZivO1l6zf93ZUZJJkRrBLTGMk62s
      tSFKNHQMQCETIyQoAH3DY8hLjkBUaCDSYoLtS0JzEVNOv1+iOgDi05bmxaEgVYtPTjZgz+kG
      9A3PPaBdLGKRn6zFl1ZmIX2GKVkJkWoEKaReGUEpVFF6FHoG9dAJbNc8OGJAaFAALFYbTBYr
      FGIOPA/ERQThlY8uwGq1Yce6PPsMhZmwDAO10rUlMTI/UQAgPk8pl+BLK7OwuTwNV5p7UdnU
      g8ZrAxjQjcNksYJlGATKpYgOC0RabAiK06Psa/0zUcgkyIwPxUkfyYEXcSwK07SobOpGR9+I
      oM8cvtRif2M4eKHZPmB+39kmeyrpR8frJgPgzAFAGSBBSJDz/YDI/EUBgMwbMokIhWmRKEyL
      BABYbTbYbDwYhgHHMg43IltbnOwzASA9LgTRoSrkJIQLLswaHTdhdDJ558YhL71DX7wlDY7O
      vbmbHKWhMYt+iv6rk3mLY1mIRRxEHOtUF8qCNC2iXNwMdpet5ROpryWZ0R6tg5jO9eljxP9Q
      ACB+i2NZPLAq53ZfBtLjQuxvNeEaBXKSwr127sAACZbkxnntfMS3UAAgfq08Nxa5Xrzh3oxl
      GHx1Y4E9C4dlGWxbmgFvvQSsLkyESuH+6WBkfqAAQPyaiGPxrW0LPTondzbblmUgIz50ytcK
      UrUoTheWvumKYJUcX1qR7fHzEN9FAYD4vciQQDy1vQQizrtr74VpkdMuQTEMg69vLkKQB5/M
      OZbBzs1FUE62kyD+iQIAIQDKcmLxtbuLwHlpnm1abAj+9YEySGYo/ArXKPAvX14MmcQziXr3
      r8zGouwYjxybzB80EpKQSTzP4+CFZvzxvTMebcm8IFWLf32gDEr53E/fZ2o68Ou3TritVQMD
      4N7lmdixNo+GtxMKAITc7HJTD/7rnZPoGZq76tgRHMvgrsWpeHhdHqRi4U/2NS19+M+/n0D3
      gN6l88slIjy6cQE2lCTT8HYCgAIAIdMa1hvx+t4K7D9/1S1vA7HhKnzt7iLkJYc7dfPV6Y14
      c/9l7D3T6PD1MAyQlxSBJzYVIC4iiG7+xI4CACGzaOgYwPtHanCuthNjTkwRS4hUY2t5Opbm
      xbml4Vpr9zD2n7+KoxWtc/ZFCpCKUZwRhbXFSchJCvd6gRnxfRQACJkDz/MYGDHg1JV2XGro
      Qk1rP/QGE8yWqU/iHMtAKhYhIliBwtRILMyMQmpMiL1Hjzuvx2yxobVnGDWtfege0GN41AAe
      gFwqQmRIIJKjNEiMVEMpl9ATP5kRBQBCHGS12tCvG8fQqAFjBjPMVitkEhE0SjmClFIEBlBh
      FZkfKAAQQoifojoAQgjxUxQACCHET1EAIIQQP0UBgBBC/BQFAEII8VMUAAghxE9RACCEED9F
      AYAQQvwUBQBCCPFTFAAIIcRPUQAghBA/RQGAEEL8FAUAQgjxUxQACCHET1EAIIQQP0UBgBBC
      /BQFAEII8VMUAAghxE9RACCEED9FAYAQQvwUBQBCCPFTFAAIIcRPUQAghBA/RQGAEEL8FAUA
      QgjxUxQACCHET1EAIIQQP0UBgBBC/BQFAEII8VMUAAghxE9RACCEED9FAYAQQvwUBQBCCPFT
      FAAIIcRPUQAghBA/RQGAEEL8FAUAQgjxUxQACCHET1EAIIQQP0UBgBBC/BQFAEII8VMUAAgh
      xE9RACCEED9FAYAQQvwUBQBCCPFT/x/Zft1/sjkcZQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Clinton Minus Trump Raw' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Clinton Minus Trump Raw, Cleaned Data' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Count of Polls by Population' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3ce3Bc5WH38d/Z+652JVlaXZCRbcmWL8W27FiYWI5LSIEA5hLCbUwgCcyU
      dDJtyLRMLzNJBqYTMp02Q6fpZJgyxQ0lMYGWlMQpxtjm4pj4gmwE0chgLMvGsrB1X2m193Pe
      Pzzel60EGGNLrJ7vZ8Yz9u6zZ59d2+e75zlnZTmO4wgAYBTLsizXdE8CADA9CAAAGIoAAICh
      CAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAICh
      CABQZGzb1tjYmFKp1HRPBUXOM90TAIrB8PCwjhw5Itu2JUk+n0/19fUqKSmRx+ORZVlTNpfB
      wUH90z/9k1auXKk77rjjrB7jOI5yuZwkye125+frOI62bdum3t5eXX311aqtrb1g88ZnDwEA
      zkJ7e7u+973vKZFI5G/zer266qqr9O1vf3tKd5ypVErt7e2qrKw868fE43E98cQT8vv9+vrX
      vy6v1yvpdAC2b9+u/fv3a8WKFQTAMAQAOEsul0u33367vvCFLygWi2nbtm3avn27SkpK9MAD
      D8jtdks6vVPNZDKSTkfiw44OcrmcbNvO74zPB9u2Zdt2wad8ScpkMmpvb1cgEFA2m80/p2VZ
      +s53vqNEIqHZs2dP2FYqlZLP58u/tg97zjPbnMojIXx6BAA4S5ZlqaGhQa2trZKk1tZWfetb
      39Lu3buVy+Xkdrs1Pj6u5557Tp2dnXK5XGpubtZ1110nv98v27b1+uuvq6urS01NTXr55ZcV
      j8e1aNEi3XTTTQoEAorH49q8ebPq6uq0du1auVwuxWIx/eY3v1FTU5NWr1496dy6urr02muv
      6b333lMmk1F9fb1uvPFGVVZWqqenR//7v/+r3t5euVwubdy4UV6vVy0tLVqxYoXee+89dXV1
      af369QoEAnIcRydOnNCvf/1rHT16VOXl5br88su1Zs0aSafDtXnzZknS4sWLtWXLFg0MDKih
      oUG33XabwuHw1PyF4FMjAMA5ikQiKi8vV2dnpxzH0ejoqL7//e9r//79mj9/vnK5nHbs2KG2
      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
      3rx5WrBggQKBwFnNlQCcPwQA+HQsy7KK/iRwOBzWokWLtGjRoo8cF41GJ1zn/0GWZamqqkpV
      VVUfOaampkY1NTXnPF8A+Kwo6nMAAIBzRwAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAA
      wFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAA
      wFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAA
      wFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAA
      wFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAA
      wFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAA
      wFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAA
      wFAEAAAMRQAAwFAEAAAMRQAAwFAEAAAMRQAAwFCe6Z7A+eA4jtLptBKJhGzbVigUUiAQyN9v
      27aSyeSEx3m9Xnm93vyfc7mcxsbGlM1mFQwGFQwGZVlWwWPOjMlkMiopKVEgEJgwBgCKQdEH
      IJfLqaOjQ7t371Z/f78ymYxmz56tK6+8UvPmzZMk9fX16dlnn1U2my147IoVK7Ru3TpJUjab
      1e9//3u99tprisfjqqqq0s0336yLL744P95xHG3fvl0HDhzQ2NiY6uvrde2116q+vn7KXi8A
      nC9FvwS0bds2Pfvss2psbNSGDRt05513yufzaePGjUqlUpKk48ePKxaLad26dfrSl76U/7Vg
      wYL8dl577TVt3bpV1113nb7zne9ozpw52rhxo95//31Jp3f+L7/8sl577TVde+21+u53v6uy
      sjI9/vjjGhkZmZbXDgCfRtEfAVx00UW69957VV9fn1+KKS8v16OPPqr3339fc+bMUX9/v6qr
      q9Xc3Dzpcs2ZT/9//Md/rGXLlkmSrrnmGr3zzjvq6OhQbW2tRkdHtX//fl155ZVaunSpXC6X
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Count of Pollsters by State Treemap' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Duration Boxplot by Grade' width='384'>
      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
      qo7IDAYD/wa20yAtnajOwQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Duration of Polls Boxplot ' width='384'>
      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
      y47kluUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='158' name='Sample Size Boxplot' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 11' width='384'>
      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
      b8di4D+UAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 12' width='336'>
      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
      tdf/A95tI4MfeBVXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 13' width='246'>
      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
      evHFF2N2vl0ul5YtW6Y33nhDPT09+uqrr4bGPB6PvF6vurq6Rr1+dDz6XBsTE2En2W+//SZJ
      Wrt27YjHFBcXq6CgQC0tLUN/gkv/G2soFNLg4OCI5167dm3oWExchJ1kra2tkqT8/PxRj8vP
      z9fAwEDMy1YFBQXq7e1VY2Nj3HMcx1F9fb3cbnfM83NMPISdZAUFBZKkpqamEY/p7+/X77//
      rqysrJj3ildUVEiSTp06Ffe8pqYmdXR0aOnSpWx8TXCEnWTLli2TJFVVVenKlSvDxvv7+7V/
      /351dXVpyZIlmjx58tBYaWmpfD6fGhoaVFNTE3Nee3v70Etnq1evTtj8kRm4uysFvvnmGx07
      dkxut1vLli3TggUL5PV6dfXqVZ0+fVqdnZ3Kz8/XO++8o6lTp8ac29zcrL1796q/v18rVqxQ
      cXGxQqHQ0DvZVq1apZdeemnM+7nHwt1dmY2wU6Surk7ffvut2tvbYx7PysrS6tWrtWXLlhHD
      unjxovbt2xezQ+52u7Vu3Tpt3bp13FFLhJ3pCDvFOjs7FQwG1dfXpzlz5mj27NmaNGnstxc4
      jqNgMKjLly8rLy9PRUVFY7555U4QdmYjbMRF2JmNzTPAIMIGDCJswCDCBgwibMAgwgYMImzA
      IMIGDCJswCDCBgwibMAgwgYMImzAIMIGDCJswCDCBgwibMAgwgYMImzAIMIGDCJswCDCBgwi
      bMAgwgYMImzAIMIGDCJswCDCBgwibMAgwgYMImzAIMIGDCJswCDCBgwibMAgwgYMImzAIMIG
      DCJswCDCBgwibMAgwgYMImzAIMIGDCJswCDCBgwibMAgwgYMImzAIMIGDCJswCDCBgwibMAg
      wgYMImzAIMIGDCJswCDCBgwibMAgwgYMImzAIMIGDCJswCDCBgyalOoJwKand1elegqmVb//
      wqjjrNiAQYQNGETYgEEux3GcVE8C6SccDisnJyfV08B/xIoNGETYgEGEDRhE2IBBhA0YRNiA
      QYQNGETYgEGEDRhE2IBBhA0YRNiAQYQNGETYgEGEDRhE2IBBhA0YRNiAQYQNGETYgEGEDRhE
      2IBBhA0YRNiAQYQNGETYgEGEDRhE2IBBhA0YRNiAQYQNGDQp1ROATU/vrkr1FEyrfv+FUcdZ
      sQGDCBswiLABgwgbMIiwAYMIGzCIsAGDXI7jOKmeBNJPOBxWTk5OqqeB/4gVGzCIsAGDCBsw
      iLABg7gJJMlaWlp0/fr12zrW7XZryZIlcrlcw8bOnz+v5uZmXbp0STNmzFBJSYnKysqUnZ19
      t6eMDMSueJLt3btXv/zyy20f//HHH8vr9cY8dvDgQR0+fHjYsX6/X7t27dL06dPHPU92xTMb
      YSdZS0uL/v7771GP+fvvv/X9999rzpw5eu+992JW7Orqah06dEh5eXnavn27Fi1apLa2Nh05
      ckS1tbXy+Xzas2fPsF8Gd4qwMxt/iidZUVGRioqKRj3miy++kCRt2rQpJure3l4dO3ZMOTk5
      2rlzp/x+vySpsLBQlZWV6u/v19mzZxUIBLR27dqE/QxIf2yepZlr167pzJkzmjlzph5++OGY
      sUAgoEgkooqKiqGoo9xut7Zt2yZJOnHiRNLmi/RE2GnmyJEjGhwc1MaNG5WVlRUzVltbK0la
      uXJl3HN9Pp8WLlyo1tZWBYPBhM8V6Yuw00hHR4d++uknTZ8+XY899tiw8VAopPz8/GGr9b+V
      lZUNHYuJi+fYaeSHH37QwMCANmzYoMmTJ8eMOY6jrq4uzZs3b9Rr5ObmSpI6OzvHPZ8bN26M
      +xpIDcJOE11dXTp58qSmTp2qNWvWDBvv7u7WrVu3xnwpa9q0aZI04mvl4XB4/JNF2iPsNHH0
      6FHdvHlTmzdvlsfjGTYeiUQkKe7Yv0XH+/r6xj2n6C8JZB7CTgM9PT2qqamR1+vV448/HveY
      aGTd3d2jXis6PtLKfruvTbOyZzY2z9LA8ePHFYlEtHbt2hHD83g88nq96urqGvVa0fHoc21M
      TISdYn19fTp+/LimTJmi9evXj3psbm6uQqGQBgcHRzzm2rVrQ8di4iLsFKupqVE4HFZFRcWY
      z2kLCgrU29urxsbGuOOO46i+vl5ut1tz585NxHSRIQg7hfr7+3X06FFNmjRJGzduHPP4iooK
      SdKpU6fijjc1Namjo0NLly5l42uCI+wUOnnypG7cuKFHHnlEeXl5Yx5fWloqn8+nhoYG1dTU
      xIy1t7dr//79kqTVq1cnYLbIJOyKp8jAwIB++OEHud1ubdq06bbOcblcevnll7V3715VVVWp
      paVFxcXFCoVCCgQC6uzs1KpVq7R48eIEzx7pjts2UyQQCOiLL77Qww8/rMrKyjs69+LFi9q3
      b1/MDrnb7da6deu0devWuB/McKe4bTOzEXaGchxHwWBQly9fVl5enoqKisZ888qdGG/YfI1u
      Yo31Nbr8KZ6hXC6X/H7/qDeEYOJi8wwwiLABgwgbMIiwAYMIGzCIsAGDeB0bcfEGlczGig0Y
      RNiAQYQNGETYgEGEDRhE2IBBhA0YRNiAQYQNGETYgEGEDRhE2IBBhA0YRNiAQYQNGMTHDyMh
      +FzxxBrrc8VZsQGDCBswiLABg/jMM8TFZ55lNlZswCB2xZEQ7IonFrviwARE2IBBhA0YxK44
      4mJXPLOxYgMGETZgEGEDBhE2YBBhAwYRNmAQYQMGETZgEGEDBhE2YBBhAwYRNmAQYQMGETZg
      EGEDBhE2YBBhAwYRNmAQYQMGETZgEGEDBhE2YBBhAwYRNmAQYQMG8W2bSAi+bTOx+LZNYAIi
      bMAgwgYM4ts2ERfftpnZWLEBgwgbMIiwAYN4HRsJwevYicXr2MAERNiAQYQNGETYgEGEDRhE
      2IBBhA0YRNiAQYQNGETYgEGEDRjE/diIi/uxMxsrNmAQd3chIbi7K7G4uwuYgAgbMIiwAYMI
      GzDofwDs6yj69Q441AAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
